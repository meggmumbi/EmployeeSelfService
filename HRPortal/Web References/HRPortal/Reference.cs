//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace HRPortal.HRPortal {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="HRPortal_Binding", Namespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal")]
    public partial class HRPortal : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback FnNewPerformanceLogEntry2OperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetPlogLines2OperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetSubPlogLines2OperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSuggestPlogLines2OperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSuggestPlogandSubPlogData2OperationCompleted;
        
        private System.Threading.SendOrPostCallback FnUpdatePerformanceTargetLinesDetails2OperationCompleted;
        
        private System.Threading.SendOrPostCallback FnRemovePerformanceLogLine2OperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertPlogSubActivities2OperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSendPlogApproval2OperationCompleted;
        
        private System.Threading.SendOrPostCallback FnCancelPlogApproval2OperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGeneratePlogReport2OperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteAccomplishmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateChecklistCriteriaOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteChecklistCriteriaOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateDailyWorkTicketRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateDailyWorkTicketLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateDailyWorkTicketLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteDailyWorkTicketLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendDailyWorkTicketForApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelDailyWorkTicketApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateIndividualPerformanceContractOperationCompleted;
        
        private System.Threading.SendOrPostCallback SuggestObjectiveLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback PopulateGoalsHubOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteObjectAndInitiativeLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnCreateNewFileRequsitionOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnCreateNewFileRequsitionLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnUpdateFileRequsitionOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnUpdateFileRequsitionLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendFileMovementforApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendVehicleMaintenancetforApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelVehicleMaintenancetforApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteFileMovementRecordLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelFileRecordApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnNewIndividualPerformanceContractOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSuggestObjectiveLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSuggestAppraisalObjectiveLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSuggestJDOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSuggestCompetencyTemplateOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnNewCoreSecondaryMandateDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnUpdateObjectiveLinesDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnUpdateJobDescriptionDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnUpdatePerformanceTargetLinesDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnNewPerformanceLogEntryOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnNewPerformanceAppraisalEntryOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnDeleteIndividualCardSubActivitiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnDeleteIndividualCardJDDescriptionSubActivitiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnDeleteIndividualActivitiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnDeleteAdditionalActivitiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnDeletePlogLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnNewIndividualCardSubActivitiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnUpdateIndividualCardSubActivitiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnNewIndividualCardJobDescriptionSubActivitiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnUpdateIndividualCardJobDescirptionSubActivitiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSuggestPlogLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetImprestApproverCommentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendPerformanceContractforApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitSelectedPLogCategoriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitSelectedAddPLogCategoriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitSelectedJDPLogCategoriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitSelectedPerformanceContractCategoriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnUpdateJobContractDescriptionDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnNewIndividualCardAdditionalActivitiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnAddAditionalInitiativesTargetsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnNewJobDescriptionDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnDeletePerformanceContractCategoriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnDeleteAdditionalPerformanceContractCategoriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnDeleteJobDescriptionOperationCompleted;
        
        private System.Threading.SendOrPostCallback FNewPerformanceTargetLinesDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnCreateCandidateDocumentsLinkOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnCreateBusinessResearchResponseOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnCreateBRResponseQuestionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertJDTargetsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitStandardAppraisal1OperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertStandardAppraisalObjectivesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertStandardAppraisalProficiencyOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGeneratePCReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGeneratePCSIReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGenerateSubIndicatorsReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGenerateBoardPCReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGenerateCSPReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGenerateAnnualWorkPlanReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGeneratePLogReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGenerateStandardAppraisalReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateRMReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateManagementPlanSummeryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateRiskFrameworkTestOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateIctRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProvideIctfeedbackOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateIctRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback AssignHelpdeskRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback EscalatedHelpdeskRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback ResolveHelpdeskRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReopenHelpdeskRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback FngetImprestLineNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertOpenSurveyResponseOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertMultipleSurveyResponseOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertSingleSurveyResponseOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertBranchingSurveyResponseOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitSurveyOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddImprestSharepointLinksOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddLeaveSharepointLinksOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddImprestSurrenderSharepointLinksOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddStaffClaimSharepointLinksOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddStoreRequsitionSharepointLinksOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddPurchaseRequisitionSharepointLinksOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddFleetRequisitionSharepointLinksOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddemployeepassportphotoOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnLockStaffPerformanceContractOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSignStaffPerformanceContractOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateNewTrainingFeedbackOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateTrainingFeedbackLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateSubmitTrainingFeedbackOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateNewTrainingEvaluationOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertEvaluationLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddTrainingParticipantsOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditTrainingParticipantsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteTrainingParticipantsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddTrainingCostOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveTrainingCostOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitStandardAppraisalOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnCancelSubmitofStandardAppraisalOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitStandardAppraisalObjOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitStandardAppraisalPEOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertStandardAppraisalPIPOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnEditStandardAppraisalPIPOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnRemoveStandardAppraisalPIPOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertStandardAppraisalTrainigNeedsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnRemoveStandardAppraisalTrainigNeedsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnEditStandardAppraisalTrainigNeedsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitStandardAppraisalConfirmationOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSendAppraisalEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnAppraisalSuggestObjectivesOutcomesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnNewStandardAppraisalOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnLoadCompetenciesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitSelectedPLogCategories2OperationCompleted;
        
        private System.Threading.SendOrPostCallback ResetPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback LeaveApplicationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GeneratePayslipOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateNewTrainingRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateNewTrainingNeedsLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendTrainingNeedsApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelTrainingNeedsApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateNewTrainingApplicationOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateTrainingRequisitionOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendTrainingRequestApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelTrainingRequestApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateTrainingApplicationLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnEditTrainingApplicationLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateTrainingReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnTrainingCostsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnDeleteTrainingApplicationLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnCancelIndividualScorecardApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitSelectedAdditionalInitiativesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSendIndividualScorecardApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendTrainingApplicationApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateNewTrainingFeedback1OperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateTrainingFeedbackLines1OperationCompleted;
        
        private System.Threading.SendOrPostCallback FnEditTrainingFeedbackLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnDeleteTrainingFeedbackLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateTrainingEvaluationOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateTrainingEvaluationLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateNewDailyWorkTicketOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateNewDailyWorkTicketLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnEditDailyWorkTicketLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnDeleteDailyTicketLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnEditTrainingNeedsRequestLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnDeleteTrainingNeedsLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGenerateTrainingApplicationReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGenerateTrainingPlanReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGenerateTrainingFeedbackReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGenerateTrainingEvaluationReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateP9OperationCompleted;
        
        private System.Threading.SendOrPostCallback RegisterOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddHobbyOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateGeneralDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatePersonalDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateCommunicationDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddRefereeOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddQualificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApplyOperationCompleted;
        
        private System.Threading.SendOrPostCallback ImprestGeneralDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetImprestObjectiveOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddTeamMemberOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddFuelOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddCasualsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddOtherCostsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendImprestMemoApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateImprestSurrenderOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendImprestSurrenderApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateSurrenderLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreatePurchaseRequisitionOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreatePurchaseStoreRequisitionOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateRequisitionLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendPurchaseRequisitionApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateFleetRequisitionOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddFleetRequisitionStaffOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddFleetRequisitioNonStaffOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddFleetRequisitioLoadItemsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendFleetRequisitionApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveStaffFromTravelRequisitionOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveLoadItemsTravelRequisitionOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveNonStaffTravelRequisitionOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveFuelDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveMemberFromImprestMemoOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddTripRequisitionDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddTripAccidentDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddVehicleMaintenanceRequestDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SubmitVehicleMaintenanceRequestDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SubmitVehicleFuelRequestDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendMaintenanceRequisitionApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteTripAccidentDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditTeamMemberOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveFuelFromImprestMemoOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditFuelOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveCasualsOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditCasualsOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveOtherCostsOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditOtherCostsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateLeaveFormOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendRecordForApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelRecordApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangePasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteRequisitionLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendStaffClaimApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateStaffClaimOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteStaffClaimLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateStaffClaimLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditStaffClaimLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendStoreRequisitionApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateStoreRequisitionLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApplyexternalHrJobsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApplyinternalHrJobsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddEmploymentHistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddAcademicQualificationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddProffessionalQualificationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddTrainingAttendedOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddProfessionalBodyOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddApplicantAccomplishmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddAbilityDetails_AccomplishmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddAbilityDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateRefereeOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddCurrentDutiesSkillsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddOtherPersonalDetails1OperationCompleted;
        
        private System.Threading.SendOrPostCallback AddOtherPersonalDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddDutiesDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteAcademicLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteProfessionalLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteTrainingLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteProffessionalBodyLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteEmploymentHistoryLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteRefereeLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddDeclarationOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateAccountForExtenalApplicantsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ForgotPasswordtForExtenalApplicantsOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public HRPortal() {
            this.Url = global::HRPortal.Properties.Settings.Default.HRPortal_HRPortal_HRPortal;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event FnNewPerformanceLogEntry2CompletedEventHandler FnNewPerformanceLogEntry2Completed;
        
        /// <remarks/>
        public event FnGetPlogLines2CompletedEventHandler FnGetPlogLines2Completed;
        
        /// <remarks/>
        public event FnGetSubPlogLines2CompletedEventHandler FnGetSubPlogLines2Completed;
        
        /// <remarks/>
        public event FnSuggestPlogLines2CompletedEventHandler FnSuggestPlogLines2Completed;
        
        /// <remarks/>
        public event FnSuggestPlogandSubPlogData2CompletedEventHandler FnSuggestPlogandSubPlogData2Completed;
        
        /// <remarks/>
        public event FnUpdatePerformanceTargetLinesDetails2CompletedEventHandler FnUpdatePerformanceTargetLinesDetails2Completed;
        
        /// <remarks/>
        public event FnRemovePerformanceLogLine2CompletedEventHandler FnRemovePerformanceLogLine2Completed;
        
        /// <remarks/>
        public event FnInsertPlogSubActivities2CompletedEventHandler FnInsertPlogSubActivities2Completed;
        
        /// <remarks/>
        public event FnSendPlogApproval2CompletedEventHandler FnSendPlogApproval2Completed;
        
        /// <remarks/>
        public event FnCancelPlogApproval2CompletedEventHandler FnCancelPlogApproval2Completed;
        
        /// <remarks/>
        public event FnGeneratePlogReport2CompletedEventHandler FnGeneratePlogReport2Completed;
        
        /// <remarks/>
        public event DeleteAccomplishmentCompletedEventHandler DeleteAccomplishmentCompleted;
        
        /// <remarks/>
        public event UpdateChecklistCriteriaCompletedEventHandler UpdateChecklistCriteriaCompleted;
        
        /// <remarks/>
        public event DeleteChecklistCriteriaCompletedEventHandler DeleteChecklistCriteriaCompleted;
        
        /// <remarks/>
        public event CreateDailyWorkTicketRequestCompletedEventHandler CreateDailyWorkTicketRequestCompleted;
        
        /// <remarks/>
        public event CreateDailyWorkTicketLineCompletedEventHandler CreateDailyWorkTicketLineCompleted;
        
        /// <remarks/>
        public event UpdateDailyWorkTicketLineCompletedEventHandler UpdateDailyWorkTicketLineCompleted;
        
        /// <remarks/>
        public event DeleteDailyWorkTicketLineCompletedEventHandler DeleteDailyWorkTicketLineCompleted;
        
        /// <remarks/>
        public event SendDailyWorkTicketForApprovalCompletedEventHandler SendDailyWorkTicketForApprovalCompleted;
        
        /// <remarks/>
        public event CancelDailyWorkTicketApprovalCompletedEventHandler CancelDailyWorkTicketApprovalCompleted;
        
        /// <remarks/>
        public event CreateIndividualPerformanceContractCompletedEventHandler CreateIndividualPerformanceContractCompleted;
        
        /// <remarks/>
        public event SuggestObjectiveLinesCompletedEventHandler SuggestObjectiveLinesCompleted;
        
        /// <remarks/>
        public event PopulateGoalsHubCompletedEventHandler PopulateGoalsHubCompleted;
        
        /// <remarks/>
        public event DeleteObjectAndInitiativeLineCompletedEventHandler DeleteObjectAndInitiativeLineCompleted;
        
        /// <remarks/>
        public event FnCreateNewFileRequsitionCompletedEventHandler FnCreateNewFileRequsitionCompleted;
        
        /// <remarks/>
        public event FnCreateNewFileRequsitionLinesCompletedEventHandler FnCreateNewFileRequsitionLinesCompleted;
        
        /// <remarks/>
        public event FnUpdateFileRequsitionCompletedEventHandler FnUpdateFileRequsitionCompleted;
        
        /// <remarks/>
        public event FnUpdateFileRequsitionLinesCompletedEventHandler FnUpdateFileRequsitionLinesCompleted;
        
        /// <remarks/>
        public event SendFileMovementforApprovalCompletedEventHandler SendFileMovementforApprovalCompleted;
        
        /// <remarks/>
        public event SendVehicleMaintenancetforApprovalCompletedEventHandler SendVehicleMaintenancetforApprovalCompleted;
        
        /// <remarks/>
        public event CancelVehicleMaintenancetforApprovalCompletedEventHandler CancelVehicleMaintenancetforApprovalCompleted;
        
        /// <remarks/>
        public event DeleteFileMovementRecordLineCompletedEventHandler DeleteFileMovementRecordLineCompleted;
        
        /// <remarks/>
        public event CancelFileRecordApprovalCompletedEventHandler CancelFileRecordApprovalCompleted;
        
        /// <remarks/>
        public event FnNewIndividualPerformanceContractCompletedEventHandler FnNewIndividualPerformanceContractCompleted;
        
        /// <remarks/>
        public event FnSuggestObjectiveLinesCompletedEventHandler FnSuggestObjectiveLinesCompleted;
        
        /// <remarks/>
        public event FnSuggestAppraisalObjectiveLinesCompletedEventHandler FnSuggestAppraisalObjectiveLinesCompleted;
        
        /// <remarks/>
        public event FnSuggestJDCompletedEventHandler FnSuggestJDCompleted;
        
        /// <remarks/>
        public event FnSuggestCompetencyTemplateCompletedEventHandler FnSuggestCompetencyTemplateCompleted;
        
        /// <remarks/>
        public event FnNewCoreSecondaryMandateDetailsCompletedEventHandler FnNewCoreSecondaryMandateDetailsCompleted;
        
        /// <remarks/>
        public event FnUpdateObjectiveLinesDetailsCompletedEventHandler FnUpdateObjectiveLinesDetailsCompleted;
        
        /// <remarks/>
        public event FnUpdateJobDescriptionDetailsCompletedEventHandler FnUpdateJobDescriptionDetailsCompleted;
        
        /// <remarks/>
        public event FnUpdatePerformanceTargetLinesDetailsCompletedEventHandler FnUpdatePerformanceTargetLinesDetailsCompleted;
        
        /// <remarks/>
        public event FnNewPerformanceLogEntryCompletedEventHandler FnNewPerformanceLogEntryCompleted;
        
        /// <remarks/>
        public event FnNewPerformanceAppraisalEntryCompletedEventHandler FnNewPerformanceAppraisalEntryCompleted;
        
        /// <remarks/>
        public event FnDeleteIndividualCardSubActivitiesCompletedEventHandler FnDeleteIndividualCardSubActivitiesCompleted;
        
        /// <remarks/>
        public event FnDeleteIndividualCardJDDescriptionSubActivitiesCompletedEventHandler FnDeleteIndividualCardJDDescriptionSubActivitiesCompleted;
        
        /// <remarks/>
        public event FnDeleteIndividualActivitiesCompletedEventHandler FnDeleteIndividualActivitiesCompleted;
        
        /// <remarks/>
        public event FnDeleteAdditionalActivitiesCompletedEventHandler FnDeleteAdditionalActivitiesCompleted;
        
        /// <remarks/>
        public event FnDeletePlogLinesCompletedEventHandler FnDeletePlogLinesCompleted;
        
        /// <remarks/>
        public event FnNewIndividualCardSubActivitiesCompletedEventHandler FnNewIndividualCardSubActivitiesCompleted;
        
        /// <remarks/>
        public event FnUpdateIndividualCardSubActivitiesCompletedEventHandler FnUpdateIndividualCardSubActivitiesCompleted;
        
        /// <remarks/>
        public event FnNewIndividualCardJobDescriptionSubActivitiesCompletedEventHandler FnNewIndividualCardJobDescriptionSubActivitiesCompleted;
        
        /// <remarks/>
        public event FnUpdateIndividualCardJobDescirptionSubActivitiesCompletedEventHandler FnUpdateIndividualCardJobDescirptionSubActivitiesCompleted;
        
        /// <remarks/>
        public event FnSuggestPlogLinesCompletedEventHandler FnSuggestPlogLinesCompleted;
        
        /// <remarks/>
        public event FnGetImprestApproverCommentsCompletedEventHandler FnGetImprestApproverCommentsCompleted;
        
        /// <remarks/>
        public event SendPerformanceContractforApprovalCompletedEventHandler SendPerformanceContractforApprovalCompleted;
        
        /// <remarks/>
        public event FnSubmitSelectedPLogCategoriesCompletedEventHandler FnSubmitSelectedPLogCategoriesCompleted;
        
        /// <remarks/>
        public event FnSubmitSelectedAddPLogCategoriesCompletedEventHandler FnSubmitSelectedAddPLogCategoriesCompleted;
        
        /// <remarks/>
        public event FnSubmitSelectedJDPLogCategoriesCompletedEventHandler FnSubmitSelectedJDPLogCategoriesCompleted;
        
        /// <remarks/>
        public event FnSubmitSelectedPerformanceContractCategoriesCompletedEventHandler FnSubmitSelectedPerformanceContractCategoriesCompleted;
        
        /// <remarks/>
        public event FnUpdateJobContractDescriptionDetailsCompletedEventHandler FnUpdateJobContractDescriptionDetailsCompleted;
        
        /// <remarks/>
        public event FnNewIndividualCardAdditionalActivitiesCompletedEventHandler FnNewIndividualCardAdditionalActivitiesCompleted;
        
        /// <remarks/>
        public event FnAddAditionalInitiativesTargetsCompletedEventHandler FnAddAditionalInitiativesTargetsCompleted;
        
        /// <remarks/>
        public event FnNewJobDescriptionDetailsCompletedEventHandler FnNewJobDescriptionDetailsCompleted;
        
        /// <remarks/>
        public event FnDeletePerformanceContractCategoriesCompletedEventHandler FnDeletePerformanceContractCategoriesCompleted;
        
        /// <remarks/>
        public event FnDeleteAdditionalPerformanceContractCategoriesCompletedEventHandler FnDeleteAdditionalPerformanceContractCategoriesCompleted;
        
        /// <remarks/>
        public event FnDeleteJobDescriptionCompletedEventHandler FnDeleteJobDescriptionCompleted;
        
        /// <remarks/>
        public event FNewPerformanceTargetLinesDetailsCompletedEventHandler FNewPerformanceTargetLinesDetailsCompleted;
        
        /// <remarks/>
        public event FnCreateCandidateDocumentsLinkCompletedEventHandler FnCreateCandidateDocumentsLinkCompleted;
        
        /// <remarks/>
        public event FnCreateBusinessResearchResponseCompletedEventHandler FnCreateBusinessResearchResponseCompleted;
        
        /// <remarks/>
        public event FnCreateBRResponseQuestionsCompletedEventHandler FnCreateBRResponseQuestionsCompleted;
        
        /// <remarks/>
        public event FnInsertJDTargetsCompletedEventHandler FnInsertJDTargetsCompleted;
        
        /// <remarks/>
        public event FnSubmitStandardAppraisal1CompletedEventHandler FnSubmitStandardAppraisal1Completed;
        
        /// <remarks/>
        public event FnInsertStandardAppraisalObjectivesCompletedEventHandler FnInsertStandardAppraisalObjectivesCompleted;
        
        /// <remarks/>
        public event FnInsertStandardAppraisalProficiencyCompletedEventHandler FnInsertStandardAppraisalProficiencyCompleted;
        
        /// <remarks/>
        public event FnGeneratePCReportCompletedEventHandler FnGeneratePCReportCompleted;
        
        /// <remarks/>
        public event FnGeneratePCSIReportCompletedEventHandler FnGeneratePCSIReportCompleted;
        
        /// <remarks/>
        public event FnGenerateSubIndicatorsReportCompletedEventHandler FnGenerateSubIndicatorsReportCompleted;
        
        /// <remarks/>
        public event FnGenerateBoardPCReportCompletedEventHandler FnGenerateBoardPCReportCompleted;
        
        /// <remarks/>
        public event FnGenerateCSPReportCompletedEventHandler FnGenerateCSPReportCompleted;
        
        /// <remarks/>
        public event FnGenerateAnnualWorkPlanReportCompletedEventHandler FnGenerateAnnualWorkPlanReportCompleted;
        
        /// <remarks/>
        public event FnGeneratePLogReportCompletedEventHandler FnGeneratePLogReportCompleted;
        
        /// <remarks/>
        public event FnGenerateStandardAppraisalReportCompletedEventHandler FnGenerateStandardAppraisalReportCompleted;
        
        /// <remarks/>
        public event GenerateRMReportCompletedEventHandler GenerateRMReportCompleted;
        
        /// <remarks/>
        public event GenerateManagementPlanSummeryCompletedEventHandler GenerateManagementPlanSummeryCompleted;
        
        /// <remarks/>
        public event GenerateRiskFrameworkTestCompletedEventHandler GenerateRiskFrameworkTestCompleted;
        
        /// <remarks/>
        public event CreateIctRequestCompletedEventHandler CreateIctRequestCompleted;
        
        /// <remarks/>
        public event ProvideIctfeedbackCompletedEventHandler ProvideIctfeedbackCompleted;
        
        /// <remarks/>
        public event UpdateIctRequestCompletedEventHandler UpdateIctRequestCompleted;
        
        /// <remarks/>
        public event AssignHelpdeskRequestCompletedEventHandler AssignHelpdeskRequestCompleted;
        
        /// <remarks/>
        public event EscalatedHelpdeskRequestCompletedEventHandler EscalatedHelpdeskRequestCompleted;
        
        /// <remarks/>
        public event ResolveHelpdeskRequestCompletedEventHandler ResolveHelpdeskRequestCompleted;
        
        /// <remarks/>
        public event ReopenHelpdeskRequestCompletedEventHandler ReopenHelpdeskRequestCompleted;
        
        /// <remarks/>
        public event FngetImprestLineNoCompletedEventHandler FngetImprestLineNoCompleted;
        
        /// <remarks/>
        public event FnInsertOpenSurveyResponseCompletedEventHandler FnInsertOpenSurveyResponseCompleted;
        
        /// <remarks/>
        public event FnInsertMultipleSurveyResponseCompletedEventHandler FnInsertMultipleSurveyResponseCompleted;
        
        /// <remarks/>
        public event FnInsertSingleSurveyResponseCompletedEventHandler FnInsertSingleSurveyResponseCompleted;
        
        /// <remarks/>
        public event FnInsertBranchingSurveyResponseCompletedEventHandler FnInsertBranchingSurveyResponseCompleted;
        
        /// <remarks/>
        public event FnSubmitSurveyCompletedEventHandler FnSubmitSurveyCompleted;
        
        /// <remarks/>
        public event AddImprestSharepointLinksCompletedEventHandler AddImprestSharepointLinksCompleted;
        
        /// <remarks/>
        public event AddLeaveSharepointLinksCompletedEventHandler AddLeaveSharepointLinksCompleted;
        
        /// <remarks/>
        public event AddImprestSurrenderSharepointLinksCompletedEventHandler AddImprestSurrenderSharepointLinksCompleted;
        
        /// <remarks/>
        public event AddStaffClaimSharepointLinksCompletedEventHandler AddStaffClaimSharepointLinksCompleted;
        
        /// <remarks/>
        public event AddStoreRequsitionSharepointLinksCompletedEventHandler AddStoreRequsitionSharepointLinksCompleted;
        
        /// <remarks/>
        public event AddPurchaseRequisitionSharepointLinksCompletedEventHandler AddPurchaseRequisitionSharepointLinksCompleted;
        
        /// <remarks/>
        public event AddFleetRequisitionSharepointLinksCompletedEventHandler AddFleetRequisitionSharepointLinksCompleted;
        
        /// <remarks/>
        public event AddemployeepassportphotoCompletedEventHandler AddemployeepassportphotoCompleted;
        
        /// <remarks/>
        public event FnLockStaffPerformanceContractCompletedEventHandler FnLockStaffPerformanceContractCompleted;
        
        /// <remarks/>
        public event FnSignStaffPerformanceContractCompletedEventHandler FnSignStaffPerformanceContractCompleted;
        
        /// <remarks/>
        public event CreateNewTrainingFeedbackCompletedEventHandler CreateNewTrainingFeedbackCompleted;
        
        /// <remarks/>
        public event CreateTrainingFeedbackLinesCompletedEventHandler CreateTrainingFeedbackLinesCompleted;
        
        /// <remarks/>
        public event CreateSubmitTrainingFeedbackCompletedEventHandler CreateSubmitTrainingFeedbackCompleted;
        
        /// <remarks/>
        public event CreateNewTrainingEvaluationCompletedEventHandler CreateNewTrainingEvaluationCompleted;
        
        /// <remarks/>
        public event FnInsertEvaluationLinesCompletedEventHandler FnInsertEvaluationLinesCompleted;
        
        /// <remarks/>
        public event AddTrainingParticipantsCompletedEventHandler AddTrainingParticipantsCompleted;
        
        /// <remarks/>
        public event EditTrainingParticipantsCompletedEventHandler EditTrainingParticipantsCompleted;
        
        /// <remarks/>
        public event DeleteTrainingParticipantsCompletedEventHandler DeleteTrainingParticipantsCompleted;
        
        /// <remarks/>
        public event AddTrainingCostCompletedEventHandler AddTrainingCostCompleted;
        
        /// <remarks/>
        public event RemoveTrainingCostCompletedEventHandler RemoveTrainingCostCompleted;
        
        /// <remarks/>
        public event FnSubmitStandardAppraisalCompletedEventHandler FnSubmitStandardAppraisalCompleted;
        
        /// <remarks/>
        public event FnCancelSubmitofStandardAppraisalCompletedEventHandler FnCancelSubmitofStandardAppraisalCompleted;
        
        /// <remarks/>
        public event FnSubmitStandardAppraisalObjCompletedEventHandler FnSubmitStandardAppraisalObjCompleted;
        
        /// <remarks/>
        public event FnSubmitStandardAppraisalPECompletedEventHandler FnSubmitStandardAppraisalPECompleted;
        
        /// <remarks/>
        public event FnInsertStandardAppraisalPIPCompletedEventHandler FnInsertStandardAppraisalPIPCompleted;
        
        /// <remarks/>
        public event FnEditStandardAppraisalPIPCompletedEventHandler FnEditStandardAppraisalPIPCompleted;
        
        /// <remarks/>
        public event FnRemoveStandardAppraisalPIPCompletedEventHandler FnRemoveStandardAppraisalPIPCompleted;
        
        /// <remarks/>
        public event FnInsertStandardAppraisalTrainigNeedsCompletedEventHandler FnInsertStandardAppraisalTrainigNeedsCompleted;
        
        /// <remarks/>
        public event FnRemoveStandardAppraisalTrainigNeedsCompletedEventHandler FnRemoveStandardAppraisalTrainigNeedsCompleted;
        
        /// <remarks/>
        public event FnEditStandardAppraisalTrainigNeedsCompletedEventHandler FnEditStandardAppraisalTrainigNeedsCompleted;
        
        /// <remarks/>
        public event FnSubmitStandardAppraisalConfirmationCompletedEventHandler FnSubmitStandardAppraisalConfirmationCompleted;
        
        /// <remarks/>
        public event FnSendAppraisalEmailCompletedEventHandler FnSendAppraisalEmailCompleted;
        
        /// <remarks/>
        public event FnAppraisalSuggestObjectivesOutcomesCompletedEventHandler FnAppraisalSuggestObjectivesOutcomesCompleted;
        
        /// <remarks/>
        public event FnNewStandardAppraisalCompletedEventHandler FnNewStandardAppraisalCompleted;
        
        /// <remarks/>
        public event FnLoadCompetenciesCompletedEventHandler FnLoadCompetenciesCompleted;
        
        /// <remarks/>
        public event FnSubmitSelectedPLogCategories2CompletedEventHandler FnSubmitSelectedPLogCategories2Completed;
        
        /// <remarks/>
        public event ResetPasswordCompletedEventHandler ResetPasswordCompleted;
        
        /// <remarks/>
        public event LeaveApplicationCompletedEventHandler LeaveApplicationCompleted;
        
        /// <remarks/>
        public event GeneratePayslipCompletedEventHandler GeneratePayslipCompleted;
        
        /// <remarks/>
        public event CreateNewTrainingRequestCompletedEventHandler CreateNewTrainingRequestCompleted;
        
        /// <remarks/>
        public event CreateNewTrainingNeedsLinesCompletedEventHandler CreateNewTrainingNeedsLinesCompleted;
        
        /// <remarks/>
        public event SendTrainingNeedsApprovalCompletedEventHandler SendTrainingNeedsApprovalCompleted;
        
        /// <remarks/>
        public event CancelTrainingNeedsApprovalCompletedEventHandler CancelTrainingNeedsApprovalCompleted;
        
        /// <remarks/>
        public event CreateNewTrainingApplicationCompletedEventHandler CreateNewTrainingApplicationCompleted;
        
        /// <remarks/>
        public event CreateTrainingRequisitionCompletedEventHandler CreateTrainingRequisitionCompleted;
        
        /// <remarks/>
        public event SendTrainingRequestApprovalCompletedEventHandler SendTrainingRequestApprovalCompleted;
        
        /// <remarks/>
        public event CancelTrainingRequestApprovalCompletedEventHandler CancelTrainingRequestApprovalCompleted;
        
        /// <remarks/>
        public event CreateTrainingApplicationLinesCompletedEventHandler CreateTrainingApplicationLinesCompleted;
        
        /// <remarks/>
        public event FnEditTrainingApplicationLinesCompletedEventHandler FnEditTrainingApplicationLinesCompleted;
        
        /// <remarks/>
        public event CreateTrainingReportCompletedEventHandler CreateTrainingReportCompleted;
        
        /// <remarks/>
        public event FnTrainingCostsCompletedEventHandler FnTrainingCostsCompleted;
        
        /// <remarks/>
        public event FnDeleteTrainingApplicationLinesCompletedEventHandler FnDeleteTrainingApplicationLinesCompleted;
        
        /// <remarks/>
        public event FnCancelIndividualScorecardApprovalCompletedEventHandler FnCancelIndividualScorecardApprovalCompleted;
        
        /// <remarks/>
        public event FnSubmitSelectedAdditionalInitiativesCompletedEventHandler FnSubmitSelectedAdditionalInitiativesCompleted;
        
        /// <remarks/>
        public event FnSendIndividualScorecardApprovalCompletedEventHandler FnSendIndividualScorecardApprovalCompleted;
        
        /// <remarks/>
        public event SendTrainingApplicationApprovalCompletedEventHandler SendTrainingApplicationApprovalCompleted;
        
        /// <remarks/>
        public event CreateNewTrainingFeedback1CompletedEventHandler CreateNewTrainingFeedback1Completed;
        
        /// <remarks/>
        public event CreateTrainingFeedbackLines1CompletedEventHandler CreateTrainingFeedbackLines1Completed;
        
        /// <remarks/>
        public event FnEditTrainingFeedbackLinesCompletedEventHandler FnEditTrainingFeedbackLinesCompleted;
        
        /// <remarks/>
        public event FnDeleteTrainingFeedbackLinesCompletedEventHandler FnDeleteTrainingFeedbackLinesCompleted;
        
        /// <remarks/>
        public event CreateTrainingEvaluationCompletedEventHandler CreateTrainingEvaluationCompleted;
        
        /// <remarks/>
        public event CreateTrainingEvaluationLinesCompletedEventHandler CreateTrainingEvaluationLinesCompleted;
        
        /// <remarks/>
        public event CreateNewDailyWorkTicketCompletedEventHandler CreateNewDailyWorkTicketCompleted;
        
        /// <remarks/>
        public event CreateNewDailyWorkTicketLinesCompletedEventHandler CreateNewDailyWorkTicketLinesCompleted;
        
        /// <remarks/>
        public event FnEditDailyWorkTicketLinesCompletedEventHandler FnEditDailyWorkTicketLinesCompleted;
        
        /// <remarks/>
        public event FnDeleteDailyTicketLinesCompletedEventHandler FnDeleteDailyTicketLinesCompleted;
        
        /// <remarks/>
        public event FnEditTrainingNeedsRequestLinesCompletedEventHandler FnEditTrainingNeedsRequestLinesCompleted;
        
        /// <remarks/>
        public event FnDeleteTrainingNeedsLinesCompletedEventHandler FnDeleteTrainingNeedsLinesCompleted;
        
        /// <remarks/>
        public event FnGenerateTrainingApplicationReportCompletedEventHandler FnGenerateTrainingApplicationReportCompleted;
        
        /// <remarks/>
        public event FnGenerateTrainingPlanReportCompletedEventHandler FnGenerateTrainingPlanReportCompleted;
        
        /// <remarks/>
        public event FnGenerateTrainingFeedbackReportCompletedEventHandler FnGenerateTrainingFeedbackReportCompleted;
        
        /// <remarks/>
        public event FnGenerateTrainingEvaluationReportCompletedEventHandler FnGenerateTrainingEvaluationReportCompleted;
        
        /// <remarks/>
        public event GenerateP9CompletedEventHandler GenerateP9Completed;
        
        /// <remarks/>
        public event RegisterCompletedEventHandler RegisterCompleted;
        
        /// <remarks/>
        public event AddHobbyCompletedEventHandler AddHobbyCompleted;
        
        /// <remarks/>
        public event UpdateGeneralDetailsCompletedEventHandler UpdateGeneralDetailsCompleted;
        
        /// <remarks/>
        public event UpdatePersonalDetailsCompletedEventHandler UpdatePersonalDetailsCompleted;
        
        /// <remarks/>
        public event UpdateCommunicationDetailsCompletedEventHandler UpdateCommunicationDetailsCompleted;
        
        /// <remarks/>
        public event AddRefereeCompletedEventHandler AddRefereeCompleted;
        
        /// <remarks/>
        public event AddQualificationCompletedEventHandler AddQualificationCompleted;
        
        /// <remarks/>
        public event ApplyCompletedEventHandler ApplyCompleted;
        
        /// <remarks/>
        public event ImprestGeneralDetailsCompletedEventHandler ImprestGeneralDetailsCompleted;
        
        /// <remarks/>
        public event GetImprestObjectiveCompletedEventHandler GetImprestObjectiveCompleted;
        
        /// <remarks/>
        public event AddTeamMemberCompletedEventHandler AddTeamMemberCompleted;
        
        /// <remarks/>
        public event AddFuelCompletedEventHandler AddFuelCompleted;
        
        /// <remarks/>
        public event AddCasualsCompletedEventHandler AddCasualsCompleted;
        
        /// <remarks/>
        public event AddOtherCostsCompletedEventHandler AddOtherCostsCompleted;
        
        /// <remarks/>
        public event SendImprestMemoApprovalCompletedEventHandler SendImprestMemoApprovalCompleted;
        
        /// <remarks/>
        public event CreateImprestSurrenderCompletedEventHandler CreateImprestSurrenderCompleted;
        
        /// <remarks/>
        public event SendImprestSurrenderApprovalCompletedEventHandler SendImprestSurrenderApprovalCompleted;
        
        /// <remarks/>
        public event UpdateSurrenderLineCompletedEventHandler UpdateSurrenderLineCompleted;
        
        /// <remarks/>
        public event CreatePurchaseRequisitionCompletedEventHandler CreatePurchaseRequisitionCompleted;
        
        /// <remarks/>
        public event CreatePurchaseStoreRequisitionCompletedEventHandler CreatePurchaseStoreRequisitionCompleted;
        
        /// <remarks/>
        public event CreateRequisitionLineCompletedEventHandler CreateRequisitionLineCompleted;
        
        /// <remarks/>
        public event SendPurchaseRequisitionApprovalCompletedEventHandler SendPurchaseRequisitionApprovalCompleted;
        
        /// <remarks/>
        public event CreateFleetRequisitionCompletedEventHandler CreateFleetRequisitionCompleted;
        
        /// <remarks/>
        public event AddFleetRequisitionStaffCompletedEventHandler AddFleetRequisitionStaffCompleted;
        
        /// <remarks/>
        public event AddFleetRequisitioNonStaffCompletedEventHandler AddFleetRequisitioNonStaffCompleted;
        
        /// <remarks/>
        public event AddFleetRequisitioLoadItemsCompletedEventHandler AddFleetRequisitioLoadItemsCompleted;
        
        /// <remarks/>
        public event SendFleetRequisitionApprovalCompletedEventHandler SendFleetRequisitionApprovalCompleted;
        
        /// <remarks/>
        public event RemoveStaffFromTravelRequisitionCompletedEventHandler RemoveStaffFromTravelRequisitionCompleted;
        
        /// <remarks/>
        public event RemoveLoadItemsTravelRequisitionCompletedEventHandler RemoveLoadItemsTravelRequisitionCompleted;
        
        /// <remarks/>
        public event RemoveNonStaffTravelRequisitionCompletedEventHandler RemoveNonStaffTravelRequisitionCompleted;
        
        /// <remarks/>
        public event RemoveFuelDetailsCompletedEventHandler RemoveFuelDetailsCompleted;
        
        /// <remarks/>
        public event RemoveMemberFromImprestMemoCompletedEventHandler RemoveMemberFromImprestMemoCompleted;
        
        /// <remarks/>
        public event AddTripRequisitionDetailsCompletedEventHandler AddTripRequisitionDetailsCompleted;
        
        /// <remarks/>
        public event AddTripAccidentDetailsCompletedEventHandler AddTripAccidentDetailsCompleted;
        
        /// <remarks/>
        public event AddVehicleMaintenanceRequestDetailsCompletedEventHandler AddVehicleMaintenanceRequestDetailsCompleted;
        
        /// <remarks/>
        public event SubmitVehicleMaintenanceRequestDetailsCompletedEventHandler SubmitVehicleMaintenanceRequestDetailsCompleted;
        
        /// <remarks/>
        public event SubmitVehicleFuelRequestDetailsCompletedEventHandler SubmitVehicleFuelRequestDetailsCompleted;
        
        /// <remarks/>
        public event SendMaintenanceRequisitionApprovalCompletedEventHandler SendMaintenanceRequisitionApprovalCompleted;
        
        /// <remarks/>
        public event DeleteTripAccidentDetailsCompletedEventHandler DeleteTripAccidentDetailsCompleted;
        
        /// <remarks/>
        public event EditTeamMemberCompletedEventHandler EditTeamMemberCompleted;
        
        /// <remarks/>
        public event RemoveFuelFromImprestMemoCompletedEventHandler RemoveFuelFromImprestMemoCompleted;
        
        /// <remarks/>
        public event EditFuelCompletedEventHandler EditFuelCompleted;
        
        /// <remarks/>
        public event RemoveCasualsCompletedEventHandler RemoveCasualsCompleted;
        
        /// <remarks/>
        public event EditCasualsCompletedEventHandler EditCasualsCompleted;
        
        /// <remarks/>
        public event RemoveOtherCostsCompletedEventHandler RemoveOtherCostsCompleted;
        
        /// <remarks/>
        public event EditOtherCostsCompletedEventHandler EditOtherCostsCompleted;
        
        /// <remarks/>
        public event GenerateLeaveFormCompletedEventHandler GenerateLeaveFormCompleted;
        
        /// <remarks/>
        public event SendRecordForApprovalCompletedEventHandler SendRecordForApprovalCompleted;
        
        /// <remarks/>
        public event CancelRecordApprovalCompletedEventHandler CancelRecordApprovalCompleted;
        
        /// <remarks/>
        public event ChangePasswordCompletedEventHandler ChangePasswordCompleted;
        
        /// <remarks/>
        public event DeleteRequisitionLineCompletedEventHandler DeleteRequisitionLineCompleted;
        
        /// <remarks/>
        public event SendStaffClaimApprovalCompletedEventHandler SendStaffClaimApprovalCompleted;
        
        /// <remarks/>
        public event CreateStaffClaimCompletedEventHandler CreateStaffClaimCompleted;
        
        /// <remarks/>
        public event DeleteStaffClaimLineCompletedEventHandler DeleteStaffClaimLineCompleted;
        
        /// <remarks/>
        public event CreateStaffClaimLineCompletedEventHandler CreateStaffClaimLineCompleted;
        
        /// <remarks/>
        public event EditStaffClaimLineCompletedEventHandler EditStaffClaimLineCompleted;
        
        /// <remarks/>
        public event SendStoreRequisitionApprovalCompletedEventHandler SendStoreRequisitionApprovalCompleted;
        
        /// <remarks/>
        public event CreateStoreRequisitionLineCompletedEventHandler CreateStoreRequisitionLineCompleted;
        
        /// <remarks/>
        public event ApplyexternalHrJobsCompletedEventHandler ApplyexternalHrJobsCompleted;
        
        /// <remarks/>
        public event ApplyinternalHrJobsCompletedEventHandler ApplyinternalHrJobsCompleted;
        
        /// <remarks/>
        public event AddEmploymentHistoryCompletedEventHandler AddEmploymentHistoryCompleted;
        
        /// <remarks/>
        public event AddAcademicQualificationsCompletedEventHandler AddAcademicQualificationsCompleted;
        
        /// <remarks/>
        public event AddProffessionalQualificationsCompletedEventHandler AddProffessionalQualificationsCompleted;
        
        /// <remarks/>
        public event AddTrainingAttendedCompletedEventHandler AddTrainingAttendedCompleted;
        
        /// <remarks/>
        public event AddProfessionalBodyCompletedEventHandler AddProfessionalBodyCompleted;
        
        /// <remarks/>
        public event AddApplicantAccomplishmentCompletedEventHandler AddApplicantAccomplishmentCompleted;
        
        /// <remarks/>
        public event AddAbilityDetails_AccomplishmentCompletedEventHandler AddAbilityDetails_AccomplishmentCompleted;
        
        /// <remarks/>
        public event AddAbilityDetailsCompletedEventHandler AddAbilityDetailsCompleted;
        
        /// <remarks/>
        public event CreateRefereeCompletedEventHandler CreateRefereeCompleted;
        
        /// <remarks/>
        public event AddCurrentDutiesSkillsCompletedEventHandler AddCurrentDutiesSkillsCompleted;
        
        /// <remarks/>
        public event AddOtherPersonalDetails1CompletedEventHandler AddOtherPersonalDetails1Completed;
        
        /// <remarks/>
        public event AddOtherPersonalDetailsCompletedEventHandler AddOtherPersonalDetailsCompleted;
        
        /// <remarks/>
        public event AddDutiesDetailsCompletedEventHandler AddDutiesDetailsCompleted;
        
        /// <remarks/>
        public event DeleteAcademicLineCompletedEventHandler DeleteAcademicLineCompleted;
        
        /// <remarks/>
        public event DeleteProfessionalLineCompletedEventHandler DeleteProfessionalLineCompleted;
        
        /// <remarks/>
        public event DeleteTrainingLineCompletedEventHandler DeleteTrainingLineCompleted;
        
        /// <remarks/>
        public event DeleteProffessionalBodyLineCompletedEventHandler DeleteProffessionalBodyLineCompleted;
        
        /// <remarks/>
        public event DeleteEmploymentHistoryLineCompletedEventHandler DeleteEmploymentHistoryLineCompleted;
        
        /// <remarks/>
        public event DeleteRefereeLineCompletedEventHandler DeleteRefereeLineCompleted;
        
        /// <remarks/>
        public event AddDeclarationCompletedEventHandler AddDeclarationCompleted;
        
        /// <remarks/>
        public event CreateAccountForExtenalApplicantsCompletedEventHandler CreateAccountForExtenalApplicantsCompleted;
        
        /// <remarks/>
        public event ForgotPasswordtForExtenalApplicantsCompletedEventHandler ForgotPasswordtForExtenalApplicantsCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnNewPerformanceLogEntry2", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnNewPerformanceLogEntry2_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnNewPerformanceLogEntry2(string docNo, string empNo, string scorecardNumber, string description) {
            object[] results = this.Invoke("FnNewPerformanceLogEntry2", new object[] {
                        docNo,
                        empNo,
                        scorecardNumber,
                        description});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnNewPerformanceLogEntry2Async(string docNo, string empNo, string scorecardNumber, string description) {
            this.FnNewPerformanceLogEntry2Async(docNo, empNo, scorecardNumber, description, null);
        }
        
        /// <remarks/>
        public void FnNewPerformanceLogEntry2Async(string docNo, string empNo, string scorecardNumber, string description, object userState) {
            if ((this.FnNewPerformanceLogEntry2OperationCompleted == null)) {
                this.FnNewPerformanceLogEntry2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnNewPerformanceLogEntry2OperationCompleted);
            }
            this.InvokeAsync("FnNewPerformanceLogEntry2", new object[] {
                        docNo,
                        empNo,
                        scorecardNumber,
                        description}, this.FnNewPerformanceLogEntry2OperationCompleted, userState);
        }
        
        private void OnFnNewPerformanceLogEntry2OperationCompleted(object arg) {
            if ((this.FnNewPerformanceLogEntry2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnNewPerformanceLogEntry2Completed(this, new FnNewPerformanceLogEntry2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnGetPlogLines2", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnGetPlogLines2_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGetPlogLines2(string docNo, string empNo) {
            object[] results = this.Invoke("FnGetPlogLines2", new object[] {
                        docNo,
                        empNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetPlogLines2Async(string docNo, string empNo) {
            this.FnGetPlogLines2Async(docNo, empNo, null);
        }
        
        /// <remarks/>
        public void FnGetPlogLines2Async(string docNo, string empNo, object userState) {
            if ((this.FnGetPlogLines2OperationCompleted == null)) {
                this.FnGetPlogLines2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetPlogLines2OperationCompleted);
            }
            this.InvokeAsync("FnGetPlogLines2", new object[] {
                        docNo,
                        empNo}, this.FnGetPlogLines2OperationCompleted, userState);
        }
        
        private void OnFnGetPlogLines2OperationCompleted(object arg) {
            if ((this.FnGetPlogLines2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetPlogLines2Completed(this, new FnGetPlogLines2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnGetSubPlogLines2", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnGetSubPlogLines2_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGetSubPlogLines2(string plogNo, string initiativeNo, string pcNo) {
            object[] results = this.Invoke("FnGetSubPlogLines2", new object[] {
                        plogNo,
                        initiativeNo,
                        pcNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetSubPlogLines2Async(string plogNo, string initiativeNo, string pcNo) {
            this.FnGetSubPlogLines2Async(plogNo, initiativeNo, pcNo, null);
        }
        
        /// <remarks/>
        public void FnGetSubPlogLines2Async(string plogNo, string initiativeNo, string pcNo, object userState) {
            if ((this.FnGetSubPlogLines2OperationCompleted == null)) {
                this.FnGetSubPlogLines2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetSubPlogLines2OperationCompleted);
            }
            this.InvokeAsync("FnGetSubPlogLines2", new object[] {
                        plogNo,
                        initiativeNo,
                        pcNo}, this.FnGetSubPlogLines2OperationCompleted, userState);
        }
        
        private void OnFnGetSubPlogLines2OperationCompleted(object arg) {
            if ((this.FnGetSubPlogLines2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetSubPlogLines2Completed(this, new FnGetSubPlogLines2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnSuggestPlogLines2", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnSuggestPlogLines2_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSuggestPlogLines2(string docNo, string strategyid, string personalscorecardid, string empNumber) {
            object[] results = this.Invoke("FnSuggestPlogLines2", new object[] {
                        docNo,
                        strategyid,
                        personalscorecardid,
                        empNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSuggestPlogLines2Async(string docNo, string strategyid, string personalscorecardid, string empNumber) {
            this.FnSuggestPlogLines2Async(docNo, strategyid, personalscorecardid, empNumber, null);
        }
        
        /// <remarks/>
        public void FnSuggestPlogLines2Async(string docNo, string strategyid, string personalscorecardid, string empNumber, object userState) {
            if ((this.FnSuggestPlogLines2OperationCompleted == null)) {
                this.FnSuggestPlogLines2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSuggestPlogLines2OperationCompleted);
            }
            this.InvokeAsync("FnSuggestPlogLines2", new object[] {
                        docNo,
                        strategyid,
                        personalscorecardid,
                        empNumber}, this.FnSuggestPlogLines2OperationCompleted, userState);
        }
        
        private void OnFnSuggestPlogLines2OperationCompleted(object arg) {
            if ((this.FnSuggestPlogLines2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSuggestPlogLines2Completed(this, new FnSuggestPlogLines2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnSuggestPlogandSubPlogData2", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnSuggestPlogandSubPlogData2_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnSuggestPlogandSubPlogData2(string docNo) {
            this.Invoke("FnSuggestPlogandSubPlogData2", new object[] {
                        docNo});
        }
        
        /// <remarks/>
        public void FnSuggestPlogandSubPlogData2Async(string docNo) {
            this.FnSuggestPlogandSubPlogData2Async(docNo, null);
        }
        
        /// <remarks/>
        public void FnSuggestPlogandSubPlogData2Async(string docNo, object userState) {
            if ((this.FnSuggestPlogandSubPlogData2OperationCompleted == null)) {
                this.FnSuggestPlogandSubPlogData2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSuggestPlogandSubPlogData2OperationCompleted);
            }
            this.InvokeAsync("FnSuggestPlogandSubPlogData2", new object[] {
                        docNo}, this.FnSuggestPlogandSubPlogData2OperationCompleted, userState);
        }
        
        private void OnFnSuggestPlogandSubPlogData2OperationCompleted(object arg) {
            if ((this.FnSuggestPlogandSubPlogData2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSuggestPlogandSubPlogData2Completed(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnUpdatePerformanceTargetLinesDe" +
            "tails2", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnUpdatePerformanceTargetLinesDetails2_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnUpdatePerformanceTargetLinesDetails2(string docNo, int entryNumber, decimal agreedTarget, string comments) {
            object[] results = this.Invoke("FnUpdatePerformanceTargetLinesDetails2", new object[] {
                        docNo,
                        entryNumber,
                        agreedTarget,
                        comments});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnUpdatePerformanceTargetLinesDetails2Async(string docNo, int entryNumber, decimal agreedTarget, string comments) {
            this.FnUpdatePerformanceTargetLinesDetails2Async(docNo, entryNumber, agreedTarget, comments, null);
        }
        
        /// <remarks/>
        public void FnUpdatePerformanceTargetLinesDetails2Async(string docNo, int entryNumber, decimal agreedTarget, string comments, object userState) {
            if ((this.FnUpdatePerformanceTargetLinesDetails2OperationCompleted == null)) {
                this.FnUpdatePerformanceTargetLinesDetails2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnUpdatePerformanceTargetLinesDetails2OperationCompleted);
            }
            this.InvokeAsync("FnUpdatePerformanceTargetLinesDetails2", new object[] {
                        docNo,
                        entryNumber,
                        agreedTarget,
                        comments}, this.FnUpdatePerformanceTargetLinesDetails2OperationCompleted, userState);
        }
        
        private void OnFnUpdatePerformanceTargetLinesDetails2OperationCompleted(object arg) {
            if ((this.FnUpdatePerformanceTargetLinesDetails2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnUpdatePerformanceTargetLinesDetails2Completed(this, new FnUpdatePerformanceTargetLinesDetails2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnRemovePerformanceLogLine2", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnRemovePerformanceLogLine2_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnRemovePerformanceLogLine2(string docNo, int entryNumber) {
            object[] results = this.Invoke("FnRemovePerformanceLogLine2", new object[] {
                        docNo,
                        entryNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnRemovePerformanceLogLine2Async(string docNo, int entryNumber) {
            this.FnRemovePerformanceLogLine2Async(docNo, entryNumber, null);
        }
        
        /// <remarks/>
        public void FnRemovePerformanceLogLine2Async(string docNo, int entryNumber, object userState) {
            if ((this.FnRemovePerformanceLogLine2OperationCompleted == null)) {
                this.FnRemovePerformanceLogLine2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnRemovePerformanceLogLine2OperationCompleted);
            }
            this.InvokeAsync("FnRemovePerformanceLogLine2", new object[] {
                        docNo,
                        entryNumber}, this.FnRemovePerformanceLogLine2OperationCompleted, userState);
        }
        
        private void OnFnRemovePerformanceLogLine2OperationCompleted(object arg) {
            if ((this.FnRemovePerformanceLogLine2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnRemovePerformanceLogLine2Completed(this, new FnRemovePerformanceLogLine2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnInsertPlogSubActivities2", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnInsertPlogSubActivities2_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertPlogSubActivities2(int entryNo, string plogno, string initiativeno, string pcid, decimal achievedtarget, string comments) {
            object[] results = this.Invoke("FnInsertPlogSubActivities2", new object[] {
                        entryNo,
                        plogno,
                        initiativeno,
                        pcid,
                        achievedtarget,
                        comments});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertPlogSubActivities2Async(int entryNo, string plogno, string initiativeno, string pcid, decimal achievedtarget, string comments) {
            this.FnInsertPlogSubActivities2Async(entryNo, plogno, initiativeno, pcid, achievedtarget, comments, null);
        }
        
        /// <remarks/>
        public void FnInsertPlogSubActivities2Async(int entryNo, string plogno, string initiativeno, string pcid, decimal achievedtarget, string comments, object userState) {
            if ((this.FnInsertPlogSubActivities2OperationCompleted == null)) {
                this.FnInsertPlogSubActivities2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertPlogSubActivities2OperationCompleted);
            }
            this.InvokeAsync("FnInsertPlogSubActivities2", new object[] {
                        entryNo,
                        plogno,
                        initiativeno,
                        pcid,
                        achievedtarget,
                        comments}, this.FnInsertPlogSubActivities2OperationCompleted, userState);
        }
        
        private void OnFnInsertPlogSubActivities2OperationCompleted(object arg) {
            if ((this.FnInsertPlogSubActivities2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertPlogSubActivities2Completed(this, new FnInsertPlogSubActivities2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnSendPlogApproval2", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnSendPlogApproval2_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSendPlogApproval2(string contractNo) {
            object[] results = this.Invoke("FnSendPlogApproval2", new object[] {
                        contractNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSendPlogApproval2Async(string contractNo) {
            this.FnSendPlogApproval2Async(contractNo, null);
        }
        
        /// <remarks/>
        public void FnSendPlogApproval2Async(string contractNo, object userState) {
            if ((this.FnSendPlogApproval2OperationCompleted == null)) {
                this.FnSendPlogApproval2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSendPlogApproval2OperationCompleted);
            }
            this.InvokeAsync("FnSendPlogApproval2", new object[] {
                        contractNo}, this.FnSendPlogApproval2OperationCompleted, userState);
        }
        
        private void OnFnSendPlogApproval2OperationCompleted(object arg) {
            if ((this.FnSendPlogApproval2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSendPlogApproval2Completed(this, new FnSendPlogApproval2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnCancelPlogApproval2", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnCancelPlogApproval2_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnCancelPlogApproval2(string contractNo) {
            object[] results = this.Invoke("FnCancelPlogApproval2", new object[] {
                        contractNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnCancelPlogApproval2Async(string contractNo) {
            this.FnCancelPlogApproval2Async(contractNo, null);
        }
        
        /// <remarks/>
        public void FnCancelPlogApproval2Async(string contractNo, object userState) {
            if ((this.FnCancelPlogApproval2OperationCompleted == null)) {
                this.FnCancelPlogApproval2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnCancelPlogApproval2OperationCompleted);
            }
            this.InvokeAsync("FnCancelPlogApproval2", new object[] {
                        contractNo}, this.FnCancelPlogApproval2OperationCompleted, userState);
        }
        
        private void OnFnCancelPlogApproval2OperationCompleted(object arg) {
            if ((this.FnCancelPlogApproval2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnCancelPlogApproval2Completed(this, new FnCancelPlogApproval2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnGeneratePlogReport2", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnGeneratePlogReport2_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGeneratePlogReport2(string docNo) {
            object[] results = this.Invoke("FnGeneratePlogReport2", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGeneratePlogReport2Async(string docNo) {
            this.FnGeneratePlogReport2Async(docNo, null);
        }
        
        /// <remarks/>
        public void FnGeneratePlogReport2Async(string docNo, object userState) {
            if ((this.FnGeneratePlogReport2OperationCompleted == null)) {
                this.FnGeneratePlogReport2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGeneratePlogReport2OperationCompleted);
            }
            this.InvokeAsync("FnGeneratePlogReport2", new object[] {
                        docNo}, this.FnGeneratePlogReport2OperationCompleted, userState);
        }
        
        private void OnFnGeneratePlogReport2OperationCompleted(object arg) {
            if ((this.FnGeneratePlogReport2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGeneratePlogReport2Completed(this, new FnGeneratePlogReport2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:DeleteAccomplishment", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="DeleteAccomplishment_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteAccomplishment(int id, string appNo) {
            object[] results = this.Invoke("DeleteAccomplishment", new object[] {
                        id,
                        appNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteAccomplishmentAsync(int id, string appNo) {
            this.DeleteAccomplishmentAsync(id, appNo, null);
        }
        
        /// <remarks/>
        public void DeleteAccomplishmentAsync(int id, string appNo, object userState) {
            if ((this.DeleteAccomplishmentOperationCompleted == null)) {
                this.DeleteAccomplishmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteAccomplishmentOperationCompleted);
            }
            this.InvokeAsync("DeleteAccomplishment", new object[] {
                        id,
                        appNo}, this.DeleteAccomplishmentOperationCompleted, userState);
        }
        
        private void OnDeleteAccomplishmentOperationCompleted(object arg) {
            if ((this.DeleteAccomplishmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteAccomplishmentCompleted(this, new DeleteAccomplishmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:UpdateChecklistCriteria", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="UpdateChecklistCriteria_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string UpdateChecklistCriteria(string reqNo, string docNo, int id) {
            object[] results = this.Invoke("UpdateChecklistCriteria", new object[] {
                        reqNo,
                        docNo,
                        id});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateChecklistCriteriaAsync(string reqNo, string docNo, int id) {
            this.UpdateChecklistCriteriaAsync(reqNo, docNo, id, null);
        }
        
        /// <remarks/>
        public void UpdateChecklistCriteriaAsync(string reqNo, string docNo, int id, object userState) {
            if ((this.UpdateChecklistCriteriaOperationCompleted == null)) {
                this.UpdateChecklistCriteriaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateChecklistCriteriaOperationCompleted);
            }
            this.InvokeAsync("UpdateChecklistCriteria", new object[] {
                        reqNo,
                        docNo,
                        id}, this.UpdateChecklistCriteriaOperationCompleted, userState);
        }
        
        private void OnUpdateChecklistCriteriaOperationCompleted(object arg) {
            if ((this.UpdateChecklistCriteriaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateChecklistCriteriaCompleted(this, new UpdateChecklistCriteriaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:DeleteChecklistCriteria", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="DeleteChecklistCriteria_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteChecklistCriteria(string reqNo, string docNo, int id) {
            object[] results = this.Invoke("DeleteChecklistCriteria", new object[] {
                        reqNo,
                        docNo,
                        id});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteChecklistCriteriaAsync(string reqNo, string docNo, int id) {
            this.DeleteChecklistCriteriaAsync(reqNo, docNo, id, null);
        }
        
        /// <remarks/>
        public void DeleteChecklistCriteriaAsync(string reqNo, string docNo, int id, object userState) {
            if ((this.DeleteChecklistCriteriaOperationCompleted == null)) {
                this.DeleteChecklistCriteriaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteChecklistCriteriaOperationCompleted);
            }
            this.InvokeAsync("DeleteChecklistCriteria", new object[] {
                        reqNo,
                        docNo,
                        id}, this.DeleteChecklistCriteriaOperationCompleted, userState);
        }
        
        private void OnDeleteChecklistCriteriaOperationCompleted(object arg) {
            if ((this.DeleteChecklistCriteriaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteChecklistCriteriaCompleted(this, new DeleteChecklistCriteriaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:CreateDailyWorkTicketRequest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="CreateDailyWorkTicketRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateDailyWorkTicketRequest(string empNo, string docNo) {
            object[] results = this.Invoke("CreateDailyWorkTicketRequest", new object[] {
                        empNo,
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateDailyWorkTicketRequestAsync(string empNo, string docNo) {
            this.CreateDailyWorkTicketRequestAsync(empNo, docNo, null);
        }
        
        /// <remarks/>
        public void CreateDailyWorkTicketRequestAsync(string empNo, string docNo, object userState) {
            if ((this.CreateDailyWorkTicketRequestOperationCompleted == null)) {
                this.CreateDailyWorkTicketRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateDailyWorkTicketRequestOperationCompleted);
            }
            this.InvokeAsync("CreateDailyWorkTicketRequest", new object[] {
                        empNo,
                        docNo}, this.CreateDailyWorkTicketRequestOperationCompleted, userState);
        }
        
        private void OnCreateDailyWorkTicketRequestOperationCompleted(object arg) {
            if ((this.CreateDailyWorkTicketRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateDailyWorkTicketRequestCompleted(this, new CreateDailyWorkTicketRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:CreateDailyWorkTicketLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="CreateDailyWorkTicketLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateDailyWorkTicketLine(string docno, string treq, string vehicleAllocated, string driverAllocated, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateofRequest, decimal openingOdometer, decimal closedOdometer, decimal totalKM, [System.Xml.Serialization.XmlElementAttribute(DataType="time")] System.DateTime timeout, [System.Xml.Serialization.XmlElementAttribute(DataType="time")] System.DateTime timeIn, decimal fuelDrawn, string receiptNo, decimal oilDrawn) {
            object[] results = this.Invoke("CreateDailyWorkTicketLine", new object[] {
                        docno,
                        treq,
                        vehicleAllocated,
                        driverAllocated,
                        dateofRequest,
                        openingOdometer,
                        closedOdometer,
                        totalKM,
                        timeout,
                        timeIn,
                        fuelDrawn,
                        receiptNo,
                        oilDrawn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateDailyWorkTicketLineAsync(string docno, string treq, string vehicleAllocated, string driverAllocated, System.DateTime dateofRequest, decimal openingOdometer, decimal closedOdometer, decimal totalKM, System.DateTime timeout, System.DateTime timeIn, decimal fuelDrawn, string receiptNo, decimal oilDrawn) {
            this.CreateDailyWorkTicketLineAsync(docno, treq, vehicleAllocated, driverAllocated, dateofRequest, openingOdometer, closedOdometer, totalKM, timeout, timeIn, fuelDrawn, receiptNo, oilDrawn, null);
        }
        
        /// <remarks/>
        public void CreateDailyWorkTicketLineAsync(string docno, string treq, string vehicleAllocated, string driverAllocated, System.DateTime dateofRequest, decimal openingOdometer, decimal closedOdometer, decimal totalKM, System.DateTime timeout, System.DateTime timeIn, decimal fuelDrawn, string receiptNo, decimal oilDrawn, object userState) {
            if ((this.CreateDailyWorkTicketLineOperationCompleted == null)) {
                this.CreateDailyWorkTicketLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateDailyWorkTicketLineOperationCompleted);
            }
            this.InvokeAsync("CreateDailyWorkTicketLine", new object[] {
                        docno,
                        treq,
                        vehicleAllocated,
                        driverAllocated,
                        dateofRequest,
                        openingOdometer,
                        closedOdometer,
                        totalKM,
                        timeout,
                        timeIn,
                        fuelDrawn,
                        receiptNo,
                        oilDrawn}, this.CreateDailyWorkTicketLineOperationCompleted, userState);
        }
        
        private void OnCreateDailyWorkTicketLineOperationCompleted(object arg) {
            if ((this.CreateDailyWorkTicketLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateDailyWorkTicketLineCompleted(this, new CreateDailyWorkTicketLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:UpdateDailyWorkTicketLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="UpdateDailyWorkTicketLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string UpdateDailyWorkTicketLine(string docno, string treq, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateofRequest, decimal openingOdometer, decimal closedOdometer, decimal totalKM, decimal fuelDrawn, int id, string receiptNo, decimal oilDrawn) {
            object[] results = this.Invoke("UpdateDailyWorkTicketLine", new object[] {
                        docno,
                        treq,
                        dateofRequest,
                        openingOdometer,
                        closedOdometer,
                        totalKM,
                        fuelDrawn,
                        id,
                        receiptNo,
                        oilDrawn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateDailyWorkTicketLineAsync(string docno, string treq, System.DateTime dateofRequest, decimal openingOdometer, decimal closedOdometer, decimal totalKM, decimal fuelDrawn, int id, string receiptNo, decimal oilDrawn) {
            this.UpdateDailyWorkTicketLineAsync(docno, treq, dateofRequest, openingOdometer, closedOdometer, totalKM, fuelDrawn, id, receiptNo, oilDrawn, null);
        }
        
        /// <remarks/>
        public void UpdateDailyWorkTicketLineAsync(string docno, string treq, System.DateTime dateofRequest, decimal openingOdometer, decimal closedOdometer, decimal totalKM, decimal fuelDrawn, int id, string receiptNo, decimal oilDrawn, object userState) {
            if ((this.UpdateDailyWorkTicketLineOperationCompleted == null)) {
                this.UpdateDailyWorkTicketLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateDailyWorkTicketLineOperationCompleted);
            }
            this.InvokeAsync("UpdateDailyWorkTicketLine", new object[] {
                        docno,
                        treq,
                        dateofRequest,
                        openingOdometer,
                        closedOdometer,
                        totalKM,
                        fuelDrawn,
                        id,
                        receiptNo,
                        oilDrawn}, this.UpdateDailyWorkTicketLineOperationCompleted, userState);
        }
        
        private void OnUpdateDailyWorkTicketLineOperationCompleted(object arg) {
            if ((this.UpdateDailyWorkTicketLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateDailyWorkTicketLineCompleted(this, new UpdateDailyWorkTicketLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:DeleteDailyWorkTicketLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="DeleteDailyWorkTicketLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteDailyWorkTicketLine(string docno, int id) {
            object[] results = this.Invoke("DeleteDailyWorkTicketLine", new object[] {
                        docno,
                        id});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteDailyWorkTicketLineAsync(string docno, int id) {
            this.DeleteDailyWorkTicketLineAsync(docno, id, null);
        }
        
        /// <remarks/>
        public void DeleteDailyWorkTicketLineAsync(string docno, int id, object userState) {
            if ((this.DeleteDailyWorkTicketLineOperationCompleted == null)) {
                this.DeleteDailyWorkTicketLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteDailyWorkTicketLineOperationCompleted);
            }
            this.InvokeAsync("DeleteDailyWorkTicketLine", new object[] {
                        docno,
                        id}, this.DeleteDailyWorkTicketLineOperationCompleted, userState);
        }
        
        private void OnDeleteDailyWorkTicketLineOperationCompleted(object arg) {
            if ((this.DeleteDailyWorkTicketLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteDailyWorkTicketLineCompleted(this, new DeleteDailyWorkTicketLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:SendDailyWorkTicketForApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="SendDailyWorkTicketForApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string SendDailyWorkTicketForApproval(string docNo) {
            object[] results = this.Invoke("SendDailyWorkTicketForApproval", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendDailyWorkTicketForApprovalAsync(string docNo) {
            this.SendDailyWorkTicketForApprovalAsync(docNo, null);
        }
        
        /// <remarks/>
        public void SendDailyWorkTicketForApprovalAsync(string docNo, object userState) {
            if ((this.SendDailyWorkTicketForApprovalOperationCompleted == null)) {
                this.SendDailyWorkTicketForApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendDailyWorkTicketForApprovalOperationCompleted);
            }
            this.InvokeAsync("SendDailyWorkTicketForApproval", new object[] {
                        docNo}, this.SendDailyWorkTicketForApprovalOperationCompleted, userState);
        }
        
        private void OnSendDailyWorkTicketForApprovalOperationCompleted(object arg) {
            if ((this.SendDailyWorkTicketForApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendDailyWorkTicketForApprovalCompleted(this, new SendDailyWorkTicketForApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:CancelDailyWorkTicketApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="CancelDailyWorkTicketApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CancelDailyWorkTicketApproval(string docNo) {
            object[] results = this.Invoke("CancelDailyWorkTicketApproval", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CancelDailyWorkTicketApprovalAsync(string docNo) {
            this.CancelDailyWorkTicketApprovalAsync(docNo, null);
        }
        
        /// <remarks/>
        public void CancelDailyWorkTicketApprovalAsync(string docNo, object userState) {
            if ((this.CancelDailyWorkTicketApprovalOperationCompleted == null)) {
                this.CancelDailyWorkTicketApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelDailyWorkTicketApprovalOperationCompleted);
            }
            this.InvokeAsync("CancelDailyWorkTicketApproval", new object[] {
                        docNo}, this.CancelDailyWorkTicketApprovalOperationCompleted, userState);
        }
        
        private void OnCancelDailyWorkTicketApprovalOperationCompleted(object arg) {
            if ((this.CancelDailyWorkTicketApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelDailyWorkTicketApprovalCompleted(this, new CancelDailyWorkTicketApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:CreateIndividualPerformanceContr" +
            "act", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="CreateIndividualPerformanceContract_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateIndividualPerformanceContract(string docNo, string empNo, string strategyId, string workPlan, string reportingCode, string templateId, string designation, string grade, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime lEvaluationDate) {
            object[] results = this.Invoke("CreateIndividualPerformanceContract", new object[] {
                        docNo,
                        empNo,
                        strategyId,
                        workPlan,
                        reportingCode,
                        templateId,
                        designation,
                        grade,
                        lEvaluationDate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateIndividualPerformanceContractAsync(string docNo, string empNo, string strategyId, string workPlan, string reportingCode, string templateId, string designation, string grade, System.DateTime lEvaluationDate) {
            this.CreateIndividualPerformanceContractAsync(docNo, empNo, strategyId, workPlan, reportingCode, templateId, designation, grade, lEvaluationDate, null);
        }
        
        /// <remarks/>
        public void CreateIndividualPerformanceContractAsync(string docNo, string empNo, string strategyId, string workPlan, string reportingCode, string templateId, string designation, string grade, System.DateTime lEvaluationDate, object userState) {
            if ((this.CreateIndividualPerformanceContractOperationCompleted == null)) {
                this.CreateIndividualPerformanceContractOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateIndividualPerformanceContractOperationCompleted);
            }
            this.InvokeAsync("CreateIndividualPerformanceContract", new object[] {
                        docNo,
                        empNo,
                        strategyId,
                        workPlan,
                        reportingCode,
                        templateId,
                        designation,
                        grade,
                        lEvaluationDate}, this.CreateIndividualPerformanceContractOperationCompleted, userState);
        }
        
        private void OnCreateIndividualPerformanceContractOperationCompleted(object arg) {
            if ((this.CreateIndividualPerformanceContractCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateIndividualPerformanceContractCompleted(this, new CreateIndividualPerformanceContractCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:SuggestObjectiveLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="SuggestObjectiveLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string SuggestObjectiveLines(string sPlanId, string fWorkPlan, string reportingCode, string docNo, string gTemplateId, string position) {
            object[] results = this.Invoke("SuggestObjectiveLines", new object[] {
                        sPlanId,
                        fWorkPlan,
                        reportingCode,
                        docNo,
                        gTemplateId,
                        position});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SuggestObjectiveLinesAsync(string sPlanId, string fWorkPlan, string reportingCode, string docNo, string gTemplateId, string position) {
            this.SuggestObjectiveLinesAsync(sPlanId, fWorkPlan, reportingCode, docNo, gTemplateId, position, null);
        }
        
        /// <remarks/>
        public void SuggestObjectiveLinesAsync(string sPlanId, string fWorkPlan, string reportingCode, string docNo, string gTemplateId, string position, object userState) {
            if ((this.SuggestObjectiveLinesOperationCompleted == null)) {
                this.SuggestObjectiveLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSuggestObjectiveLinesOperationCompleted);
            }
            this.InvokeAsync("SuggestObjectiveLines", new object[] {
                        sPlanId,
                        fWorkPlan,
                        reportingCode,
                        docNo,
                        gTemplateId,
                        position}, this.SuggestObjectiveLinesOperationCompleted, userState);
        }
        
        private void OnSuggestObjectiveLinesOperationCompleted(object arg) {
            if ((this.SuggestObjectiveLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SuggestObjectiveLinesCompleted(this, new SuggestObjectiveLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:PopulateGoalsHub", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="PopulateGoalsHub_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string PopulateGoalsHub(string gTemplateId, string docNo) {
            object[] results = this.Invoke("PopulateGoalsHub", new object[] {
                        gTemplateId,
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PopulateGoalsHubAsync(string gTemplateId, string docNo) {
            this.PopulateGoalsHubAsync(gTemplateId, docNo, null);
        }
        
        /// <remarks/>
        public void PopulateGoalsHubAsync(string gTemplateId, string docNo, object userState) {
            if ((this.PopulateGoalsHubOperationCompleted == null)) {
                this.PopulateGoalsHubOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPopulateGoalsHubOperationCompleted);
            }
            this.InvokeAsync("PopulateGoalsHub", new object[] {
                        gTemplateId,
                        docNo}, this.PopulateGoalsHubOperationCompleted, userState);
        }
        
        private void OnPopulateGoalsHubOperationCompleted(object arg) {
            if ((this.PopulateGoalsHubCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PopulateGoalsHubCompleted(this, new PopulateGoalsHubCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:DeleteObjectAndInitiativeLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="DeleteObjectAndInitiativeLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteObjectAndInitiativeLine(string requisitionNo, int lineNo, string empNo) {
            object[] results = this.Invoke("DeleteObjectAndInitiativeLine", new object[] {
                        requisitionNo,
                        lineNo,
                        empNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteObjectAndInitiativeLineAsync(string requisitionNo, int lineNo, string empNo) {
            this.DeleteObjectAndInitiativeLineAsync(requisitionNo, lineNo, empNo, null);
        }
        
        /// <remarks/>
        public void DeleteObjectAndInitiativeLineAsync(string requisitionNo, int lineNo, string empNo, object userState) {
            if ((this.DeleteObjectAndInitiativeLineOperationCompleted == null)) {
                this.DeleteObjectAndInitiativeLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteObjectAndInitiativeLineOperationCompleted);
            }
            this.InvokeAsync("DeleteObjectAndInitiativeLine", new object[] {
                        requisitionNo,
                        lineNo,
                        empNo}, this.DeleteObjectAndInitiativeLineOperationCompleted, userState);
        }
        
        private void OnDeleteObjectAndInitiativeLineOperationCompleted(object arg) {
            if ((this.DeleteObjectAndInitiativeLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteObjectAndInitiativeLineCompleted(this, new DeleteObjectAndInitiativeLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnCreateNewFileRequsition", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnCreateNewFileRequsition_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnCreateNewFileRequsition(string employeeno, int daysrequested) {
            object[] results = this.Invoke("FnCreateNewFileRequsition", new object[] {
                        employeeno,
                        daysrequested});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnCreateNewFileRequsitionAsync(string employeeno, int daysrequested) {
            this.FnCreateNewFileRequsitionAsync(employeeno, daysrequested, null);
        }
        
        /// <remarks/>
        public void FnCreateNewFileRequsitionAsync(string employeeno, int daysrequested, object userState) {
            if ((this.FnCreateNewFileRequsitionOperationCompleted == null)) {
                this.FnCreateNewFileRequsitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnCreateNewFileRequsitionOperationCompleted);
            }
            this.InvokeAsync("FnCreateNewFileRequsition", new object[] {
                        employeeno,
                        daysrequested}, this.FnCreateNewFileRequsitionOperationCompleted, userState);
        }
        
        private void OnFnCreateNewFileRequsitionOperationCompleted(object arg) {
            if ((this.FnCreateNewFileRequsitionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnCreateNewFileRequsitionCompleted(this, new FnCreateNewFileRequsitionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnCreateNewFileRequsitionLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnCreateNewFileRequsitionLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnCreateNewFileRequsitionLines(string employeeno, string requisitionNumber, string fileclass, string filenumber, string purpose) {
            object[] results = this.Invoke("FnCreateNewFileRequsitionLines", new object[] {
                        employeeno,
                        requisitionNumber,
                        fileclass,
                        filenumber,
                        purpose});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnCreateNewFileRequsitionLinesAsync(string employeeno, string requisitionNumber, string fileclass, string filenumber, string purpose) {
            this.FnCreateNewFileRequsitionLinesAsync(employeeno, requisitionNumber, fileclass, filenumber, purpose, null);
        }
        
        /// <remarks/>
        public void FnCreateNewFileRequsitionLinesAsync(string employeeno, string requisitionNumber, string fileclass, string filenumber, string purpose, object userState) {
            if ((this.FnCreateNewFileRequsitionLinesOperationCompleted == null)) {
                this.FnCreateNewFileRequsitionLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnCreateNewFileRequsitionLinesOperationCompleted);
            }
            this.InvokeAsync("FnCreateNewFileRequsitionLines", new object[] {
                        employeeno,
                        requisitionNumber,
                        fileclass,
                        filenumber,
                        purpose}, this.FnCreateNewFileRequsitionLinesOperationCompleted, userState);
        }
        
        private void OnFnCreateNewFileRequsitionLinesOperationCompleted(object arg) {
            if ((this.FnCreateNewFileRequsitionLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnCreateNewFileRequsitionLinesCompleted(this, new FnCreateNewFileRequsitionLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnUpdateFileRequsition", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnUpdateFileRequsition_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnUpdateFileRequsition(string employeeno, string requisitionNumber, int daysrequested) {
            object[] results = this.Invoke("FnUpdateFileRequsition", new object[] {
                        employeeno,
                        requisitionNumber,
                        daysrequested});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnUpdateFileRequsitionAsync(string employeeno, string requisitionNumber, int daysrequested) {
            this.FnUpdateFileRequsitionAsync(employeeno, requisitionNumber, daysrequested, null);
        }
        
        /// <remarks/>
        public void FnUpdateFileRequsitionAsync(string employeeno, string requisitionNumber, int daysrequested, object userState) {
            if ((this.FnUpdateFileRequsitionOperationCompleted == null)) {
                this.FnUpdateFileRequsitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnUpdateFileRequsitionOperationCompleted);
            }
            this.InvokeAsync("FnUpdateFileRequsition", new object[] {
                        employeeno,
                        requisitionNumber,
                        daysrequested}, this.FnUpdateFileRequsitionOperationCompleted, userState);
        }
        
        private void OnFnUpdateFileRequsitionOperationCompleted(object arg) {
            if ((this.FnUpdateFileRequsitionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnUpdateFileRequsitionCompleted(this, new FnUpdateFileRequsitionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnUpdateFileRequsitionLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnUpdateFileRequsitionLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnUpdateFileRequsitionLines(string employeeno, string requisitionNumber, int linenumber, string fileclass, string filenumber, string purpose) {
            object[] results = this.Invoke("FnUpdateFileRequsitionLines", new object[] {
                        employeeno,
                        requisitionNumber,
                        linenumber,
                        fileclass,
                        filenumber,
                        purpose});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnUpdateFileRequsitionLinesAsync(string employeeno, string requisitionNumber, int linenumber, string fileclass, string filenumber, string purpose) {
            this.FnUpdateFileRequsitionLinesAsync(employeeno, requisitionNumber, linenumber, fileclass, filenumber, purpose, null);
        }
        
        /// <remarks/>
        public void FnUpdateFileRequsitionLinesAsync(string employeeno, string requisitionNumber, int linenumber, string fileclass, string filenumber, string purpose, object userState) {
            if ((this.FnUpdateFileRequsitionLinesOperationCompleted == null)) {
                this.FnUpdateFileRequsitionLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnUpdateFileRequsitionLinesOperationCompleted);
            }
            this.InvokeAsync("FnUpdateFileRequsitionLines", new object[] {
                        employeeno,
                        requisitionNumber,
                        linenumber,
                        fileclass,
                        filenumber,
                        purpose}, this.FnUpdateFileRequsitionLinesOperationCompleted, userState);
        }
        
        private void OnFnUpdateFileRequsitionLinesOperationCompleted(object arg) {
            if ((this.FnUpdateFileRequsitionLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnUpdateFileRequsitionLinesCompleted(this, new FnUpdateFileRequsitionLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:SendFileMovementforApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="SendFileMovementforApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string SendFileMovementforApproval(string docNo) {
            object[] results = this.Invoke("SendFileMovementforApproval", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendFileMovementforApprovalAsync(string docNo) {
            this.SendFileMovementforApprovalAsync(docNo, null);
        }
        
        /// <remarks/>
        public void SendFileMovementforApprovalAsync(string docNo, object userState) {
            if ((this.SendFileMovementforApprovalOperationCompleted == null)) {
                this.SendFileMovementforApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendFileMovementforApprovalOperationCompleted);
            }
            this.InvokeAsync("SendFileMovementforApproval", new object[] {
                        docNo}, this.SendFileMovementforApprovalOperationCompleted, userState);
        }
        
        private void OnSendFileMovementforApprovalOperationCompleted(object arg) {
            if ((this.SendFileMovementforApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendFileMovementforApprovalCompleted(this, new SendFileMovementforApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:SendVehicleMaintenancetforApprov" +
            "al", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="SendVehicleMaintenancetforApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string SendVehicleMaintenancetforApproval(string docNo) {
            object[] results = this.Invoke("SendVehicleMaintenancetforApproval", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendVehicleMaintenancetforApprovalAsync(string docNo) {
            this.SendVehicleMaintenancetforApprovalAsync(docNo, null);
        }
        
        /// <remarks/>
        public void SendVehicleMaintenancetforApprovalAsync(string docNo, object userState) {
            if ((this.SendVehicleMaintenancetforApprovalOperationCompleted == null)) {
                this.SendVehicleMaintenancetforApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendVehicleMaintenancetforApprovalOperationCompleted);
            }
            this.InvokeAsync("SendVehicleMaintenancetforApproval", new object[] {
                        docNo}, this.SendVehicleMaintenancetforApprovalOperationCompleted, userState);
        }
        
        private void OnSendVehicleMaintenancetforApprovalOperationCompleted(object arg) {
            if ((this.SendVehicleMaintenancetforApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendVehicleMaintenancetforApprovalCompleted(this, new SendVehicleMaintenancetforApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:CancelVehicleMaintenancetforAppr" +
            "oval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="CancelVehicleMaintenancetforApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CancelVehicleMaintenancetforApproval(string docNo) {
            object[] results = this.Invoke("CancelVehicleMaintenancetforApproval", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CancelVehicleMaintenancetforApprovalAsync(string docNo) {
            this.CancelVehicleMaintenancetforApprovalAsync(docNo, null);
        }
        
        /// <remarks/>
        public void CancelVehicleMaintenancetforApprovalAsync(string docNo, object userState) {
            if ((this.CancelVehicleMaintenancetforApprovalOperationCompleted == null)) {
                this.CancelVehicleMaintenancetforApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelVehicleMaintenancetforApprovalOperationCompleted);
            }
            this.InvokeAsync("CancelVehicleMaintenancetforApproval", new object[] {
                        docNo}, this.CancelVehicleMaintenancetforApprovalOperationCompleted, userState);
        }
        
        private void OnCancelVehicleMaintenancetforApprovalOperationCompleted(object arg) {
            if ((this.CancelVehicleMaintenancetforApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelVehicleMaintenancetforApprovalCompleted(this, new CancelVehicleMaintenancetforApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:DeleteFileMovementRecordLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="DeleteFileMovementRecordLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteFileMovementRecordLine(string docnumber, int lineNumber) {
            object[] results = this.Invoke("DeleteFileMovementRecordLine", new object[] {
                        docnumber,
                        lineNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteFileMovementRecordLineAsync(string docnumber, int lineNumber) {
            this.DeleteFileMovementRecordLineAsync(docnumber, lineNumber, null);
        }
        
        /// <remarks/>
        public void DeleteFileMovementRecordLineAsync(string docnumber, int lineNumber, object userState) {
            if ((this.DeleteFileMovementRecordLineOperationCompleted == null)) {
                this.DeleteFileMovementRecordLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteFileMovementRecordLineOperationCompleted);
            }
            this.InvokeAsync("DeleteFileMovementRecordLine", new object[] {
                        docnumber,
                        lineNumber}, this.DeleteFileMovementRecordLineOperationCompleted, userState);
        }
        
        private void OnDeleteFileMovementRecordLineOperationCompleted(object arg) {
            if ((this.DeleteFileMovementRecordLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteFileMovementRecordLineCompleted(this, new DeleteFileMovementRecordLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:CancelFileRecordApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="CancelFileRecordApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CancelFileRecordApproval(string recordNo) {
            object[] results = this.Invoke("CancelFileRecordApproval", new object[] {
                        recordNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CancelFileRecordApprovalAsync(string recordNo) {
            this.CancelFileRecordApprovalAsync(recordNo, null);
        }
        
        /// <remarks/>
        public void CancelFileRecordApprovalAsync(string recordNo, object userState) {
            if ((this.CancelFileRecordApprovalOperationCompleted == null)) {
                this.CancelFileRecordApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelFileRecordApprovalOperationCompleted);
            }
            this.InvokeAsync("CancelFileRecordApproval", new object[] {
                        recordNo}, this.CancelFileRecordApprovalOperationCompleted, userState);
        }
        
        private void OnCancelFileRecordApprovalOperationCompleted(object arg) {
            if ((this.CancelFileRecordApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelFileRecordApprovalCompleted(this, new CancelFileRecordApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnNewIndividualPerformanceContra" +
            "ct", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnNewIndividualPerformanceContract_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnNewIndividualPerformanceContract(string empNo, string strategyId, string workPlan, string reportingCode, string tdeputydirector, string tdescription) {
            object[] results = this.Invoke("FnNewIndividualPerformanceContract", new object[] {
                        empNo,
                        strategyId,
                        workPlan,
                        reportingCode,
                        tdeputydirector,
                        tdescription});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnNewIndividualPerformanceContractAsync(string empNo, string strategyId, string workPlan, string reportingCode, string tdeputydirector, string tdescription) {
            this.FnNewIndividualPerformanceContractAsync(empNo, strategyId, workPlan, reportingCode, tdeputydirector, tdescription, null);
        }
        
        /// <remarks/>
        public void FnNewIndividualPerformanceContractAsync(string empNo, string strategyId, string workPlan, string reportingCode, string tdeputydirector, string tdescription, object userState) {
            if ((this.FnNewIndividualPerformanceContractOperationCompleted == null)) {
                this.FnNewIndividualPerformanceContractOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnNewIndividualPerformanceContractOperationCompleted);
            }
            this.InvokeAsync("FnNewIndividualPerformanceContract", new object[] {
                        empNo,
                        strategyId,
                        workPlan,
                        reportingCode,
                        tdeputydirector,
                        tdescription}, this.FnNewIndividualPerformanceContractOperationCompleted, userState);
        }
        
        private void OnFnNewIndividualPerformanceContractOperationCompleted(object arg) {
            if ((this.FnNewIndividualPerformanceContractCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnNewIndividualPerformanceContractCompleted(this, new FnNewIndividualPerformanceContractCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnSuggestObjectiveLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnSuggestObjectiveLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSuggestObjectiveLines(string sPlanId, string fWorkPlan, string reportingCode, string docNo, string position, string reponsibilitycenter, string goalTemplateId) {
            object[] results = this.Invoke("FnSuggestObjectiveLines", new object[] {
                        sPlanId,
                        fWorkPlan,
                        reportingCode,
                        docNo,
                        position,
                        reponsibilitycenter,
                        goalTemplateId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSuggestObjectiveLinesAsync(string sPlanId, string fWorkPlan, string reportingCode, string docNo, string position, string reponsibilitycenter, string goalTemplateId) {
            this.FnSuggestObjectiveLinesAsync(sPlanId, fWorkPlan, reportingCode, docNo, position, reponsibilitycenter, goalTemplateId, null);
        }
        
        /// <remarks/>
        public void FnSuggestObjectiveLinesAsync(string sPlanId, string fWorkPlan, string reportingCode, string docNo, string position, string reponsibilitycenter, string goalTemplateId, object userState) {
            if ((this.FnSuggestObjectiveLinesOperationCompleted == null)) {
                this.FnSuggestObjectiveLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSuggestObjectiveLinesOperationCompleted);
            }
            this.InvokeAsync("FnSuggestObjectiveLines", new object[] {
                        sPlanId,
                        fWorkPlan,
                        reportingCode,
                        docNo,
                        position,
                        reponsibilitycenter,
                        goalTemplateId}, this.FnSuggestObjectiveLinesOperationCompleted, userState);
        }
        
        private void OnFnSuggestObjectiveLinesOperationCompleted(object arg) {
            if ((this.FnSuggestObjectiveLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSuggestObjectiveLinesCompleted(this, new FnSuggestObjectiveLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnSuggestAppraisalObjectiveLines" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnSuggestAppraisalObjectiveLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSuggestAppraisalObjectiveLines(string sPlanId, string fWorkPlan, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime evaluationstartDate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime evaluationendDate, string performancescale) {
            object[] results = this.Invoke("FnSuggestAppraisalObjectiveLines", new object[] {
                        sPlanId,
                        fWorkPlan,
                        evaluationstartDate,
                        evaluationendDate,
                        performancescale});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSuggestAppraisalObjectiveLinesAsync(string sPlanId, string fWorkPlan, System.DateTime evaluationstartDate, System.DateTime evaluationendDate, string performancescale) {
            this.FnSuggestAppraisalObjectiveLinesAsync(sPlanId, fWorkPlan, evaluationstartDate, evaluationendDate, performancescale, null);
        }
        
        /// <remarks/>
        public void FnSuggestAppraisalObjectiveLinesAsync(string sPlanId, string fWorkPlan, System.DateTime evaluationstartDate, System.DateTime evaluationendDate, string performancescale, object userState) {
            if ((this.FnSuggestAppraisalObjectiveLinesOperationCompleted == null)) {
                this.FnSuggestAppraisalObjectiveLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSuggestAppraisalObjectiveLinesOperationCompleted);
            }
            this.InvokeAsync("FnSuggestAppraisalObjectiveLines", new object[] {
                        sPlanId,
                        fWorkPlan,
                        evaluationstartDate,
                        evaluationendDate,
                        performancescale}, this.FnSuggestAppraisalObjectiveLinesOperationCompleted, userState);
        }
        
        private void OnFnSuggestAppraisalObjectiveLinesOperationCompleted(object arg) {
            if ((this.FnSuggestAppraisalObjectiveLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSuggestAppraisalObjectiveLinesCompleted(this, new FnSuggestAppraisalObjectiveLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnSuggestJD", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnSuggestJD_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSuggestJD(string workplan, string primarydepartment, string position) {
            object[] results = this.Invoke("FnSuggestJD", new object[] {
                        workplan,
                        primarydepartment,
                        position});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSuggestJDAsync(string workplan, string primarydepartment, string position) {
            this.FnSuggestJDAsync(workplan, primarydepartment, position, null);
        }
        
        /// <remarks/>
        public void FnSuggestJDAsync(string workplan, string primarydepartment, string position, object userState) {
            if ((this.FnSuggestJDOperationCompleted == null)) {
                this.FnSuggestJDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSuggestJDOperationCompleted);
            }
            this.InvokeAsync("FnSuggestJD", new object[] {
                        workplan,
                        primarydepartment,
                        position}, this.FnSuggestJDOperationCompleted, userState);
        }
        
        private void OnFnSuggestJDOperationCompleted(object arg) {
            if ((this.FnSuggestJDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSuggestJDCompleted(this, new FnSuggestJDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnSuggestCompetencyTemplate", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnSuggestCompetencyTemplate_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSuggestCompetencyTemplate(string competencyId, string evaluationNumber, string ratingscale) {
            object[] results = this.Invoke("FnSuggestCompetencyTemplate", new object[] {
                        competencyId,
                        evaluationNumber,
                        ratingscale});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSuggestCompetencyTemplateAsync(string competencyId, string evaluationNumber, string ratingscale) {
            this.FnSuggestCompetencyTemplateAsync(competencyId, evaluationNumber, ratingscale, null);
        }
        
        /// <remarks/>
        public void FnSuggestCompetencyTemplateAsync(string competencyId, string evaluationNumber, string ratingscale, object userState) {
            if ((this.FnSuggestCompetencyTemplateOperationCompleted == null)) {
                this.FnSuggestCompetencyTemplateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSuggestCompetencyTemplateOperationCompleted);
            }
            this.InvokeAsync("FnSuggestCompetencyTemplate", new object[] {
                        competencyId,
                        evaluationNumber,
                        ratingscale}, this.FnSuggestCompetencyTemplateOperationCompleted, userState);
        }
        
        private void OnFnSuggestCompetencyTemplateOperationCompleted(object arg) {
            if ((this.FnSuggestCompetencyTemplateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSuggestCompetencyTemplateCompleted(this, new FnSuggestCompetencyTemplateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnNewCoreSecondaryMandateDetails" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnNewCoreSecondaryMandateDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnNewCoreSecondaryMandateDetails(string employeeNumber, string scorecardNumber, string reponsibilitycenter, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime startdate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime duedate, int assignedweights, int agreedtragets) {
            object[] results = this.Invoke("FnNewCoreSecondaryMandateDetails", new object[] {
                        employeeNumber,
                        scorecardNumber,
                        reponsibilitycenter,
                        startdate,
                        duedate,
                        assignedweights,
                        agreedtragets});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnNewCoreSecondaryMandateDetailsAsync(string employeeNumber, string scorecardNumber, string reponsibilitycenter, System.DateTime startdate, System.DateTime duedate, int assignedweights, int agreedtragets) {
            this.FnNewCoreSecondaryMandateDetailsAsync(employeeNumber, scorecardNumber, reponsibilitycenter, startdate, duedate, assignedweights, agreedtragets, null);
        }
        
        /// <remarks/>
        public void FnNewCoreSecondaryMandateDetailsAsync(string employeeNumber, string scorecardNumber, string reponsibilitycenter, System.DateTime startdate, System.DateTime duedate, int assignedweights, int agreedtragets, object userState) {
            if ((this.FnNewCoreSecondaryMandateDetailsOperationCompleted == null)) {
                this.FnNewCoreSecondaryMandateDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnNewCoreSecondaryMandateDetailsOperationCompleted);
            }
            this.InvokeAsync("FnNewCoreSecondaryMandateDetails", new object[] {
                        employeeNumber,
                        scorecardNumber,
                        reponsibilitycenter,
                        startdate,
                        duedate,
                        assignedweights,
                        agreedtragets}, this.FnNewCoreSecondaryMandateDetailsOperationCompleted, userState);
        }
        
        private void OnFnNewCoreSecondaryMandateDetailsOperationCompleted(object arg) {
            if ((this.FnNewCoreSecondaryMandateDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnNewCoreSecondaryMandateDetailsCompleted(this, new FnNewCoreSecondaryMandateDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnUpdateObjectiveLinesDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnUpdateObjectiveLinesDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnUpdateObjectiveLinesDetails(string pcNumber, int entryNumber, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime startdate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime enddate, decimal agreedTarget, decimal assignedweight) {
            object[] results = this.Invoke("FnUpdateObjectiveLinesDetails", new object[] {
                        pcNumber,
                        entryNumber,
                        startdate,
                        enddate,
                        agreedTarget,
                        assignedweight});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnUpdateObjectiveLinesDetailsAsync(string pcNumber, int entryNumber, System.DateTime startdate, System.DateTime enddate, decimal agreedTarget, decimal assignedweight) {
            this.FnUpdateObjectiveLinesDetailsAsync(pcNumber, entryNumber, startdate, enddate, agreedTarget, assignedweight, null);
        }
        
        /// <remarks/>
        public void FnUpdateObjectiveLinesDetailsAsync(string pcNumber, int entryNumber, System.DateTime startdate, System.DateTime enddate, decimal agreedTarget, decimal assignedweight, object userState) {
            if ((this.FnUpdateObjectiveLinesDetailsOperationCompleted == null)) {
                this.FnUpdateObjectiveLinesDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnUpdateObjectiveLinesDetailsOperationCompleted);
            }
            this.InvokeAsync("FnUpdateObjectiveLinesDetails", new object[] {
                        pcNumber,
                        entryNumber,
                        startdate,
                        enddate,
                        agreedTarget,
                        assignedweight}, this.FnUpdateObjectiveLinesDetailsOperationCompleted, userState);
        }
        
        private void OnFnUpdateObjectiveLinesDetailsOperationCompleted(object arg) {
            if ((this.FnUpdateObjectiveLinesDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnUpdateObjectiveLinesDetailsCompleted(this, new FnUpdateObjectiveLinesDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnUpdateJobDescriptionDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnUpdateJobDescriptionDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnUpdateJobDescriptionDetails(string entryNumber, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime startdate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime enddate, decimal agreedTarget, decimal assignedweight) {
            object[] results = this.Invoke("FnUpdateJobDescriptionDetails", new object[] {
                        entryNumber,
                        startdate,
                        enddate,
                        agreedTarget,
                        assignedweight});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnUpdateJobDescriptionDetailsAsync(string entryNumber, System.DateTime startdate, System.DateTime enddate, decimal agreedTarget, decimal assignedweight) {
            this.FnUpdateJobDescriptionDetailsAsync(entryNumber, startdate, enddate, agreedTarget, assignedweight, null);
        }
        
        /// <remarks/>
        public void FnUpdateJobDescriptionDetailsAsync(string entryNumber, System.DateTime startdate, System.DateTime enddate, decimal agreedTarget, decimal assignedweight, object userState) {
            if ((this.FnUpdateJobDescriptionDetailsOperationCompleted == null)) {
                this.FnUpdateJobDescriptionDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnUpdateJobDescriptionDetailsOperationCompleted);
            }
            this.InvokeAsync("FnUpdateJobDescriptionDetails", new object[] {
                        entryNumber,
                        startdate,
                        enddate,
                        agreedTarget,
                        assignedweight}, this.FnUpdateJobDescriptionDetailsOperationCompleted, userState);
        }
        
        private void OnFnUpdateJobDescriptionDetailsOperationCompleted(object arg) {
            if ((this.FnUpdateJobDescriptionDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnUpdateJobDescriptionDetailsCompleted(this, new FnUpdateJobDescriptionDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnUpdatePerformanceTargetLinesDe" +
            "tails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnUpdatePerformanceTargetLinesDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnUpdatePerformanceTargetLinesDetails(string plogNumber, int entryNumber, decimal agreedTarget, string tcomments, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime lachievedDate) {
            object[] results = this.Invoke("FnUpdatePerformanceTargetLinesDetails", new object[] {
                        plogNumber,
                        entryNumber,
                        agreedTarget,
                        tcomments,
                        lachievedDate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnUpdatePerformanceTargetLinesDetailsAsync(string plogNumber, int entryNumber, decimal agreedTarget, string tcomments, System.DateTime lachievedDate) {
            this.FnUpdatePerformanceTargetLinesDetailsAsync(plogNumber, entryNumber, agreedTarget, tcomments, lachievedDate, null);
        }
        
        /// <remarks/>
        public void FnUpdatePerformanceTargetLinesDetailsAsync(string plogNumber, int entryNumber, decimal agreedTarget, string tcomments, System.DateTime lachievedDate, object userState) {
            if ((this.FnUpdatePerformanceTargetLinesDetailsOperationCompleted == null)) {
                this.FnUpdatePerformanceTargetLinesDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnUpdatePerformanceTargetLinesDetailsOperationCompleted);
            }
            this.InvokeAsync("FnUpdatePerformanceTargetLinesDetails", new object[] {
                        plogNumber,
                        entryNumber,
                        agreedTarget,
                        tcomments,
                        lachievedDate}, this.FnUpdatePerformanceTargetLinesDetailsOperationCompleted, userState);
        }
        
        private void OnFnUpdatePerformanceTargetLinesDetailsOperationCompleted(object arg) {
            if ((this.FnUpdatePerformanceTargetLinesDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnUpdatePerformanceTargetLinesDetailsCompleted(this, new FnUpdatePerformanceTargetLinesDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnNewPerformanceLogEntry", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnNewPerformanceLogEntry_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnNewPerformanceLogEntry(string empNo, string scorecardNumber, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime startDate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dueDate, string tdescription) {
            object[] results = this.Invoke("FnNewPerformanceLogEntry", new object[] {
                        empNo,
                        scorecardNumber,
                        startDate,
                        dueDate,
                        tdescription});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnNewPerformanceLogEntryAsync(string empNo, string scorecardNumber, System.DateTime startDate, System.DateTime dueDate, string tdescription) {
            this.FnNewPerformanceLogEntryAsync(empNo, scorecardNumber, startDate, dueDate, tdescription, null);
        }
        
        /// <remarks/>
        public void FnNewPerformanceLogEntryAsync(string empNo, string scorecardNumber, System.DateTime startDate, System.DateTime dueDate, string tdescription, object userState) {
            if ((this.FnNewPerformanceLogEntryOperationCompleted == null)) {
                this.FnNewPerformanceLogEntryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnNewPerformanceLogEntryOperationCompleted);
            }
            this.InvokeAsync("FnNewPerformanceLogEntry", new object[] {
                        empNo,
                        scorecardNumber,
                        startDate,
                        dueDate,
                        tdescription}, this.FnNewPerformanceLogEntryOperationCompleted, userState);
        }
        
        private void OnFnNewPerformanceLogEntryOperationCompleted(object arg) {
            if ((this.FnNewPerformanceLogEntryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnNewPerformanceLogEntryCompleted(this, new FnNewPerformanceLogEntryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnNewPerformanceAppraisalEntry", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnNewPerformanceAppraisalEntry_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnNewPerformanceAppraisalEntry(string empNo, string personalscorecard, string performanceplanno, string taskno, string strategicplanno) {
            object[] results = this.Invoke("FnNewPerformanceAppraisalEntry", new object[] {
                        empNo,
                        personalscorecard,
                        performanceplanno,
                        taskno,
                        strategicplanno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnNewPerformanceAppraisalEntryAsync(string empNo, string personalscorecard, string performanceplanno, string taskno, string strategicplanno) {
            this.FnNewPerformanceAppraisalEntryAsync(empNo, personalscorecard, performanceplanno, taskno, strategicplanno, null);
        }
        
        /// <remarks/>
        public void FnNewPerformanceAppraisalEntryAsync(string empNo, string personalscorecard, string performanceplanno, string taskno, string strategicplanno, object userState) {
            if ((this.FnNewPerformanceAppraisalEntryOperationCompleted == null)) {
                this.FnNewPerformanceAppraisalEntryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnNewPerformanceAppraisalEntryOperationCompleted);
            }
            this.InvokeAsync("FnNewPerformanceAppraisalEntry", new object[] {
                        empNo,
                        personalscorecard,
                        performanceplanno,
                        taskno,
                        strategicplanno}, this.FnNewPerformanceAppraisalEntryOperationCompleted, userState);
        }
        
        private void OnFnNewPerformanceAppraisalEntryOperationCompleted(object arg) {
            if ((this.FnNewPerformanceAppraisalEntryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnNewPerformanceAppraisalEntryCompleted(this, new FnNewPerformanceAppraisalEntryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnDeleteIndividualCardSubActivit" +
            "ies", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnDeleteIndividualCardSubActivities_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnDeleteIndividualCardSubActivities(string empNo, string scorecardNumber, string activityNo, int entryNumber) {
            object[] results = this.Invoke("FnDeleteIndividualCardSubActivities", new object[] {
                        empNo,
                        scorecardNumber,
                        activityNo,
                        entryNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnDeleteIndividualCardSubActivitiesAsync(string empNo, string scorecardNumber, string activityNo, int entryNumber) {
            this.FnDeleteIndividualCardSubActivitiesAsync(empNo, scorecardNumber, activityNo, entryNumber, null);
        }
        
        /// <remarks/>
        public void FnDeleteIndividualCardSubActivitiesAsync(string empNo, string scorecardNumber, string activityNo, int entryNumber, object userState) {
            if ((this.FnDeleteIndividualCardSubActivitiesOperationCompleted == null)) {
                this.FnDeleteIndividualCardSubActivitiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnDeleteIndividualCardSubActivitiesOperationCompleted);
            }
            this.InvokeAsync("FnDeleteIndividualCardSubActivities", new object[] {
                        empNo,
                        scorecardNumber,
                        activityNo,
                        entryNumber}, this.FnDeleteIndividualCardSubActivitiesOperationCompleted, userState);
        }
        
        private void OnFnDeleteIndividualCardSubActivitiesOperationCompleted(object arg) {
            if ((this.FnDeleteIndividualCardSubActivitiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnDeleteIndividualCardSubActivitiesCompleted(this, new FnDeleteIndividualCardSubActivitiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnDeleteIndividualCardJDDescript" +
            "ionSubActivities", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnDeleteIndividualCardJDDescriptionSubActivities_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnDeleteIndividualCardJDDescriptionSubActivities(string empNo, string scorecardNumber, string activityNo, int entryNumber) {
            object[] results = this.Invoke("FnDeleteIndividualCardJDDescriptionSubActivities", new object[] {
                        empNo,
                        scorecardNumber,
                        activityNo,
                        entryNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnDeleteIndividualCardJDDescriptionSubActivitiesAsync(string empNo, string scorecardNumber, string activityNo, int entryNumber) {
            this.FnDeleteIndividualCardJDDescriptionSubActivitiesAsync(empNo, scorecardNumber, activityNo, entryNumber, null);
        }
        
        /// <remarks/>
        public void FnDeleteIndividualCardJDDescriptionSubActivitiesAsync(string empNo, string scorecardNumber, string activityNo, int entryNumber, object userState) {
            if ((this.FnDeleteIndividualCardJDDescriptionSubActivitiesOperationCompleted == null)) {
                this.FnDeleteIndividualCardJDDescriptionSubActivitiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnDeleteIndividualCardJDDescriptionSubActivitiesOperationCompleted);
            }
            this.InvokeAsync("FnDeleteIndividualCardJDDescriptionSubActivities", new object[] {
                        empNo,
                        scorecardNumber,
                        activityNo,
                        entryNumber}, this.FnDeleteIndividualCardJDDescriptionSubActivitiesOperationCompleted, userState);
        }
        
        private void OnFnDeleteIndividualCardJDDescriptionSubActivitiesOperationCompleted(object arg) {
            if ((this.FnDeleteIndividualCardJDDescriptionSubActivitiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnDeleteIndividualCardJDDescriptionSubActivitiesCompleted(this, new FnDeleteIndividualCardJDDescriptionSubActivitiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnDeleteIndividualActivities", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnDeleteIndividualActivities_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnDeleteIndividualActivities(string empNo, string scorecardNumber, int entryNumber) {
            object[] results = this.Invoke("FnDeleteIndividualActivities", new object[] {
                        empNo,
                        scorecardNumber,
                        entryNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnDeleteIndividualActivitiesAsync(string empNo, string scorecardNumber, int entryNumber) {
            this.FnDeleteIndividualActivitiesAsync(empNo, scorecardNumber, entryNumber, null);
        }
        
        /// <remarks/>
        public void FnDeleteIndividualActivitiesAsync(string empNo, string scorecardNumber, int entryNumber, object userState) {
            if ((this.FnDeleteIndividualActivitiesOperationCompleted == null)) {
                this.FnDeleteIndividualActivitiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnDeleteIndividualActivitiesOperationCompleted);
            }
            this.InvokeAsync("FnDeleteIndividualActivities", new object[] {
                        empNo,
                        scorecardNumber,
                        entryNumber}, this.FnDeleteIndividualActivitiesOperationCompleted, userState);
        }
        
        private void OnFnDeleteIndividualActivitiesOperationCompleted(object arg) {
            if ((this.FnDeleteIndividualActivitiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnDeleteIndividualActivitiesCompleted(this, new FnDeleteIndividualActivitiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnDeleteAdditionalActivities", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnDeleteAdditionalActivities_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnDeleteAdditionalActivities(string empNo, string scorecardNumber, int entryNumber, string initiativeNumber) {
            object[] results = this.Invoke("FnDeleteAdditionalActivities", new object[] {
                        empNo,
                        scorecardNumber,
                        entryNumber,
                        initiativeNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnDeleteAdditionalActivitiesAsync(string empNo, string scorecardNumber, int entryNumber, string initiativeNumber) {
            this.FnDeleteAdditionalActivitiesAsync(empNo, scorecardNumber, entryNumber, initiativeNumber, null);
        }
        
        /// <remarks/>
        public void FnDeleteAdditionalActivitiesAsync(string empNo, string scorecardNumber, int entryNumber, string initiativeNumber, object userState) {
            if ((this.FnDeleteAdditionalActivitiesOperationCompleted == null)) {
                this.FnDeleteAdditionalActivitiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnDeleteAdditionalActivitiesOperationCompleted);
            }
            this.InvokeAsync("FnDeleteAdditionalActivities", new object[] {
                        empNo,
                        scorecardNumber,
                        entryNumber,
                        initiativeNumber}, this.FnDeleteAdditionalActivitiesOperationCompleted, userState);
        }
        
        private void OnFnDeleteAdditionalActivitiesOperationCompleted(object arg) {
            if ((this.FnDeleteAdditionalActivitiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnDeleteAdditionalActivitiesCompleted(this, new FnDeleteAdditionalActivitiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnDeletePlogLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnDeletePlogLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnDeletePlogLines(string plogNumber, int entryNumber, string initiativeNumber) {
            object[] results = this.Invoke("FnDeletePlogLines", new object[] {
                        plogNumber,
                        entryNumber,
                        initiativeNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnDeletePlogLinesAsync(string plogNumber, int entryNumber, string initiativeNumber) {
            this.FnDeletePlogLinesAsync(plogNumber, entryNumber, initiativeNumber, null);
        }
        
        /// <remarks/>
        public void FnDeletePlogLinesAsync(string plogNumber, int entryNumber, string initiativeNumber, object userState) {
            if ((this.FnDeletePlogLinesOperationCompleted == null)) {
                this.FnDeletePlogLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnDeletePlogLinesOperationCompleted);
            }
            this.InvokeAsync("FnDeletePlogLines", new object[] {
                        plogNumber,
                        entryNumber,
                        initiativeNumber}, this.FnDeletePlogLinesOperationCompleted, userState);
        }
        
        private void OnFnDeletePlogLinesOperationCompleted(object arg) {
            if ((this.FnDeletePlogLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnDeletePlogLinesCompleted(this, new FnDeletePlogLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnNewIndividualCardSubActivities" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnNewIndividualCardSubActivities_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnNewIndividualCardSubActivities(string scorecardNumber, string activityNo, string subinitiative, int percentage, int activitytargets, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime startdate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime duedate, string unitofmeasure, string subindicator) {
            object[] results = this.Invoke("FnNewIndividualCardSubActivities", new object[] {
                        scorecardNumber,
                        activityNo,
                        subinitiative,
                        percentage,
                        activitytargets,
                        startdate,
                        duedate,
                        unitofmeasure,
                        subindicator});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnNewIndividualCardSubActivitiesAsync(string scorecardNumber, string activityNo, string subinitiative, int percentage, int activitytargets, System.DateTime startdate, System.DateTime duedate, string unitofmeasure, string subindicator) {
            this.FnNewIndividualCardSubActivitiesAsync(scorecardNumber, activityNo, subinitiative, percentage, activitytargets, startdate, duedate, unitofmeasure, subindicator, null);
        }
        
        /// <remarks/>
        public void FnNewIndividualCardSubActivitiesAsync(string scorecardNumber, string activityNo, string subinitiative, int percentage, int activitytargets, System.DateTime startdate, System.DateTime duedate, string unitofmeasure, string subindicator, object userState) {
            if ((this.FnNewIndividualCardSubActivitiesOperationCompleted == null)) {
                this.FnNewIndividualCardSubActivitiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnNewIndividualCardSubActivitiesOperationCompleted);
            }
            this.InvokeAsync("FnNewIndividualCardSubActivities", new object[] {
                        scorecardNumber,
                        activityNo,
                        subinitiative,
                        percentage,
                        activitytargets,
                        startdate,
                        duedate,
                        unitofmeasure,
                        subindicator}, this.FnNewIndividualCardSubActivitiesOperationCompleted, userState);
        }
        
        private void OnFnNewIndividualCardSubActivitiesOperationCompleted(object arg) {
            if ((this.FnNewIndividualCardSubActivitiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnNewIndividualCardSubActivitiesCompleted(this, new FnNewIndividualCardSubActivitiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnUpdateIndividualCardSubActivit" +
            "ies", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnUpdateIndividualCardSubActivities_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnUpdateIndividualCardSubActivities(string scorecardNumber, string activityNo, string subinitiative, int percentage, int activitytargets, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime startdate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime duedate, int entryNumber, string unitofmeasure, string subindicator) {
            object[] results = this.Invoke("FnUpdateIndividualCardSubActivities", new object[] {
                        scorecardNumber,
                        activityNo,
                        subinitiative,
                        percentage,
                        activitytargets,
                        startdate,
                        duedate,
                        entryNumber,
                        unitofmeasure,
                        subindicator});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnUpdateIndividualCardSubActivitiesAsync(string scorecardNumber, string activityNo, string subinitiative, int percentage, int activitytargets, System.DateTime startdate, System.DateTime duedate, int entryNumber, string unitofmeasure, string subindicator) {
            this.FnUpdateIndividualCardSubActivitiesAsync(scorecardNumber, activityNo, subinitiative, percentage, activitytargets, startdate, duedate, entryNumber, unitofmeasure, subindicator, null);
        }
        
        /// <remarks/>
        public void FnUpdateIndividualCardSubActivitiesAsync(string scorecardNumber, string activityNo, string subinitiative, int percentage, int activitytargets, System.DateTime startdate, System.DateTime duedate, int entryNumber, string unitofmeasure, string subindicator, object userState) {
            if ((this.FnUpdateIndividualCardSubActivitiesOperationCompleted == null)) {
                this.FnUpdateIndividualCardSubActivitiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnUpdateIndividualCardSubActivitiesOperationCompleted);
            }
            this.InvokeAsync("FnUpdateIndividualCardSubActivities", new object[] {
                        scorecardNumber,
                        activityNo,
                        subinitiative,
                        percentage,
                        activitytargets,
                        startdate,
                        duedate,
                        entryNumber,
                        unitofmeasure,
                        subindicator}, this.FnUpdateIndividualCardSubActivitiesOperationCompleted, userState);
        }
        
        private void OnFnUpdateIndividualCardSubActivitiesOperationCompleted(object arg) {
            if ((this.FnUpdateIndividualCardSubActivitiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnUpdateIndividualCardSubActivitiesCompleted(this, new FnUpdateIndividualCardSubActivitiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnNewIndividualCardJobDescriptio" +
            "nSubActivities", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnNewIndividualCardJobDescriptionSubActivities_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnNewIndividualCardJobDescriptionSubActivities(string scorecardNumber, string activityNo, string subinitiative, int percentage, int activitytargets, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime startdate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime duedate, string unitofmeasure, string subindicator) {
            object[] results = this.Invoke("FnNewIndividualCardJobDescriptionSubActivities", new object[] {
                        scorecardNumber,
                        activityNo,
                        subinitiative,
                        percentage,
                        activitytargets,
                        startdate,
                        duedate,
                        unitofmeasure,
                        subindicator});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnNewIndividualCardJobDescriptionSubActivitiesAsync(string scorecardNumber, string activityNo, string subinitiative, int percentage, int activitytargets, System.DateTime startdate, System.DateTime duedate, string unitofmeasure, string subindicator) {
            this.FnNewIndividualCardJobDescriptionSubActivitiesAsync(scorecardNumber, activityNo, subinitiative, percentage, activitytargets, startdate, duedate, unitofmeasure, subindicator, null);
        }
        
        /// <remarks/>
        public void FnNewIndividualCardJobDescriptionSubActivitiesAsync(string scorecardNumber, string activityNo, string subinitiative, int percentage, int activitytargets, System.DateTime startdate, System.DateTime duedate, string unitofmeasure, string subindicator, object userState) {
            if ((this.FnNewIndividualCardJobDescriptionSubActivitiesOperationCompleted == null)) {
                this.FnNewIndividualCardJobDescriptionSubActivitiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnNewIndividualCardJobDescriptionSubActivitiesOperationCompleted);
            }
            this.InvokeAsync("FnNewIndividualCardJobDescriptionSubActivities", new object[] {
                        scorecardNumber,
                        activityNo,
                        subinitiative,
                        percentage,
                        activitytargets,
                        startdate,
                        duedate,
                        unitofmeasure,
                        subindicator}, this.FnNewIndividualCardJobDescriptionSubActivitiesOperationCompleted, userState);
        }
        
        private void OnFnNewIndividualCardJobDescriptionSubActivitiesOperationCompleted(object arg) {
            if ((this.FnNewIndividualCardJobDescriptionSubActivitiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnNewIndividualCardJobDescriptionSubActivitiesCompleted(this, new FnNewIndividualCardJobDescriptionSubActivitiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnUpdateIndividualCardJobDescirp" +
            "tionSubActivities", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnUpdateIndividualCardJobDescirptionSubActivities_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnUpdateIndividualCardJobDescirptionSubActivities(string scorecardNumber, string activityNo, string subinitiative, int percentage, int activitytargets, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime startdate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime duedate, int entryNumber, string unitofmeasure, string subindicator) {
            object[] results = this.Invoke("FnUpdateIndividualCardJobDescirptionSubActivities", new object[] {
                        scorecardNumber,
                        activityNo,
                        subinitiative,
                        percentage,
                        activitytargets,
                        startdate,
                        duedate,
                        entryNumber,
                        unitofmeasure,
                        subindicator});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnUpdateIndividualCardJobDescirptionSubActivitiesAsync(string scorecardNumber, string activityNo, string subinitiative, int percentage, int activitytargets, System.DateTime startdate, System.DateTime duedate, int entryNumber, string unitofmeasure, string subindicator) {
            this.FnUpdateIndividualCardJobDescirptionSubActivitiesAsync(scorecardNumber, activityNo, subinitiative, percentage, activitytargets, startdate, duedate, entryNumber, unitofmeasure, subindicator, null);
        }
        
        /// <remarks/>
        public void FnUpdateIndividualCardJobDescirptionSubActivitiesAsync(string scorecardNumber, string activityNo, string subinitiative, int percentage, int activitytargets, System.DateTime startdate, System.DateTime duedate, int entryNumber, string unitofmeasure, string subindicator, object userState) {
            if ((this.FnUpdateIndividualCardJobDescirptionSubActivitiesOperationCompleted == null)) {
                this.FnUpdateIndividualCardJobDescirptionSubActivitiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnUpdateIndividualCardJobDescirptionSubActivitiesOperationCompleted);
            }
            this.InvokeAsync("FnUpdateIndividualCardJobDescirptionSubActivities", new object[] {
                        scorecardNumber,
                        activityNo,
                        subinitiative,
                        percentage,
                        activitytargets,
                        startdate,
                        duedate,
                        entryNumber,
                        unitofmeasure,
                        subindicator}, this.FnUpdateIndividualCardJobDescirptionSubActivitiesOperationCompleted, userState);
        }
        
        private void OnFnUpdateIndividualCardJobDescirptionSubActivitiesOperationCompleted(object arg) {
            if ((this.FnUpdateIndividualCardJobDescirptionSubActivitiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnUpdateIndividualCardJobDescirptionSubActivitiesCompleted(this, new FnUpdateIndividualCardJobDescirptionSubActivitiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnSuggestPlogLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnSuggestPlogLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSuggestPlogLines(string strategyid, string personalscorecardid, string empNumber) {
            object[] results = this.Invoke("FnSuggestPlogLines", new object[] {
                        strategyid,
                        personalscorecardid,
                        empNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSuggestPlogLinesAsync(string strategyid, string personalscorecardid, string empNumber) {
            this.FnSuggestPlogLinesAsync(strategyid, personalscorecardid, empNumber, null);
        }
        
        /// <remarks/>
        public void FnSuggestPlogLinesAsync(string strategyid, string personalscorecardid, string empNumber, object userState) {
            if ((this.FnSuggestPlogLinesOperationCompleted == null)) {
                this.FnSuggestPlogLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSuggestPlogLinesOperationCompleted);
            }
            this.InvokeAsync("FnSuggestPlogLines", new object[] {
                        strategyid,
                        personalscorecardid,
                        empNumber}, this.FnSuggestPlogLinesOperationCompleted, userState);
        }
        
        private void OnFnSuggestPlogLinesOperationCompleted(object arg) {
            if ((this.FnSuggestPlogLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSuggestPlogLinesCompleted(this, new FnSuggestPlogLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnGetImprestApproverComments", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnGetImprestApproverComments_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGetImprestApproverComments(string imprestMemo) {
            object[] results = this.Invoke("FnGetImprestApproverComments", new object[] {
                        imprestMemo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetImprestApproverCommentsAsync(string imprestMemo) {
            this.FnGetImprestApproverCommentsAsync(imprestMemo, null);
        }
        
        /// <remarks/>
        public void FnGetImprestApproverCommentsAsync(string imprestMemo, object userState) {
            if ((this.FnGetImprestApproverCommentsOperationCompleted == null)) {
                this.FnGetImprestApproverCommentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetImprestApproverCommentsOperationCompleted);
            }
            this.InvokeAsync("FnGetImprestApproverComments", new object[] {
                        imprestMemo}, this.FnGetImprestApproverCommentsOperationCompleted, userState);
        }
        
        private void OnFnGetImprestApproverCommentsOperationCompleted(object arg) {
            if ((this.FnGetImprestApproverCommentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetImprestApproverCommentsCompleted(this, new FnGetImprestApproverCommentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:SendPerformanceContractforApprov" +
            "al", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="SendPerformanceContractforApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string SendPerformanceContractforApproval(string employeeNo, string pcnumber) {
            object[] results = this.Invoke("SendPerformanceContractforApproval", new object[] {
                        employeeNo,
                        pcnumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendPerformanceContractforApprovalAsync(string employeeNo, string pcnumber) {
            this.SendPerformanceContractforApprovalAsync(employeeNo, pcnumber, null);
        }
        
        /// <remarks/>
        public void SendPerformanceContractforApprovalAsync(string employeeNo, string pcnumber, object userState) {
            if ((this.SendPerformanceContractforApprovalOperationCompleted == null)) {
                this.SendPerformanceContractforApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendPerformanceContractforApprovalOperationCompleted);
            }
            this.InvokeAsync("SendPerformanceContractforApproval", new object[] {
                        employeeNo,
                        pcnumber}, this.SendPerformanceContractforApprovalOperationCompleted, userState);
        }
        
        private void OnSendPerformanceContractforApprovalOperationCompleted(object arg) {
            if ((this.SendPerformanceContractforApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendPerformanceContractforApprovalCompleted(this, new SendPerformanceContractforApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnSubmitSelectedPLogCategories", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnSubmitSelectedPLogCategories_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitSelectedPLogCategories(string plogNumber, string initiativeNumber) {
            object[] results = this.Invoke("FnSubmitSelectedPLogCategories", new object[] {
                        plogNumber,
                        initiativeNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitSelectedPLogCategoriesAsync(string plogNumber, string initiativeNumber) {
            this.FnSubmitSelectedPLogCategoriesAsync(plogNumber, initiativeNumber, null);
        }
        
        /// <remarks/>
        public void FnSubmitSelectedPLogCategoriesAsync(string plogNumber, string initiativeNumber, object userState) {
            if ((this.FnSubmitSelectedPLogCategoriesOperationCompleted == null)) {
                this.FnSubmitSelectedPLogCategoriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitSelectedPLogCategoriesOperationCompleted);
            }
            this.InvokeAsync("FnSubmitSelectedPLogCategories", new object[] {
                        plogNumber,
                        initiativeNumber}, this.FnSubmitSelectedPLogCategoriesOperationCompleted, userState);
        }
        
        private void OnFnSubmitSelectedPLogCategoriesOperationCompleted(object arg) {
            if ((this.FnSubmitSelectedPLogCategoriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitSelectedPLogCategoriesCompleted(this, new FnSubmitSelectedPLogCategoriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnSubmitSelectedAddPLogCategorie" +
            "s", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnSubmitSelectedAddPLogCategories_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitSelectedAddPLogCategories(string plogNumber, string initiativeNumber) {
            object[] results = this.Invoke("FnSubmitSelectedAddPLogCategories", new object[] {
                        plogNumber,
                        initiativeNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitSelectedAddPLogCategoriesAsync(string plogNumber, string initiativeNumber) {
            this.FnSubmitSelectedAddPLogCategoriesAsync(plogNumber, initiativeNumber, null);
        }
        
        /// <remarks/>
        public void FnSubmitSelectedAddPLogCategoriesAsync(string plogNumber, string initiativeNumber, object userState) {
            if ((this.FnSubmitSelectedAddPLogCategoriesOperationCompleted == null)) {
                this.FnSubmitSelectedAddPLogCategoriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitSelectedAddPLogCategoriesOperationCompleted);
            }
            this.InvokeAsync("FnSubmitSelectedAddPLogCategories", new object[] {
                        plogNumber,
                        initiativeNumber}, this.FnSubmitSelectedAddPLogCategoriesOperationCompleted, userState);
        }
        
        private void OnFnSubmitSelectedAddPLogCategoriesOperationCompleted(object arg) {
            if ((this.FnSubmitSelectedAddPLogCategoriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitSelectedAddPLogCategoriesCompleted(this, new FnSubmitSelectedAddPLogCategoriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnSubmitSelectedJDPLogCategories" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnSubmitSelectedJDPLogCategories_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitSelectedJDPLogCategories(string plogNumber, string initiativeNumber) {
            object[] results = this.Invoke("FnSubmitSelectedJDPLogCategories", new object[] {
                        plogNumber,
                        initiativeNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitSelectedJDPLogCategoriesAsync(string plogNumber, string initiativeNumber) {
            this.FnSubmitSelectedJDPLogCategoriesAsync(plogNumber, initiativeNumber, null);
        }
        
        /// <remarks/>
        public void FnSubmitSelectedJDPLogCategoriesAsync(string plogNumber, string initiativeNumber, object userState) {
            if ((this.FnSubmitSelectedJDPLogCategoriesOperationCompleted == null)) {
                this.FnSubmitSelectedJDPLogCategoriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitSelectedJDPLogCategoriesOperationCompleted);
            }
            this.InvokeAsync("FnSubmitSelectedJDPLogCategories", new object[] {
                        plogNumber,
                        initiativeNumber}, this.FnSubmitSelectedJDPLogCategoriesOperationCompleted, userState);
        }
        
        private void OnFnSubmitSelectedJDPLogCategoriesOperationCompleted(object arg) {
            if ((this.FnSubmitSelectedJDPLogCategoriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitSelectedJDPLogCategoriesCompleted(this, new FnSubmitSelectedJDPLogCategoriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnSubmitSelectedPerformanceContr" +
            "actCategories", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnSubmitSelectedPerformanceContractCategories_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitSelectedPerformanceContractCategories(string strategyid, string personalscorecardid, string workplanNumber, string initiativeNumber) {
            object[] results = this.Invoke("FnSubmitSelectedPerformanceContractCategories", new object[] {
                        strategyid,
                        personalscorecardid,
                        workplanNumber,
                        initiativeNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitSelectedPerformanceContractCategoriesAsync(string strategyid, string personalscorecardid, string workplanNumber, string initiativeNumber) {
            this.FnSubmitSelectedPerformanceContractCategoriesAsync(strategyid, personalscorecardid, workplanNumber, initiativeNumber, null);
        }
        
        /// <remarks/>
        public void FnSubmitSelectedPerformanceContractCategoriesAsync(string strategyid, string personalscorecardid, string workplanNumber, string initiativeNumber, object userState) {
            if ((this.FnSubmitSelectedPerformanceContractCategoriesOperationCompleted == null)) {
                this.FnSubmitSelectedPerformanceContractCategoriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitSelectedPerformanceContractCategoriesOperationCompleted);
            }
            this.InvokeAsync("FnSubmitSelectedPerformanceContractCategories", new object[] {
                        strategyid,
                        personalscorecardid,
                        workplanNumber,
                        initiativeNumber}, this.FnSubmitSelectedPerformanceContractCategoriesOperationCompleted, userState);
        }
        
        private void OnFnSubmitSelectedPerformanceContractCategoriesOperationCompleted(object arg) {
            if ((this.FnSubmitSelectedPerformanceContractCategoriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitSelectedPerformanceContractCategoriesCompleted(this, new FnSubmitSelectedPerformanceContractCategoriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnUpdateJobContractDescriptionDe" +
            "tails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnUpdateJobContractDescriptionDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnUpdateJobContractDescriptionDetails(string entryNumber, decimal agreedTarget, decimal assignedweight) {
            object[] results = this.Invoke("FnUpdateJobContractDescriptionDetails", new object[] {
                        entryNumber,
                        agreedTarget,
                        assignedweight});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnUpdateJobContractDescriptionDetailsAsync(string entryNumber, decimal agreedTarget, decimal assignedweight) {
            this.FnUpdateJobContractDescriptionDetailsAsync(entryNumber, agreedTarget, assignedweight, null);
        }
        
        /// <remarks/>
        public void FnUpdateJobContractDescriptionDetailsAsync(string entryNumber, decimal agreedTarget, decimal assignedweight, object userState) {
            if ((this.FnUpdateJobContractDescriptionDetailsOperationCompleted == null)) {
                this.FnUpdateJobContractDescriptionDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnUpdateJobContractDescriptionDetailsOperationCompleted);
            }
            this.InvokeAsync("FnUpdateJobContractDescriptionDetails", new object[] {
                        entryNumber,
                        agreedTarget,
                        assignedweight}, this.FnUpdateJobContractDescriptionDetailsOperationCompleted, userState);
        }
        
        private void OnFnUpdateJobContractDescriptionDetailsOperationCompleted(object arg) {
            if ((this.FnUpdateJobContractDescriptionDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnUpdateJobContractDescriptionDetailsCompleted(this, new FnUpdateJobContractDescriptionDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnNewIndividualCardAdditionalAct" +
            "ivities", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnNewIndividualCardAdditionalActivities_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnNewIndividualCardAdditionalActivities(string empNo, string scorecardNumber, string tdirectorates, string tinitativeNo, string tstrategyNumber, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime startdate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime enddate, decimal agreedtargets, decimal tasssignedWeight) {
            object[] results = this.Invoke("FnNewIndividualCardAdditionalActivities", new object[] {
                        empNo,
                        scorecardNumber,
                        tdirectorates,
                        tinitativeNo,
                        tstrategyNumber,
                        startdate,
                        enddate,
                        agreedtargets,
                        tasssignedWeight});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnNewIndividualCardAdditionalActivitiesAsync(string empNo, string scorecardNumber, string tdirectorates, string tinitativeNo, string tstrategyNumber, System.DateTime startdate, System.DateTime enddate, decimal agreedtargets, decimal tasssignedWeight) {
            this.FnNewIndividualCardAdditionalActivitiesAsync(empNo, scorecardNumber, tdirectorates, tinitativeNo, tstrategyNumber, startdate, enddate, agreedtargets, tasssignedWeight, null);
        }
        
        /// <remarks/>
        public void FnNewIndividualCardAdditionalActivitiesAsync(string empNo, string scorecardNumber, string tdirectorates, string tinitativeNo, string tstrategyNumber, System.DateTime startdate, System.DateTime enddate, decimal agreedtargets, decimal tasssignedWeight, object userState) {
            if ((this.FnNewIndividualCardAdditionalActivitiesOperationCompleted == null)) {
                this.FnNewIndividualCardAdditionalActivitiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnNewIndividualCardAdditionalActivitiesOperationCompleted);
            }
            this.InvokeAsync("FnNewIndividualCardAdditionalActivities", new object[] {
                        empNo,
                        scorecardNumber,
                        tdirectorates,
                        tinitativeNo,
                        tstrategyNumber,
                        startdate,
                        enddate,
                        agreedtargets,
                        tasssignedWeight}, this.FnNewIndividualCardAdditionalActivitiesOperationCompleted, userState);
        }
        
        private void OnFnNewIndividualCardAdditionalActivitiesOperationCompleted(object arg) {
            if ((this.FnNewIndividualCardAdditionalActivitiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnNewIndividualCardAdditionalActivitiesCompleted(this, new FnNewIndividualCardAdditionalActivitiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnAddAditionalInitiativesTargets" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnAddAditionalInitiativesTargets_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnAddAditionalInitiativesTargets(string pcNumber, int entryno, decimal agreedtarget, decimal annualtarget, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime startdate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime enddate) {
            object[] results = this.Invoke("FnAddAditionalInitiativesTargets", new object[] {
                        pcNumber,
                        entryno,
                        agreedtarget,
                        annualtarget,
                        startdate,
                        enddate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnAddAditionalInitiativesTargetsAsync(string pcNumber, int entryno, decimal agreedtarget, decimal annualtarget, System.DateTime startdate, System.DateTime enddate) {
            this.FnAddAditionalInitiativesTargetsAsync(pcNumber, entryno, agreedtarget, annualtarget, startdate, enddate, null);
        }
        
        /// <remarks/>
        public void FnAddAditionalInitiativesTargetsAsync(string pcNumber, int entryno, decimal agreedtarget, decimal annualtarget, System.DateTime startdate, System.DateTime enddate, object userState) {
            if ((this.FnAddAditionalInitiativesTargetsOperationCompleted == null)) {
                this.FnAddAditionalInitiativesTargetsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnAddAditionalInitiativesTargetsOperationCompleted);
            }
            this.InvokeAsync("FnAddAditionalInitiativesTargets", new object[] {
                        pcNumber,
                        entryno,
                        agreedtarget,
                        annualtarget,
                        startdate,
                        enddate}, this.FnAddAditionalInitiativesTargetsOperationCompleted, userState);
        }
        
        private void OnFnAddAditionalInitiativesTargetsOperationCompleted(object arg) {
            if ((this.FnAddAditionalInitiativesTargetsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnAddAditionalInitiativesTargetsCompleted(this, new FnAddAditionalInitiativesTargetsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnNewJobDescriptionDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnNewJobDescriptionDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnNewJobDescriptionDetails(string empNumber, string workpanNumber, string jobDescription) {
            object[] results = this.Invoke("FnNewJobDescriptionDetails", new object[] {
                        empNumber,
                        workpanNumber,
                        jobDescription});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnNewJobDescriptionDetailsAsync(string empNumber, string workpanNumber, string jobDescription) {
            this.FnNewJobDescriptionDetailsAsync(empNumber, workpanNumber, jobDescription, null);
        }
        
        /// <remarks/>
        public void FnNewJobDescriptionDetailsAsync(string empNumber, string workpanNumber, string jobDescription, object userState) {
            if ((this.FnNewJobDescriptionDetailsOperationCompleted == null)) {
                this.FnNewJobDescriptionDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnNewJobDescriptionDetailsOperationCompleted);
            }
            this.InvokeAsync("FnNewJobDescriptionDetails", new object[] {
                        empNumber,
                        workpanNumber,
                        jobDescription}, this.FnNewJobDescriptionDetailsOperationCompleted, userState);
        }
        
        private void OnFnNewJobDescriptionDetailsOperationCompleted(object arg) {
            if ((this.FnNewJobDescriptionDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnNewJobDescriptionDetailsCompleted(this, new FnNewJobDescriptionDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnDeletePerformanceContractCateg" +
            "ories", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnDeletePerformanceContractCategories_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnDeletePerformanceContractCategories(string empNumber, string personalscorecardid, string initiativeNumber) {
            object[] results = this.Invoke("FnDeletePerformanceContractCategories", new object[] {
                        empNumber,
                        personalscorecardid,
                        initiativeNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnDeletePerformanceContractCategoriesAsync(string empNumber, string personalscorecardid, string initiativeNumber) {
            this.FnDeletePerformanceContractCategoriesAsync(empNumber, personalscorecardid, initiativeNumber, null);
        }
        
        /// <remarks/>
        public void FnDeletePerformanceContractCategoriesAsync(string empNumber, string personalscorecardid, string initiativeNumber, object userState) {
            if ((this.FnDeletePerformanceContractCategoriesOperationCompleted == null)) {
                this.FnDeletePerformanceContractCategoriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnDeletePerformanceContractCategoriesOperationCompleted);
            }
            this.InvokeAsync("FnDeletePerformanceContractCategories", new object[] {
                        empNumber,
                        personalscorecardid,
                        initiativeNumber}, this.FnDeletePerformanceContractCategoriesOperationCompleted, userState);
        }
        
        private void OnFnDeletePerformanceContractCategoriesOperationCompleted(object arg) {
            if ((this.FnDeletePerformanceContractCategoriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnDeletePerformanceContractCategoriesCompleted(this, new FnDeletePerformanceContractCategoriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnDeleteAdditionalPerformanceCon" +
            "tractCategories", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnDeleteAdditionalPerformanceContractCategories_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnDeleteAdditionalPerformanceContractCategories(string empNumber, string personalscorecardid, string initiativeNumber) {
            object[] results = this.Invoke("FnDeleteAdditionalPerformanceContractCategories", new object[] {
                        empNumber,
                        personalscorecardid,
                        initiativeNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnDeleteAdditionalPerformanceContractCategoriesAsync(string empNumber, string personalscorecardid, string initiativeNumber) {
            this.FnDeleteAdditionalPerformanceContractCategoriesAsync(empNumber, personalscorecardid, initiativeNumber, null);
        }
        
        /// <remarks/>
        public void FnDeleteAdditionalPerformanceContractCategoriesAsync(string empNumber, string personalscorecardid, string initiativeNumber, object userState) {
            if ((this.FnDeleteAdditionalPerformanceContractCategoriesOperationCompleted == null)) {
                this.FnDeleteAdditionalPerformanceContractCategoriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnDeleteAdditionalPerformanceContractCategoriesOperationCompleted);
            }
            this.InvokeAsync("FnDeleteAdditionalPerformanceContractCategories", new object[] {
                        empNumber,
                        personalscorecardid,
                        initiativeNumber}, this.FnDeleteAdditionalPerformanceContractCategoriesOperationCompleted, userState);
        }
        
        private void OnFnDeleteAdditionalPerformanceContractCategoriesOperationCompleted(object arg) {
            if ((this.FnDeleteAdditionalPerformanceContractCategoriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnDeleteAdditionalPerformanceContractCategoriesCompleted(this, new FnDeleteAdditionalPerformanceContractCategoriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnDeleteJobDescription", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnDeleteJobDescription_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnDeleteJobDescription(string empNumber, string personalscorecardid, string initiativeNumber) {
            object[] results = this.Invoke("FnDeleteJobDescription", new object[] {
                        empNumber,
                        personalscorecardid,
                        initiativeNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnDeleteJobDescriptionAsync(string empNumber, string personalscorecardid, string initiativeNumber) {
            this.FnDeleteJobDescriptionAsync(empNumber, personalscorecardid, initiativeNumber, null);
        }
        
        /// <remarks/>
        public void FnDeleteJobDescriptionAsync(string empNumber, string personalscorecardid, string initiativeNumber, object userState) {
            if ((this.FnDeleteJobDescriptionOperationCompleted == null)) {
                this.FnDeleteJobDescriptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnDeleteJobDescriptionOperationCompleted);
            }
            this.InvokeAsync("FnDeleteJobDescription", new object[] {
                        empNumber,
                        personalscorecardid,
                        initiativeNumber}, this.FnDeleteJobDescriptionOperationCompleted, userState);
        }
        
        private void OnFnDeleteJobDescriptionOperationCompleted(object arg) {
            if ((this.FnDeleteJobDescriptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnDeleteJobDescriptionCompleted(this, new FnDeleteJobDescriptionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FNewPerformanceTargetLinesDetail" +
            "s", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FNewPerformanceTargetLinesDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FNewPerformanceTargetLinesDetails(string plogNumber, string empNumber, string activityNumber) {
            object[] results = this.Invoke("FNewPerformanceTargetLinesDetails", new object[] {
                        plogNumber,
                        empNumber,
                        activityNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FNewPerformanceTargetLinesDetailsAsync(string plogNumber, string empNumber, string activityNumber) {
            this.FNewPerformanceTargetLinesDetailsAsync(plogNumber, empNumber, activityNumber, null);
        }
        
        /// <remarks/>
        public void FNewPerformanceTargetLinesDetailsAsync(string plogNumber, string empNumber, string activityNumber, object userState) {
            if ((this.FNewPerformanceTargetLinesDetailsOperationCompleted == null)) {
                this.FNewPerformanceTargetLinesDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFNewPerformanceTargetLinesDetailsOperationCompleted);
            }
            this.InvokeAsync("FNewPerformanceTargetLinesDetails", new object[] {
                        plogNumber,
                        empNumber,
                        activityNumber}, this.FNewPerformanceTargetLinesDetailsOperationCompleted, userState);
        }
        
        private void OnFNewPerformanceTargetLinesDetailsOperationCompleted(object arg) {
            if ((this.FNewPerformanceTargetLinesDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FNewPerformanceTargetLinesDetailsCompleted(this, new FNewPerformanceTargetLinesDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnCreateCandidateDocumentsLink", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnCreateCandidateDocumentsLink_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnCreateCandidateDocumentsLink(string applicantNo, string applicationNo, string fileName, string fileLink) {
            object[] results = this.Invoke("FnCreateCandidateDocumentsLink", new object[] {
                        applicantNo,
                        applicationNo,
                        fileName,
                        fileLink});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnCreateCandidateDocumentsLinkAsync(string applicantNo, string applicationNo, string fileName, string fileLink) {
            this.FnCreateCandidateDocumentsLinkAsync(applicantNo, applicationNo, fileName, fileLink, null);
        }
        
        /// <remarks/>
        public void FnCreateCandidateDocumentsLinkAsync(string applicantNo, string applicationNo, string fileName, string fileLink, object userState) {
            if ((this.FnCreateCandidateDocumentsLinkOperationCompleted == null)) {
                this.FnCreateCandidateDocumentsLinkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnCreateCandidateDocumentsLinkOperationCompleted);
            }
            this.InvokeAsync("FnCreateCandidateDocumentsLink", new object[] {
                        applicantNo,
                        applicationNo,
                        fileName,
                        fileLink}, this.FnCreateCandidateDocumentsLinkOperationCompleted, userState);
        }
        
        private void OnFnCreateCandidateDocumentsLinkOperationCompleted(object arg) {
            if ((this.FnCreateCandidateDocumentsLinkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnCreateCandidateDocumentsLinkCompleted(this, new FnCreateCandidateDocumentsLinkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnCreateBusinessResearchResponse" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnCreateBusinessResearchResponse_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnCreateBusinessResearchResponse(string surveyno, string employeeNo, string surveytype, string department, string directorate, string description) {
            object[] results = this.Invoke("FnCreateBusinessResearchResponse", new object[] {
                        surveyno,
                        employeeNo,
                        surveytype,
                        department,
                        directorate,
                        description});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnCreateBusinessResearchResponseAsync(string surveyno, string employeeNo, string surveytype, string department, string directorate, string description) {
            this.FnCreateBusinessResearchResponseAsync(surveyno, employeeNo, surveytype, department, directorate, description, null);
        }
        
        /// <remarks/>
        public void FnCreateBusinessResearchResponseAsync(string surveyno, string employeeNo, string surveytype, string department, string directorate, string description, object userState) {
            if ((this.FnCreateBusinessResearchResponseOperationCompleted == null)) {
                this.FnCreateBusinessResearchResponseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnCreateBusinessResearchResponseOperationCompleted);
            }
            this.InvokeAsync("FnCreateBusinessResearchResponse", new object[] {
                        surveyno,
                        employeeNo,
                        surveytype,
                        department,
                        directorate,
                        description}, this.FnCreateBusinessResearchResponseOperationCompleted, userState);
        }
        
        private void OnFnCreateBusinessResearchResponseOperationCompleted(object arg) {
            if ((this.FnCreateBusinessResearchResponseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnCreateBusinessResearchResponseCompleted(this, new FnCreateBusinessResearchResponseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnCreateBRResponseQuestions", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnCreateBRResponseQuestions_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnCreateBRResponseQuestions(string surveyno, int question, string ratingoption, string generalresponse) {
            object[] results = this.Invoke("FnCreateBRResponseQuestions", new object[] {
                        surveyno,
                        question,
                        ratingoption,
                        generalresponse});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnCreateBRResponseQuestionsAsync(string surveyno, int question, string ratingoption, string generalresponse) {
            this.FnCreateBRResponseQuestionsAsync(surveyno, question, ratingoption, generalresponse, null);
        }
        
        /// <remarks/>
        public void FnCreateBRResponseQuestionsAsync(string surveyno, int question, string ratingoption, string generalresponse, object userState) {
            if ((this.FnCreateBRResponseQuestionsOperationCompleted == null)) {
                this.FnCreateBRResponseQuestionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnCreateBRResponseQuestionsOperationCompleted);
            }
            this.InvokeAsync("FnCreateBRResponseQuestions", new object[] {
                        surveyno,
                        question,
                        ratingoption,
                        generalresponse}, this.FnCreateBRResponseQuestionsOperationCompleted, userState);
        }
        
        private void OnFnCreateBRResponseQuestionsOperationCompleted(object arg) {
            if ((this.FnCreateBRResponseQuestionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnCreateBRResponseQuestionsCompleted(this, new FnCreateBRResponseQuestionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnInsertJDTargets", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnInsertJDTargets_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertJDTargets(string lineno, string workplanno, int annualtarget, int assignedtarget) {
            object[] results = this.Invoke("FnInsertJDTargets", new object[] {
                        lineno,
                        workplanno,
                        annualtarget,
                        assignedtarget});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertJDTargetsAsync(string lineno, string workplanno, int annualtarget, int assignedtarget) {
            this.FnInsertJDTargetsAsync(lineno, workplanno, annualtarget, assignedtarget, null);
        }
        
        /// <remarks/>
        public void FnInsertJDTargetsAsync(string lineno, string workplanno, int annualtarget, int assignedtarget, object userState) {
            if ((this.FnInsertJDTargetsOperationCompleted == null)) {
                this.FnInsertJDTargetsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertJDTargetsOperationCompleted);
            }
            this.InvokeAsync("FnInsertJDTargets", new object[] {
                        lineno,
                        workplanno,
                        annualtarget,
                        assignedtarget}, this.FnInsertJDTargetsOperationCompleted, userState);
        }
        
        private void OnFnInsertJDTargetsOperationCompleted(object arg) {
            if ((this.FnInsertJDTargetsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertJDTargetsCompleted(this, new FnInsertJDTargetsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnSubmitStandardAppraisal1", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnSubmitStandardAppraisal1_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitStandardAppraisal1(string employeeno, string annualreportingcode, string description, string supervisor) {
            object[] results = this.Invoke("FnSubmitStandardAppraisal1", new object[] {
                        employeeno,
                        annualreportingcode,
                        description,
                        supervisor});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitStandardAppraisal1Async(string employeeno, string annualreportingcode, string description, string supervisor) {
            this.FnSubmitStandardAppraisal1Async(employeeno, annualreportingcode, description, supervisor, null);
        }
        
        /// <remarks/>
        public void FnSubmitStandardAppraisal1Async(string employeeno, string annualreportingcode, string description, string supervisor, object userState) {
            if ((this.FnSubmitStandardAppraisal1OperationCompleted == null)) {
                this.FnSubmitStandardAppraisal1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitStandardAppraisal1OperationCompleted);
            }
            this.InvokeAsync("FnSubmitStandardAppraisal1", new object[] {
                        employeeno,
                        annualreportingcode,
                        description,
                        supervisor}, this.FnSubmitStandardAppraisal1OperationCompleted, userState);
        }
        
        private void OnFnSubmitStandardAppraisal1OperationCompleted(object arg) {
            if ((this.FnSubmitStandardAppraisal1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitStandardAppraisal1Completed(this, new FnSubmitStandardAppraisal1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnInsertStandardAppraisalObjecti" +
            "ves", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnInsertStandardAppraisalObjectives_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertStandardAppraisalObjectives(int linemo, int target) {
            object[] results = this.Invoke("FnInsertStandardAppraisalObjectives", new object[] {
                        linemo,
                        target});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertStandardAppraisalObjectivesAsync(int linemo, int target) {
            this.FnInsertStandardAppraisalObjectivesAsync(linemo, target, null);
        }
        
        /// <remarks/>
        public void FnInsertStandardAppraisalObjectivesAsync(int linemo, int target, object userState) {
            if ((this.FnInsertStandardAppraisalObjectivesOperationCompleted == null)) {
                this.FnInsertStandardAppraisalObjectivesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertStandardAppraisalObjectivesOperationCompleted);
            }
            this.InvokeAsync("FnInsertStandardAppraisalObjectives", new object[] {
                        linemo,
                        target}, this.FnInsertStandardAppraisalObjectivesOperationCompleted, userState);
        }
        
        private void OnFnInsertStandardAppraisalObjectivesOperationCompleted(object arg) {
            if ((this.FnInsertStandardAppraisalObjectivesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertStandardAppraisalObjectivesCompleted(this, new FnInsertStandardAppraisalObjectivesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnInsertStandardAppraisalProfici" +
            "ency", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnInsertStandardAppraisalProficiency_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertStandardAppraisalProficiency(int linemo, int target) {
            object[] results = this.Invoke("FnInsertStandardAppraisalProficiency", new object[] {
                        linemo,
                        target});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertStandardAppraisalProficiencyAsync(int linemo, int target) {
            this.FnInsertStandardAppraisalProficiencyAsync(linemo, target, null);
        }
        
        /// <remarks/>
        public void FnInsertStandardAppraisalProficiencyAsync(int linemo, int target, object userState) {
            if ((this.FnInsertStandardAppraisalProficiencyOperationCompleted == null)) {
                this.FnInsertStandardAppraisalProficiencyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertStandardAppraisalProficiencyOperationCompleted);
            }
            this.InvokeAsync("FnInsertStandardAppraisalProficiency", new object[] {
                        linemo,
                        target}, this.FnInsertStandardAppraisalProficiencyOperationCompleted, userState);
        }
        
        private void OnFnInsertStandardAppraisalProficiencyOperationCompleted(object arg) {
            if ((this.FnInsertStandardAppraisalProficiencyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertStandardAppraisalProficiencyCompleted(this, new FnInsertStandardAppraisalProficiencyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnGeneratePCReport", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnGeneratePCReport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGeneratePCReport(string pcno) {
            object[] results = this.Invoke("FnGeneratePCReport", new object[] {
                        pcno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGeneratePCReportAsync(string pcno) {
            this.FnGeneratePCReportAsync(pcno, null);
        }
        
        /// <remarks/>
        public void FnGeneratePCReportAsync(string pcno, object userState) {
            if ((this.FnGeneratePCReportOperationCompleted == null)) {
                this.FnGeneratePCReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGeneratePCReportOperationCompleted);
            }
            this.InvokeAsync("FnGeneratePCReport", new object[] {
                        pcno}, this.FnGeneratePCReportOperationCompleted, userState);
        }
        
        private void OnFnGeneratePCReportOperationCompleted(object arg) {
            if ((this.FnGeneratePCReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGeneratePCReportCompleted(this, new FnGeneratePCReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnGeneratePCSIReport", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnGeneratePCSIReport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGeneratePCSIReport(string pcno) {
            object[] results = this.Invoke("FnGeneratePCSIReport", new object[] {
                        pcno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGeneratePCSIReportAsync(string pcno) {
            this.FnGeneratePCSIReportAsync(pcno, null);
        }
        
        /// <remarks/>
        public void FnGeneratePCSIReportAsync(string pcno, object userState) {
            if ((this.FnGeneratePCSIReportOperationCompleted == null)) {
                this.FnGeneratePCSIReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGeneratePCSIReportOperationCompleted);
            }
            this.InvokeAsync("FnGeneratePCSIReport", new object[] {
                        pcno}, this.FnGeneratePCSIReportOperationCompleted, userState);
        }
        
        private void OnFnGeneratePCSIReportOperationCompleted(object arg) {
            if ((this.FnGeneratePCSIReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGeneratePCSIReportCompleted(this, new FnGeneratePCSIReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnGenerateSubIndicatorsReport", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnGenerateSubIndicatorsReport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGenerateSubIndicatorsReport(string pcno) {
            object[] results = this.Invoke("FnGenerateSubIndicatorsReport", new object[] {
                        pcno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGenerateSubIndicatorsReportAsync(string pcno) {
            this.FnGenerateSubIndicatorsReportAsync(pcno, null);
        }
        
        /// <remarks/>
        public void FnGenerateSubIndicatorsReportAsync(string pcno, object userState) {
            if ((this.FnGenerateSubIndicatorsReportOperationCompleted == null)) {
                this.FnGenerateSubIndicatorsReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGenerateSubIndicatorsReportOperationCompleted);
            }
            this.InvokeAsync("FnGenerateSubIndicatorsReport", new object[] {
                        pcno}, this.FnGenerateSubIndicatorsReportOperationCompleted, userState);
        }
        
        private void OnFnGenerateSubIndicatorsReportOperationCompleted(object arg) {
            if ((this.FnGenerateSubIndicatorsReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGenerateSubIndicatorsReportCompleted(this, new FnGenerateSubIndicatorsReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnGenerateBoardPCReport", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnGenerateBoardPCReport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGenerateBoardPCReport(string pcno) {
            object[] results = this.Invoke("FnGenerateBoardPCReport", new object[] {
                        pcno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGenerateBoardPCReportAsync(string pcno) {
            this.FnGenerateBoardPCReportAsync(pcno, null);
        }
        
        /// <remarks/>
        public void FnGenerateBoardPCReportAsync(string pcno, object userState) {
            if ((this.FnGenerateBoardPCReportOperationCompleted == null)) {
                this.FnGenerateBoardPCReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGenerateBoardPCReportOperationCompleted);
            }
            this.InvokeAsync("FnGenerateBoardPCReport", new object[] {
                        pcno}, this.FnGenerateBoardPCReportOperationCompleted, userState);
        }
        
        private void OnFnGenerateBoardPCReportOperationCompleted(object arg) {
            if ((this.FnGenerateBoardPCReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGenerateBoardPCReportCompleted(this, new FnGenerateBoardPCReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnGenerateCSPReport", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnGenerateCSPReport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGenerateCSPReport(string cspnumber) {
            object[] results = this.Invoke("FnGenerateCSPReport", new object[] {
                        cspnumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGenerateCSPReportAsync(string cspnumber) {
            this.FnGenerateCSPReportAsync(cspnumber, null);
        }
        
        /// <remarks/>
        public void FnGenerateCSPReportAsync(string cspnumber, object userState) {
            if ((this.FnGenerateCSPReportOperationCompleted == null)) {
                this.FnGenerateCSPReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGenerateCSPReportOperationCompleted);
            }
            this.InvokeAsync("FnGenerateCSPReport", new object[] {
                        cspnumber}, this.FnGenerateCSPReportOperationCompleted, userState);
        }
        
        private void OnFnGenerateCSPReportOperationCompleted(object arg) {
            if ((this.FnGenerateCSPReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGenerateCSPReportCompleted(this, new FnGenerateCSPReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnGenerateAnnualWorkPlanReport", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnGenerateAnnualWorkPlanReport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGenerateAnnualWorkPlanReport(string annualNumber) {
            object[] results = this.Invoke("FnGenerateAnnualWorkPlanReport", new object[] {
                        annualNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGenerateAnnualWorkPlanReportAsync(string annualNumber) {
            this.FnGenerateAnnualWorkPlanReportAsync(annualNumber, null);
        }
        
        /// <remarks/>
        public void FnGenerateAnnualWorkPlanReportAsync(string annualNumber, object userState) {
            if ((this.FnGenerateAnnualWorkPlanReportOperationCompleted == null)) {
                this.FnGenerateAnnualWorkPlanReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGenerateAnnualWorkPlanReportOperationCompleted);
            }
            this.InvokeAsync("FnGenerateAnnualWorkPlanReport", new object[] {
                        annualNumber}, this.FnGenerateAnnualWorkPlanReportOperationCompleted, userState);
        }
        
        private void OnFnGenerateAnnualWorkPlanReportOperationCompleted(object arg) {
            if ((this.FnGenerateAnnualWorkPlanReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGenerateAnnualWorkPlanReportCompleted(this, new FnGenerateAnnualWorkPlanReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnGeneratePLogReport", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnGeneratePLogReport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGeneratePLogReport(string pcno) {
            object[] results = this.Invoke("FnGeneratePLogReport", new object[] {
                        pcno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGeneratePLogReportAsync(string pcno) {
            this.FnGeneratePLogReportAsync(pcno, null);
        }
        
        /// <remarks/>
        public void FnGeneratePLogReportAsync(string pcno, object userState) {
            if ((this.FnGeneratePLogReportOperationCompleted == null)) {
                this.FnGeneratePLogReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGeneratePLogReportOperationCompleted);
            }
            this.InvokeAsync("FnGeneratePLogReport", new object[] {
                        pcno}, this.FnGeneratePLogReportOperationCompleted, userState);
        }
        
        private void OnFnGeneratePLogReportOperationCompleted(object arg) {
            if ((this.FnGeneratePLogReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGeneratePLogReportCompleted(this, new FnGeneratePLogReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnGenerateStandardAppraisalRepor" +
            "t", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnGenerateStandardAppraisalReport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGenerateStandardAppraisalReport(string appraisalNo) {
            object[] results = this.Invoke("FnGenerateStandardAppraisalReport", new object[] {
                        appraisalNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGenerateStandardAppraisalReportAsync(string appraisalNo) {
            this.FnGenerateStandardAppraisalReportAsync(appraisalNo, null);
        }
        
        /// <remarks/>
        public void FnGenerateStandardAppraisalReportAsync(string appraisalNo, object userState) {
            if ((this.FnGenerateStandardAppraisalReportOperationCompleted == null)) {
                this.FnGenerateStandardAppraisalReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGenerateStandardAppraisalReportOperationCompleted);
            }
            this.InvokeAsync("FnGenerateStandardAppraisalReport", new object[] {
                        appraisalNo}, this.FnGenerateStandardAppraisalReportOperationCompleted, userState);
        }
        
        private void OnFnGenerateStandardAppraisalReportOperationCompleted(object arg) {
            if ((this.FnGenerateStandardAppraisalReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGenerateStandardAppraisalReportCompleted(this, new FnGenerateStandardAppraisalReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:GenerateRMReport", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="GenerateRMReport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GenerateRMReport() {
            object[] results = this.Invoke("GenerateRMReport", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GenerateRMReportAsync() {
            this.GenerateRMReportAsync(null);
        }
        
        /// <remarks/>
        public void GenerateRMReportAsync(object userState) {
            if ((this.GenerateRMReportOperationCompleted == null)) {
                this.GenerateRMReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateRMReportOperationCompleted);
            }
            this.InvokeAsync("GenerateRMReport", new object[0], this.GenerateRMReportOperationCompleted, userState);
        }
        
        private void OnGenerateRMReportOperationCompleted(object arg) {
            if ((this.GenerateRMReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateRMReportCompleted(this, new GenerateRMReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:GenerateManagementPlanSummery", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="GenerateManagementPlanSummery_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GenerateManagementPlanSummery(int documentType, string documentNo) {
            object[] results = this.Invoke("GenerateManagementPlanSummery", new object[] {
                        documentType,
                        documentNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GenerateManagementPlanSummeryAsync(int documentType, string documentNo) {
            this.GenerateManagementPlanSummeryAsync(documentType, documentNo, null);
        }
        
        /// <remarks/>
        public void GenerateManagementPlanSummeryAsync(int documentType, string documentNo, object userState) {
            if ((this.GenerateManagementPlanSummeryOperationCompleted == null)) {
                this.GenerateManagementPlanSummeryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateManagementPlanSummeryOperationCompleted);
            }
            this.InvokeAsync("GenerateManagementPlanSummery", new object[] {
                        documentType,
                        documentNo}, this.GenerateManagementPlanSummeryOperationCompleted, userState);
        }
        
        private void OnGenerateManagementPlanSummeryOperationCompleted(object arg) {
            if ((this.GenerateManagementPlanSummeryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateManagementPlanSummeryCompleted(this, new GenerateManagementPlanSummeryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:GenerateRiskFrameworkTest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="GenerateRiskFrameworkTest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GenerateRiskFrameworkTest(int documentType, string documentNo) {
            object[] results = this.Invoke("GenerateRiskFrameworkTest", new object[] {
                        documentType,
                        documentNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GenerateRiskFrameworkTestAsync(int documentType, string documentNo) {
            this.GenerateRiskFrameworkTestAsync(documentType, documentNo, null);
        }
        
        /// <remarks/>
        public void GenerateRiskFrameworkTestAsync(int documentType, string documentNo, object userState) {
            if ((this.GenerateRiskFrameworkTestOperationCompleted == null)) {
                this.GenerateRiskFrameworkTestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateRiskFrameworkTestOperationCompleted);
            }
            this.InvokeAsync("GenerateRiskFrameworkTest", new object[] {
                        documentType,
                        documentNo}, this.GenerateRiskFrameworkTestOperationCompleted, userState);
        }
        
        private void OnGenerateRiskFrameworkTestOperationCompleted(object arg) {
            if ((this.GenerateRiskFrameworkTestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateRiskFrameworkTestCompleted(this, new GenerateRiskFrameworkTestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:CreateIctRequest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="CreateIctRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateIctRequest(string empNo, string description, string category) {
            object[] results = this.Invoke("CreateIctRequest", new object[] {
                        empNo,
                        description,
                        category});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateIctRequestAsync(string empNo, string description, string category) {
            this.CreateIctRequestAsync(empNo, description, category, null);
        }
        
        /// <remarks/>
        public void CreateIctRequestAsync(string empNo, string description, string category, object userState) {
            if ((this.CreateIctRequestOperationCompleted == null)) {
                this.CreateIctRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateIctRequestOperationCompleted);
            }
            this.InvokeAsync("CreateIctRequest", new object[] {
                        empNo,
                        description,
                        category}, this.CreateIctRequestOperationCompleted, userState);
        }
        
        private void OnCreateIctRequestOperationCompleted(object arg) {
            if ((this.CreateIctRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateIctRequestCompleted(this, new CreateIctRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:ProvideIctfeedback", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="ProvideIctfeedback_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ProvideIctfeedback(string appNo, string description) {
            object[] results = this.Invoke("ProvideIctfeedback", new object[] {
                        appNo,
                        description});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ProvideIctfeedbackAsync(string appNo, string description) {
            this.ProvideIctfeedbackAsync(appNo, description, null);
        }
        
        /// <remarks/>
        public void ProvideIctfeedbackAsync(string appNo, string description, object userState) {
            if ((this.ProvideIctfeedbackOperationCompleted == null)) {
                this.ProvideIctfeedbackOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProvideIctfeedbackOperationCompleted);
            }
            this.InvokeAsync("ProvideIctfeedback", new object[] {
                        appNo,
                        description}, this.ProvideIctfeedbackOperationCompleted, userState);
        }
        
        private void OnProvideIctfeedbackOperationCompleted(object arg) {
            if ((this.ProvideIctfeedbackCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProvideIctfeedbackCompleted(this, new ProvideIctfeedbackCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:UpdateIctRequest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="UpdateIctRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string UpdateIctRequest(string appNo, string description) {
            object[] results = this.Invoke("UpdateIctRequest", new object[] {
                        appNo,
                        description});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateIctRequestAsync(string appNo, string description) {
            this.UpdateIctRequestAsync(appNo, description, null);
        }
        
        /// <remarks/>
        public void UpdateIctRequestAsync(string appNo, string description, object userState) {
            if ((this.UpdateIctRequestOperationCompleted == null)) {
                this.UpdateIctRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateIctRequestOperationCompleted);
            }
            this.InvokeAsync("UpdateIctRequest", new object[] {
                        appNo,
                        description}, this.UpdateIctRequestOperationCompleted, userState);
        }
        
        private void OnUpdateIctRequestOperationCompleted(object arg) {
            if ((this.UpdateIctRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateIctRequestCompleted(this, new UpdateIctRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AssignHelpdeskRequest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AssignHelpdeskRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AssignHelpdeskRequest(string jobNo, string assignee) {
            object[] results = this.Invoke("AssignHelpdeskRequest", new object[] {
                        jobNo,
                        assignee});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AssignHelpdeskRequestAsync(string jobNo, string assignee) {
            this.AssignHelpdeskRequestAsync(jobNo, assignee, null);
        }
        
        /// <remarks/>
        public void AssignHelpdeskRequestAsync(string jobNo, string assignee, object userState) {
            if ((this.AssignHelpdeskRequestOperationCompleted == null)) {
                this.AssignHelpdeskRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAssignHelpdeskRequestOperationCompleted);
            }
            this.InvokeAsync("AssignHelpdeskRequest", new object[] {
                        jobNo,
                        assignee}, this.AssignHelpdeskRequestOperationCompleted, userState);
        }
        
        private void OnAssignHelpdeskRequestOperationCompleted(object arg) {
            if ((this.AssignHelpdeskRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AssignHelpdeskRequestCompleted(this, new AssignHelpdeskRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:EscalatedHelpdeskRequest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="EscalatedHelpdeskRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string EscalatedHelpdeskRequest(string jobNo, string assignee, string description) {
            object[] results = this.Invoke("EscalatedHelpdeskRequest", new object[] {
                        jobNo,
                        assignee,
                        description});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EscalatedHelpdeskRequestAsync(string jobNo, string assignee, string description) {
            this.EscalatedHelpdeskRequestAsync(jobNo, assignee, description, null);
        }
        
        /// <remarks/>
        public void EscalatedHelpdeskRequestAsync(string jobNo, string assignee, string description, object userState) {
            if ((this.EscalatedHelpdeskRequestOperationCompleted == null)) {
                this.EscalatedHelpdeskRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEscalatedHelpdeskRequestOperationCompleted);
            }
            this.InvokeAsync("EscalatedHelpdeskRequest", new object[] {
                        jobNo,
                        assignee,
                        description}, this.EscalatedHelpdeskRequestOperationCompleted, userState);
        }
        
        private void OnEscalatedHelpdeskRequestOperationCompleted(object arg) {
            if ((this.EscalatedHelpdeskRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EscalatedHelpdeskRequestCompleted(this, new EscalatedHelpdeskRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:ResolveHelpdeskRequest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="ResolveHelpdeskRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ResolveHelpdeskRequest(string jobNo, string description) {
            object[] results = this.Invoke("ResolveHelpdeskRequest", new object[] {
                        jobNo,
                        description});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ResolveHelpdeskRequestAsync(string jobNo, string description) {
            this.ResolveHelpdeskRequestAsync(jobNo, description, null);
        }
        
        /// <remarks/>
        public void ResolveHelpdeskRequestAsync(string jobNo, string description, object userState) {
            if ((this.ResolveHelpdeskRequestOperationCompleted == null)) {
                this.ResolveHelpdeskRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnResolveHelpdeskRequestOperationCompleted);
            }
            this.InvokeAsync("ResolveHelpdeskRequest", new object[] {
                        jobNo,
                        description}, this.ResolveHelpdeskRequestOperationCompleted, userState);
        }
        
        private void OnResolveHelpdeskRequestOperationCompleted(object arg) {
            if ((this.ResolveHelpdeskRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ResolveHelpdeskRequestCompleted(this, new ResolveHelpdeskRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:ReopenHelpdeskRequest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="ReopenHelpdeskRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ReopenHelpdeskRequest(string jobNo, string description) {
            object[] results = this.Invoke("ReopenHelpdeskRequest", new object[] {
                        jobNo,
                        description});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ReopenHelpdeskRequestAsync(string jobNo, string description) {
            this.ReopenHelpdeskRequestAsync(jobNo, description, null);
        }
        
        /// <remarks/>
        public void ReopenHelpdeskRequestAsync(string jobNo, string description, object userState) {
            if ((this.ReopenHelpdeskRequestOperationCompleted == null)) {
                this.ReopenHelpdeskRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReopenHelpdeskRequestOperationCompleted);
            }
            this.InvokeAsync("ReopenHelpdeskRequest", new object[] {
                        jobNo,
                        description}, this.ReopenHelpdeskRequestOperationCompleted, userState);
        }
        
        private void OnReopenHelpdeskRequestOperationCompleted(object arg) {
            if ((this.ReopenHelpdeskRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReopenHelpdeskRequestCompleted(this, new ReopenHelpdeskRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FngetImprestLineNo", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FngetImprestLineNo_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FngetImprestLineNo(string surrenderNo) {
            object[] results = this.Invoke("FngetImprestLineNo", new object[] {
                        surrenderNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FngetImprestLineNoAsync(string surrenderNo) {
            this.FngetImprestLineNoAsync(surrenderNo, null);
        }
        
        /// <remarks/>
        public void FngetImprestLineNoAsync(string surrenderNo, object userState) {
            if ((this.FngetImprestLineNoOperationCompleted == null)) {
                this.FngetImprestLineNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFngetImprestLineNoOperationCompleted);
            }
            this.InvokeAsync("FngetImprestLineNo", new object[] {
                        surrenderNo}, this.FngetImprestLineNoOperationCompleted, userState);
        }
        
        private void OnFngetImprestLineNoOperationCompleted(object arg) {
            if ((this.FngetImprestLineNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FngetImprestLineNoCompleted(this, new FngetImprestLineNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnInsertOpenSurveyResponse", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnInsertOpenSurveyResponse_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertOpenSurveyResponse(string surveyno, string sectioncode, string questionid, string openresponse) {
            object[] results = this.Invoke("FnInsertOpenSurveyResponse", new object[] {
                        surveyno,
                        sectioncode,
                        questionid,
                        openresponse});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertOpenSurveyResponseAsync(string surveyno, string sectioncode, string questionid, string openresponse) {
            this.FnInsertOpenSurveyResponseAsync(surveyno, sectioncode, questionid, openresponse, null);
        }
        
        /// <remarks/>
        public void FnInsertOpenSurveyResponseAsync(string surveyno, string sectioncode, string questionid, string openresponse, object userState) {
            if ((this.FnInsertOpenSurveyResponseOperationCompleted == null)) {
                this.FnInsertOpenSurveyResponseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertOpenSurveyResponseOperationCompleted);
            }
            this.InvokeAsync("FnInsertOpenSurveyResponse", new object[] {
                        surveyno,
                        sectioncode,
                        questionid,
                        openresponse}, this.FnInsertOpenSurveyResponseOperationCompleted, userState);
        }
        
        private void OnFnInsertOpenSurveyResponseOperationCompleted(object arg) {
            if ((this.FnInsertOpenSurveyResponseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertOpenSurveyResponseCompleted(this, new FnInsertOpenSurveyResponseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnInsertMultipleSurveyResponse", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnInsertMultipleSurveyResponse_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertMultipleSurveyResponse(string surveyno, string sectioncode, string questionid, string multipleresponse) {
            object[] results = this.Invoke("FnInsertMultipleSurveyResponse", new object[] {
                        surveyno,
                        sectioncode,
                        questionid,
                        multipleresponse});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertMultipleSurveyResponseAsync(string surveyno, string sectioncode, string questionid, string multipleresponse) {
            this.FnInsertMultipleSurveyResponseAsync(surveyno, sectioncode, questionid, multipleresponse, null);
        }
        
        /// <remarks/>
        public void FnInsertMultipleSurveyResponseAsync(string surveyno, string sectioncode, string questionid, string multipleresponse, object userState) {
            if ((this.FnInsertMultipleSurveyResponseOperationCompleted == null)) {
                this.FnInsertMultipleSurveyResponseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertMultipleSurveyResponseOperationCompleted);
            }
            this.InvokeAsync("FnInsertMultipleSurveyResponse", new object[] {
                        surveyno,
                        sectioncode,
                        questionid,
                        multipleresponse}, this.FnInsertMultipleSurveyResponseOperationCompleted, userState);
        }
        
        private void OnFnInsertMultipleSurveyResponseOperationCompleted(object arg) {
            if ((this.FnInsertMultipleSurveyResponseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertMultipleSurveyResponseCompleted(this, new FnInsertMultipleSurveyResponseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnInsertSingleSurveyResponse", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnInsertSingleSurveyResponse_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertSingleSurveyResponse(string surveyno, string sectioncode, string questionid, string closedresponse) {
            object[] results = this.Invoke("FnInsertSingleSurveyResponse", new object[] {
                        surveyno,
                        sectioncode,
                        questionid,
                        closedresponse});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertSingleSurveyResponseAsync(string surveyno, string sectioncode, string questionid, string closedresponse) {
            this.FnInsertSingleSurveyResponseAsync(surveyno, sectioncode, questionid, closedresponse, null);
        }
        
        /// <remarks/>
        public void FnInsertSingleSurveyResponseAsync(string surveyno, string sectioncode, string questionid, string closedresponse, object userState) {
            if ((this.FnInsertSingleSurveyResponseOperationCompleted == null)) {
                this.FnInsertSingleSurveyResponseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertSingleSurveyResponseOperationCompleted);
            }
            this.InvokeAsync("FnInsertSingleSurveyResponse", new object[] {
                        surveyno,
                        sectioncode,
                        questionid,
                        closedresponse}, this.FnInsertSingleSurveyResponseOperationCompleted, userState);
        }
        
        private void OnFnInsertSingleSurveyResponseOperationCompleted(object arg) {
            if ((this.FnInsertSingleSurveyResponseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertSingleSurveyResponseCompleted(this, new FnInsertSingleSurveyResponseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnInsertBranchingSurveyResponse", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnInsertBranchingSurveyResponse_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertBranchingSurveyResponse(string surveyno, string sectioncode, string parentquestionid, string parentresponse, string branchedquestionid, string branchingresponse) {
            object[] results = this.Invoke("FnInsertBranchingSurveyResponse", new object[] {
                        surveyno,
                        sectioncode,
                        parentquestionid,
                        parentresponse,
                        branchedquestionid,
                        branchingresponse});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertBranchingSurveyResponseAsync(string surveyno, string sectioncode, string parentquestionid, string parentresponse, string branchedquestionid, string branchingresponse) {
            this.FnInsertBranchingSurveyResponseAsync(surveyno, sectioncode, parentquestionid, parentresponse, branchedquestionid, branchingresponse, null);
        }
        
        /// <remarks/>
        public void FnInsertBranchingSurveyResponseAsync(string surveyno, string sectioncode, string parentquestionid, string parentresponse, string branchedquestionid, string branchingresponse, object userState) {
            if ((this.FnInsertBranchingSurveyResponseOperationCompleted == null)) {
                this.FnInsertBranchingSurveyResponseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertBranchingSurveyResponseOperationCompleted);
            }
            this.InvokeAsync("FnInsertBranchingSurveyResponse", new object[] {
                        surveyno,
                        sectioncode,
                        parentquestionid,
                        parentresponse,
                        branchedquestionid,
                        branchingresponse}, this.FnInsertBranchingSurveyResponseOperationCompleted, userState);
        }
        
        private void OnFnInsertBranchingSurveyResponseOperationCompleted(object arg) {
            if ((this.FnInsertBranchingSurveyResponseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertBranchingSurveyResponseCompleted(this, new FnInsertBranchingSurveyResponseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnSubmitSurvey", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnSubmitSurvey_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitSurvey(string surveyNo) {
            object[] results = this.Invoke("FnSubmitSurvey", new object[] {
                        surveyNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitSurveyAsync(string surveyNo) {
            this.FnSubmitSurveyAsync(surveyNo, null);
        }
        
        /// <remarks/>
        public void FnSubmitSurveyAsync(string surveyNo, object userState) {
            if ((this.FnSubmitSurveyOperationCompleted == null)) {
                this.FnSubmitSurveyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitSurveyOperationCompleted);
            }
            this.InvokeAsync("FnSubmitSurvey", new object[] {
                        surveyNo}, this.FnSubmitSurveyOperationCompleted, userState);
        }
        
        private void OnFnSubmitSurveyOperationCompleted(object arg) {
            if ((this.FnSubmitSurveyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitSurveyCompleted(this, new FnSubmitSurveyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddImprestSharepointLinks", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddImprestSharepointLinks_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddImprestSharepointLinks(string imprestno, string filename, string sharepointlink) {
            object[] results = this.Invoke("AddImprestSharepointLinks", new object[] {
                        imprestno,
                        filename,
                        sharepointlink});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddImprestSharepointLinksAsync(string imprestno, string filename, string sharepointlink) {
            this.AddImprestSharepointLinksAsync(imprestno, filename, sharepointlink, null);
        }
        
        /// <remarks/>
        public void AddImprestSharepointLinksAsync(string imprestno, string filename, string sharepointlink, object userState) {
            if ((this.AddImprestSharepointLinksOperationCompleted == null)) {
                this.AddImprestSharepointLinksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddImprestSharepointLinksOperationCompleted);
            }
            this.InvokeAsync("AddImprestSharepointLinks", new object[] {
                        imprestno,
                        filename,
                        sharepointlink}, this.AddImprestSharepointLinksOperationCompleted, userState);
        }
        
        private void OnAddImprestSharepointLinksOperationCompleted(object arg) {
            if ((this.AddImprestSharepointLinksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddImprestSharepointLinksCompleted(this, new AddImprestSharepointLinksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddLeaveSharepointLinks", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddLeaveSharepointLinks_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddLeaveSharepointLinks(string leaveno, string filename, string sharepointlink) {
            object[] results = this.Invoke("AddLeaveSharepointLinks", new object[] {
                        leaveno,
                        filename,
                        sharepointlink});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddLeaveSharepointLinksAsync(string leaveno, string filename, string sharepointlink) {
            this.AddLeaveSharepointLinksAsync(leaveno, filename, sharepointlink, null);
        }
        
        /// <remarks/>
        public void AddLeaveSharepointLinksAsync(string leaveno, string filename, string sharepointlink, object userState) {
            if ((this.AddLeaveSharepointLinksOperationCompleted == null)) {
                this.AddLeaveSharepointLinksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddLeaveSharepointLinksOperationCompleted);
            }
            this.InvokeAsync("AddLeaveSharepointLinks", new object[] {
                        leaveno,
                        filename,
                        sharepointlink}, this.AddLeaveSharepointLinksOperationCompleted, userState);
        }
        
        private void OnAddLeaveSharepointLinksOperationCompleted(object arg) {
            if ((this.AddLeaveSharepointLinksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddLeaveSharepointLinksCompleted(this, new AddLeaveSharepointLinksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddImprestSurrenderSharepointLin" +
            "ks", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddImprestSurrenderSharepointLinks_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddImprestSurrenderSharepointLinks(string staffclaimnumber, string filename, string sharepointlink) {
            object[] results = this.Invoke("AddImprestSurrenderSharepointLinks", new object[] {
                        staffclaimnumber,
                        filename,
                        sharepointlink});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddImprestSurrenderSharepointLinksAsync(string staffclaimnumber, string filename, string sharepointlink) {
            this.AddImprestSurrenderSharepointLinksAsync(staffclaimnumber, filename, sharepointlink, null);
        }
        
        /// <remarks/>
        public void AddImprestSurrenderSharepointLinksAsync(string staffclaimnumber, string filename, string sharepointlink, object userState) {
            if ((this.AddImprestSurrenderSharepointLinksOperationCompleted == null)) {
                this.AddImprestSurrenderSharepointLinksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddImprestSurrenderSharepointLinksOperationCompleted);
            }
            this.InvokeAsync("AddImprestSurrenderSharepointLinks", new object[] {
                        staffclaimnumber,
                        filename,
                        sharepointlink}, this.AddImprestSurrenderSharepointLinksOperationCompleted, userState);
        }
        
        private void OnAddImprestSurrenderSharepointLinksOperationCompleted(object arg) {
            if ((this.AddImprestSurrenderSharepointLinksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddImprestSurrenderSharepointLinksCompleted(this, new AddImprestSurrenderSharepointLinksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddStaffClaimSharepointLinks", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddStaffClaimSharepointLinks_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddStaffClaimSharepointLinks(string staffclaimnumber, string filename, string sharepointlink) {
            object[] results = this.Invoke("AddStaffClaimSharepointLinks", new object[] {
                        staffclaimnumber,
                        filename,
                        sharepointlink});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddStaffClaimSharepointLinksAsync(string staffclaimnumber, string filename, string sharepointlink) {
            this.AddStaffClaimSharepointLinksAsync(staffclaimnumber, filename, sharepointlink, null);
        }
        
        /// <remarks/>
        public void AddStaffClaimSharepointLinksAsync(string staffclaimnumber, string filename, string sharepointlink, object userState) {
            if ((this.AddStaffClaimSharepointLinksOperationCompleted == null)) {
                this.AddStaffClaimSharepointLinksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddStaffClaimSharepointLinksOperationCompleted);
            }
            this.InvokeAsync("AddStaffClaimSharepointLinks", new object[] {
                        staffclaimnumber,
                        filename,
                        sharepointlink}, this.AddStaffClaimSharepointLinksOperationCompleted, userState);
        }
        
        private void OnAddStaffClaimSharepointLinksOperationCompleted(object arg) {
            if ((this.AddStaffClaimSharepointLinksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddStaffClaimSharepointLinksCompleted(this, new AddStaffClaimSharepointLinksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddStoreRequsitionSharepointLink" +
            "s", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddStoreRequsitionSharepointLinks_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddStoreRequsitionSharepointLinks(string storerequsitionnumber, string filename, string sharepointlink) {
            object[] results = this.Invoke("AddStoreRequsitionSharepointLinks", new object[] {
                        storerequsitionnumber,
                        filename,
                        sharepointlink});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddStoreRequsitionSharepointLinksAsync(string storerequsitionnumber, string filename, string sharepointlink) {
            this.AddStoreRequsitionSharepointLinksAsync(storerequsitionnumber, filename, sharepointlink, null);
        }
        
        /// <remarks/>
        public void AddStoreRequsitionSharepointLinksAsync(string storerequsitionnumber, string filename, string sharepointlink, object userState) {
            if ((this.AddStoreRequsitionSharepointLinksOperationCompleted == null)) {
                this.AddStoreRequsitionSharepointLinksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddStoreRequsitionSharepointLinksOperationCompleted);
            }
            this.InvokeAsync("AddStoreRequsitionSharepointLinks", new object[] {
                        storerequsitionnumber,
                        filename,
                        sharepointlink}, this.AddStoreRequsitionSharepointLinksOperationCompleted, userState);
        }
        
        private void OnAddStoreRequsitionSharepointLinksOperationCompleted(object arg) {
            if ((this.AddStoreRequsitionSharepointLinksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddStoreRequsitionSharepointLinksCompleted(this, new AddStoreRequsitionSharepointLinksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddPurchaseRequisitionSharepoint" +
            "Links", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddPurchaseRequisitionSharepointLinks_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddPurchaseRequisitionSharepointLinks(string requisitionNumber, string filename, string sharepointlink) {
            object[] results = this.Invoke("AddPurchaseRequisitionSharepointLinks", new object[] {
                        requisitionNumber,
                        filename,
                        sharepointlink});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddPurchaseRequisitionSharepointLinksAsync(string requisitionNumber, string filename, string sharepointlink) {
            this.AddPurchaseRequisitionSharepointLinksAsync(requisitionNumber, filename, sharepointlink, null);
        }
        
        /// <remarks/>
        public void AddPurchaseRequisitionSharepointLinksAsync(string requisitionNumber, string filename, string sharepointlink, object userState) {
            if ((this.AddPurchaseRequisitionSharepointLinksOperationCompleted == null)) {
                this.AddPurchaseRequisitionSharepointLinksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddPurchaseRequisitionSharepointLinksOperationCompleted);
            }
            this.InvokeAsync("AddPurchaseRequisitionSharepointLinks", new object[] {
                        requisitionNumber,
                        filename,
                        sharepointlink}, this.AddPurchaseRequisitionSharepointLinksOperationCompleted, userState);
        }
        
        private void OnAddPurchaseRequisitionSharepointLinksOperationCompleted(object arg) {
            if ((this.AddPurchaseRequisitionSharepointLinksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddPurchaseRequisitionSharepointLinksCompleted(this, new AddPurchaseRequisitionSharepointLinksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddFleetRequisitionSharepointLin" +
            "ks", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddFleetRequisitionSharepointLinks_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddFleetRequisitionSharepointLinks(string requisitionNumber, string filename, string sharepointlink) {
            object[] results = this.Invoke("AddFleetRequisitionSharepointLinks", new object[] {
                        requisitionNumber,
                        filename,
                        sharepointlink});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddFleetRequisitionSharepointLinksAsync(string requisitionNumber, string filename, string sharepointlink) {
            this.AddFleetRequisitionSharepointLinksAsync(requisitionNumber, filename, sharepointlink, null);
        }
        
        /// <remarks/>
        public void AddFleetRequisitionSharepointLinksAsync(string requisitionNumber, string filename, string sharepointlink, object userState) {
            if ((this.AddFleetRequisitionSharepointLinksOperationCompleted == null)) {
                this.AddFleetRequisitionSharepointLinksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddFleetRequisitionSharepointLinksOperationCompleted);
            }
            this.InvokeAsync("AddFleetRequisitionSharepointLinks", new object[] {
                        requisitionNumber,
                        filename,
                        sharepointlink}, this.AddFleetRequisitionSharepointLinksOperationCompleted, userState);
        }
        
        private void OnAddFleetRequisitionSharepointLinksOperationCompleted(object arg) {
            if ((this.AddFleetRequisitionSharepointLinksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddFleetRequisitionSharepointLinksCompleted(this, new AddFleetRequisitionSharepointLinksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:Addemployeepassportphoto", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="Addemployeepassportphoto_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string Addemployeepassportphoto(string employeeno, string photo) {
            object[] results = this.Invoke("Addemployeepassportphoto", new object[] {
                        employeeno,
                        photo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddemployeepassportphotoAsync(string employeeno, string photo) {
            this.AddemployeepassportphotoAsync(employeeno, photo, null);
        }
        
        /// <remarks/>
        public void AddemployeepassportphotoAsync(string employeeno, string photo, object userState) {
            if ((this.AddemployeepassportphotoOperationCompleted == null)) {
                this.AddemployeepassportphotoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddemployeepassportphotoOperationCompleted);
            }
            this.InvokeAsync("Addemployeepassportphoto", new object[] {
                        employeeno,
                        photo}, this.AddemployeepassportphotoOperationCompleted, userState);
        }
        
        private void OnAddemployeepassportphotoOperationCompleted(object arg) {
            if ((this.AddemployeepassportphotoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddemployeepassportphotoCompleted(this, new AddemployeepassportphotoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnLockStaffPerformanceContract", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnLockStaffPerformanceContract_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnLockStaffPerformanceContract(string pcnumber) {
            object[] results = this.Invoke("FnLockStaffPerformanceContract", new object[] {
                        pcnumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnLockStaffPerformanceContractAsync(string pcnumber) {
            this.FnLockStaffPerformanceContractAsync(pcnumber, null);
        }
        
        /// <remarks/>
        public void FnLockStaffPerformanceContractAsync(string pcnumber, object userState) {
            if ((this.FnLockStaffPerformanceContractOperationCompleted == null)) {
                this.FnLockStaffPerformanceContractOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnLockStaffPerformanceContractOperationCompleted);
            }
            this.InvokeAsync("FnLockStaffPerformanceContract", new object[] {
                        pcnumber}, this.FnLockStaffPerformanceContractOperationCompleted, userState);
        }
        
        private void OnFnLockStaffPerformanceContractOperationCompleted(object arg) {
            if ((this.FnLockStaffPerformanceContractCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnLockStaffPerformanceContractCompleted(this, new FnLockStaffPerformanceContractCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnSignStaffPerformanceContract", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnSignStaffPerformanceContract_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSignStaffPerformanceContract(string pcnumber) {
            object[] results = this.Invoke("FnSignStaffPerformanceContract", new object[] {
                        pcnumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSignStaffPerformanceContractAsync(string pcnumber) {
            this.FnSignStaffPerformanceContractAsync(pcnumber, null);
        }
        
        /// <remarks/>
        public void FnSignStaffPerformanceContractAsync(string pcnumber, object userState) {
            if ((this.FnSignStaffPerformanceContractOperationCompleted == null)) {
                this.FnSignStaffPerformanceContractOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSignStaffPerformanceContractOperationCompleted);
            }
            this.InvokeAsync("FnSignStaffPerformanceContract", new object[] {
                        pcnumber}, this.FnSignStaffPerformanceContractOperationCompleted, userState);
        }
        
        private void OnFnSignStaffPerformanceContractOperationCompleted(object arg) {
            if ((this.FnSignStaffPerformanceContractCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSignStaffPerformanceContractCompleted(this, new FnSignStaffPerformanceContractCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:CreateNewTrainingFeedback", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="CreateNewTrainingFeedback_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateNewTrainingFeedback(string employeeNo, string feedbackNo, string applicationCode) {
            object[] results = this.Invoke("CreateNewTrainingFeedback", new object[] {
                        employeeNo,
                        feedbackNo,
                        applicationCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateNewTrainingFeedbackAsync(string employeeNo, string feedbackNo, string applicationCode) {
            this.CreateNewTrainingFeedbackAsync(employeeNo, feedbackNo, applicationCode, null);
        }
        
        /// <remarks/>
        public void CreateNewTrainingFeedbackAsync(string employeeNo, string feedbackNo, string applicationCode, object userState) {
            if ((this.CreateNewTrainingFeedbackOperationCompleted == null)) {
                this.CreateNewTrainingFeedbackOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateNewTrainingFeedbackOperationCompleted);
            }
            this.InvokeAsync("CreateNewTrainingFeedback", new object[] {
                        employeeNo,
                        feedbackNo,
                        applicationCode}, this.CreateNewTrainingFeedbackOperationCompleted, userState);
        }
        
        private void OnCreateNewTrainingFeedbackOperationCompleted(object arg) {
            if ((this.CreateNewTrainingFeedbackCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateNewTrainingFeedbackCompleted(this, new CreateNewTrainingFeedbackCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:CreateTrainingFeedbackLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="CreateTrainingFeedbackLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateTrainingFeedbackLines(string feedbackNo, int lineno, string ratingcode, string comments, int categorycode, string categorydesc, string trainingcategory) {
            object[] results = this.Invoke("CreateTrainingFeedbackLines", new object[] {
                        feedbackNo,
                        lineno,
                        ratingcode,
                        comments,
                        categorycode,
                        categorydesc,
                        trainingcategory});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateTrainingFeedbackLinesAsync(string feedbackNo, int lineno, string ratingcode, string comments, int categorycode, string categorydesc, string trainingcategory) {
            this.CreateTrainingFeedbackLinesAsync(feedbackNo, lineno, ratingcode, comments, categorycode, categorydesc, trainingcategory, null);
        }
        
        /// <remarks/>
        public void CreateTrainingFeedbackLinesAsync(string feedbackNo, int lineno, string ratingcode, string comments, int categorycode, string categorydesc, string trainingcategory, object userState) {
            if ((this.CreateTrainingFeedbackLinesOperationCompleted == null)) {
                this.CreateTrainingFeedbackLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateTrainingFeedbackLinesOperationCompleted);
            }
            this.InvokeAsync("CreateTrainingFeedbackLines", new object[] {
                        feedbackNo,
                        lineno,
                        ratingcode,
                        comments,
                        categorycode,
                        categorydesc,
                        trainingcategory}, this.CreateTrainingFeedbackLinesOperationCompleted, userState);
        }
        
        private void OnCreateTrainingFeedbackLinesOperationCompleted(object arg) {
            if ((this.CreateTrainingFeedbackLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateTrainingFeedbackLinesCompleted(this, new CreateTrainingFeedbackLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:CreateSubmitTrainingFeedback", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="CreateSubmitTrainingFeedback_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateSubmitTrainingFeedback(string feedbackNo) {
            object[] results = this.Invoke("CreateSubmitTrainingFeedback", new object[] {
                        feedbackNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateSubmitTrainingFeedbackAsync(string feedbackNo) {
            this.CreateSubmitTrainingFeedbackAsync(feedbackNo, null);
        }
        
        /// <remarks/>
        public void CreateSubmitTrainingFeedbackAsync(string feedbackNo, object userState) {
            if ((this.CreateSubmitTrainingFeedbackOperationCompleted == null)) {
                this.CreateSubmitTrainingFeedbackOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateSubmitTrainingFeedbackOperationCompleted);
            }
            this.InvokeAsync("CreateSubmitTrainingFeedback", new object[] {
                        feedbackNo}, this.CreateSubmitTrainingFeedbackOperationCompleted, userState);
        }
        
        private void OnCreateSubmitTrainingFeedbackOperationCompleted(object arg) {
            if ((this.CreateSubmitTrainingFeedbackCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateSubmitTrainingFeedbackCompleted(this, new CreateSubmitTrainingFeedbackCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:CreateNewTrainingEvaluation", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="CreateNewTrainingEvaluation_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateNewTrainingEvaluation(string employeeNo, string feedbackNo, string applicationCode) {
            object[] results = this.Invoke("CreateNewTrainingEvaluation", new object[] {
                        employeeNo,
                        feedbackNo,
                        applicationCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateNewTrainingEvaluationAsync(string employeeNo, string feedbackNo, string applicationCode) {
            this.CreateNewTrainingEvaluationAsync(employeeNo, feedbackNo, applicationCode, null);
        }
        
        /// <remarks/>
        public void CreateNewTrainingEvaluationAsync(string employeeNo, string feedbackNo, string applicationCode, object userState) {
            if ((this.CreateNewTrainingEvaluationOperationCompleted == null)) {
                this.CreateNewTrainingEvaluationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateNewTrainingEvaluationOperationCompleted);
            }
            this.InvokeAsync("CreateNewTrainingEvaluation", new object[] {
                        employeeNo,
                        feedbackNo,
                        applicationCode}, this.CreateNewTrainingEvaluationOperationCompleted, userState);
        }
        
        private void OnCreateNewTrainingEvaluationOperationCompleted(object arg) {
            if ((this.CreateNewTrainingEvaluationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateNewTrainingEvaluationCompleted(this, new CreateNewTrainingEvaluationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnInsertEvaluationLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnInsertEvaluationLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertEvaluationLines(string docNo, int lineNo, string rating, string comment) {
            object[] results = this.Invoke("FnInsertEvaluationLines", new object[] {
                        docNo,
                        lineNo,
                        rating,
                        comment});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertEvaluationLinesAsync(string docNo, int lineNo, string rating, string comment) {
            this.FnInsertEvaluationLinesAsync(docNo, lineNo, rating, comment, null);
        }
        
        /// <remarks/>
        public void FnInsertEvaluationLinesAsync(string docNo, int lineNo, string rating, string comment, object userState) {
            if ((this.FnInsertEvaluationLinesOperationCompleted == null)) {
                this.FnInsertEvaluationLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertEvaluationLinesOperationCompleted);
            }
            this.InvokeAsync("FnInsertEvaluationLines", new object[] {
                        docNo,
                        lineNo,
                        rating,
                        comment}, this.FnInsertEvaluationLinesOperationCompleted, userState);
        }
        
        private void OnFnInsertEvaluationLinesOperationCompleted(object arg) {
            if ((this.FnInsertEvaluationLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertEvaluationLinesCompleted(this, new FnInsertEvaluationLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddTrainingParticipants", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddTrainingParticipants_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddTrainingParticipants(string type, string participantEmpno, string destination, decimal noOfDays, string reqNo) {
            object[] results = this.Invoke("AddTrainingParticipants", new object[] {
                        type,
                        participantEmpno,
                        destination,
                        noOfDays,
                        reqNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddTrainingParticipantsAsync(string type, string participantEmpno, string destination, decimal noOfDays, string reqNo) {
            this.AddTrainingParticipantsAsync(type, participantEmpno, destination, noOfDays, reqNo, null);
        }
        
        /// <remarks/>
        public void AddTrainingParticipantsAsync(string type, string participantEmpno, string destination, decimal noOfDays, string reqNo, object userState) {
            if ((this.AddTrainingParticipantsOperationCompleted == null)) {
                this.AddTrainingParticipantsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddTrainingParticipantsOperationCompleted);
            }
            this.InvokeAsync("AddTrainingParticipants", new object[] {
                        type,
                        participantEmpno,
                        destination,
                        noOfDays,
                        reqNo}, this.AddTrainingParticipantsOperationCompleted, userState);
        }
        
        private void OnAddTrainingParticipantsOperationCompleted(object arg) {
            if ((this.AddTrainingParticipantsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddTrainingParticipantsCompleted(this, new AddTrainingParticipantsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:EditTrainingParticipants", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="EditTrainingParticipants_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string EditTrainingParticipants(int lineno, string type, string teammember, int noOfDays, string docNo) {
            object[] results = this.Invoke("EditTrainingParticipants", new object[] {
                        lineno,
                        type,
                        teammember,
                        noOfDays,
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditTrainingParticipantsAsync(int lineno, string type, string teammember, int noOfDays, string docNo) {
            this.EditTrainingParticipantsAsync(lineno, type, teammember, noOfDays, docNo, null);
        }
        
        /// <remarks/>
        public void EditTrainingParticipantsAsync(int lineno, string type, string teammember, int noOfDays, string docNo, object userState) {
            if ((this.EditTrainingParticipantsOperationCompleted == null)) {
                this.EditTrainingParticipantsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditTrainingParticipantsOperationCompleted);
            }
            this.InvokeAsync("EditTrainingParticipants", new object[] {
                        lineno,
                        type,
                        teammember,
                        noOfDays,
                        docNo}, this.EditTrainingParticipantsOperationCompleted, userState);
        }
        
        private void OnEditTrainingParticipantsOperationCompleted(object arg) {
            if ((this.EditTrainingParticipantsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditTrainingParticipantsCompleted(this, new EditTrainingParticipantsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:DeleteTrainingParticipants", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="DeleteTrainingParticipants_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteTrainingParticipants(int id, string reqNo) {
            object[] results = this.Invoke("DeleteTrainingParticipants", new object[] {
                        id,
                        reqNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteTrainingParticipantsAsync(int id, string reqNo) {
            this.DeleteTrainingParticipantsAsync(id, reqNo, null);
        }
        
        /// <remarks/>
        public void DeleteTrainingParticipantsAsync(int id, string reqNo, object userState) {
            if ((this.DeleteTrainingParticipantsOperationCompleted == null)) {
                this.DeleteTrainingParticipantsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteTrainingParticipantsOperationCompleted);
            }
            this.InvokeAsync("DeleteTrainingParticipants", new object[] {
                        id,
                        reqNo}, this.DeleteTrainingParticipantsOperationCompleted, userState);
        }
        
        private void OnDeleteTrainingParticipantsOperationCompleted(object arg) {
            if ((this.DeleteTrainingParticipantsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteTrainingParticipantsCompleted(this, new DeleteTrainingParticipantsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddTrainingCost", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddTrainingCost_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddTrainingCost(string docNo, int costcategory, decimal unitcost, int quantity, string description, string costitem, string itemcategory, string item, string uom, string fundsource) {
            object[] results = this.Invoke("AddTrainingCost", new object[] {
                        docNo,
                        costcategory,
                        unitcost,
                        quantity,
                        description,
                        costitem,
                        itemcategory,
                        item,
                        uom,
                        fundsource});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddTrainingCostAsync(string docNo, int costcategory, decimal unitcost, int quantity, string description, string costitem, string itemcategory, string item, string uom, string fundsource) {
            this.AddTrainingCostAsync(docNo, costcategory, unitcost, quantity, description, costitem, itemcategory, item, uom, fundsource, null);
        }
        
        /// <remarks/>
        public void AddTrainingCostAsync(string docNo, int costcategory, decimal unitcost, int quantity, string description, string costitem, string itemcategory, string item, string uom, string fundsource, object userState) {
            if ((this.AddTrainingCostOperationCompleted == null)) {
                this.AddTrainingCostOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddTrainingCostOperationCompleted);
            }
            this.InvokeAsync("AddTrainingCost", new object[] {
                        docNo,
                        costcategory,
                        unitcost,
                        quantity,
                        description,
                        costitem,
                        itemcategory,
                        item,
                        uom,
                        fundsource}, this.AddTrainingCostOperationCompleted, userState);
        }
        
        private void OnAddTrainingCostOperationCompleted(object arg) {
            if ((this.AddTrainingCostCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddTrainingCostCompleted(this, new AddTrainingCostCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:RemoveTrainingCost", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="RemoveTrainingCost_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string RemoveTrainingCost(string docNo, int lineno) {
            object[] results = this.Invoke("RemoveTrainingCost", new object[] {
                        docNo,
                        lineno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveTrainingCostAsync(string docNo, int lineno) {
            this.RemoveTrainingCostAsync(docNo, lineno, null);
        }
        
        /// <remarks/>
        public void RemoveTrainingCostAsync(string docNo, int lineno, object userState) {
            if ((this.RemoveTrainingCostOperationCompleted == null)) {
                this.RemoveTrainingCostOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveTrainingCostOperationCompleted);
            }
            this.InvokeAsync("RemoveTrainingCost", new object[] {
                        docNo,
                        lineno}, this.RemoveTrainingCostOperationCompleted, userState);
        }
        
        private void OnRemoveTrainingCostOperationCompleted(object arg) {
            if ((this.RemoveTrainingCostCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveTrainingCostCompleted(this, new RemoveTrainingCostCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnSubmitStandardAppraisal", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnSubmitStandardAppraisal_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitStandardAppraisal(string docNo) {
            object[] results = this.Invoke("FnSubmitStandardAppraisal", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitStandardAppraisalAsync(string docNo) {
            this.FnSubmitStandardAppraisalAsync(docNo, null);
        }
        
        /// <remarks/>
        public void FnSubmitStandardAppraisalAsync(string docNo, object userState) {
            if ((this.FnSubmitStandardAppraisalOperationCompleted == null)) {
                this.FnSubmitStandardAppraisalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitStandardAppraisalOperationCompleted);
            }
            this.InvokeAsync("FnSubmitStandardAppraisal", new object[] {
                        docNo}, this.FnSubmitStandardAppraisalOperationCompleted, userState);
        }
        
        private void OnFnSubmitStandardAppraisalOperationCompleted(object arg) {
            if ((this.FnSubmitStandardAppraisalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitStandardAppraisalCompleted(this, new FnSubmitStandardAppraisalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnCancelSubmitofStandardAppraisa" +
            "l", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnCancelSubmitofStandardAppraisal_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnCancelSubmitofStandardAppraisal(string docNo) {
            object[] results = this.Invoke("FnCancelSubmitofStandardAppraisal", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnCancelSubmitofStandardAppraisalAsync(string docNo) {
            this.FnCancelSubmitofStandardAppraisalAsync(docNo, null);
        }
        
        /// <remarks/>
        public void FnCancelSubmitofStandardAppraisalAsync(string docNo, object userState) {
            if ((this.FnCancelSubmitofStandardAppraisalOperationCompleted == null)) {
                this.FnCancelSubmitofStandardAppraisalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnCancelSubmitofStandardAppraisalOperationCompleted);
            }
            this.InvokeAsync("FnCancelSubmitofStandardAppraisal", new object[] {
                        docNo}, this.FnCancelSubmitofStandardAppraisalOperationCompleted, userState);
        }
        
        private void OnFnCancelSubmitofStandardAppraisalOperationCompleted(object arg) {
            if ((this.FnCancelSubmitofStandardAppraisalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnCancelSubmitofStandardAppraisalCompleted(this, new FnCancelSubmitofStandardAppraisalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnSubmitStandardAppraisalObj", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnSubmitStandardAppraisalObj_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitStandardAppraisalObj(string docNo, int lineno, decimal appraiserQty, string comments) {
            object[] results = this.Invoke("FnSubmitStandardAppraisalObj", new object[] {
                        docNo,
                        lineno,
                        appraiserQty,
                        comments});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitStandardAppraisalObjAsync(string docNo, int lineno, decimal appraiserQty, string comments) {
            this.FnSubmitStandardAppraisalObjAsync(docNo, lineno, appraiserQty, comments, null);
        }
        
        /// <remarks/>
        public void FnSubmitStandardAppraisalObjAsync(string docNo, int lineno, decimal appraiserQty, string comments, object userState) {
            if ((this.FnSubmitStandardAppraisalObjOperationCompleted == null)) {
                this.FnSubmitStandardAppraisalObjOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitStandardAppraisalObjOperationCompleted);
            }
            this.InvokeAsync("FnSubmitStandardAppraisalObj", new object[] {
                        docNo,
                        lineno,
                        appraiserQty,
                        comments}, this.FnSubmitStandardAppraisalObjOperationCompleted, userState);
        }
        
        private void OnFnSubmitStandardAppraisalObjOperationCompleted(object arg) {
            if ((this.FnSubmitStandardAppraisalObjCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitStandardAppraisalObjCompleted(this, new FnSubmitStandardAppraisalObjCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnSubmitStandardAppraisalPE", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnSubmitStandardAppraisalPE_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitStandardAppraisalPE(string docNo, int lineno, decimal appraiserQty, string comments) {
            object[] results = this.Invoke("FnSubmitStandardAppraisalPE", new object[] {
                        docNo,
                        lineno,
                        appraiserQty,
                        comments});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitStandardAppraisalPEAsync(string docNo, int lineno, decimal appraiserQty, string comments) {
            this.FnSubmitStandardAppraisalPEAsync(docNo, lineno, appraiserQty, comments, null);
        }
        
        /// <remarks/>
        public void FnSubmitStandardAppraisalPEAsync(string docNo, int lineno, decimal appraiserQty, string comments, object userState) {
            if ((this.FnSubmitStandardAppraisalPEOperationCompleted == null)) {
                this.FnSubmitStandardAppraisalPEOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitStandardAppraisalPEOperationCompleted);
            }
            this.InvokeAsync("FnSubmitStandardAppraisalPE", new object[] {
                        docNo,
                        lineno,
                        appraiserQty,
                        comments}, this.FnSubmitStandardAppraisalPEOperationCompleted, userState);
        }
        
        private void OnFnSubmitStandardAppraisalPEOperationCompleted(object arg) {
            if ((this.FnSubmitStandardAppraisalPECompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitStandardAppraisalPECompleted(this, new FnSubmitStandardAppraisalPECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnInsertStandardAppraisalPIP", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnInsertStandardAppraisalPIP_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertStandardAppraisalPIP(string docNo, string pipcategory, string desc) {
            object[] results = this.Invoke("FnInsertStandardAppraisalPIP", new object[] {
                        docNo,
                        pipcategory,
                        desc});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertStandardAppraisalPIPAsync(string docNo, string pipcategory, string desc) {
            this.FnInsertStandardAppraisalPIPAsync(docNo, pipcategory, desc, null);
        }
        
        /// <remarks/>
        public void FnInsertStandardAppraisalPIPAsync(string docNo, string pipcategory, string desc, object userState) {
            if ((this.FnInsertStandardAppraisalPIPOperationCompleted == null)) {
                this.FnInsertStandardAppraisalPIPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertStandardAppraisalPIPOperationCompleted);
            }
            this.InvokeAsync("FnInsertStandardAppraisalPIP", new object[] {
                        docNo,
                        pipcategory,
                        desc}, this.FnInsertStandardAppraisalPIPOperationCompleted, userState);
        }
        
        private void OnFnInsertStandardAppraisalPIPOperationCompleted(object arg) {
            if ((this.FnInsertStandardAppraisalPIPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertStandardAppraisalPIPCompleted(this, new FnInsertStandardAppraisalPIPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnEditStandardAppraisalPIP", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnEditStandardAppraisalPIP_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnEditStandardAppraisalPIP(string docNo, int lineno, string pipcategory, string desc) {
            object[] results = this.Invoke("FnEditStandardAppraisalPIP", new object[] {
                        docNo,
                        lineno,
                        pipcategory,
                        desc});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnEditStandardAppraisalPIPAsync(string docNo, int lineno, string pipcategory, string desc) {
            this.FnEditStandardAppraisalPIPAsync(docNo, lineno, pipcategory, desc, null);
        }
        
        /// <remarks/>
        public void FnEditStandardAppraisalPIPAsync(string docNo, int lineno, string pipcategory, string desc, object userState) {
            if ((this.FnEditStandardAppraisalPIPOperationCompleted == null)) {
                this.FnEditStandardAppraisalPIPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnEditStandardAppraisalPIPOperationCompleted);
            }
            this.InvokeAsync("FnEditStandardAppraisalPIP", new object[] {
                        docNo,
                        lineno,
                        pipcategory,
                        desc}, this.FnEditStandardAppraisalPIPOperationCompleted, userState);
        }
        
        private void OnFnEditStandardAppraisalPIPOperationCompleted(object arg) {
            if ((this.FnEditStandardAppraisalPIPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnEditStandardAppraisalPIPCompleted(this, new FnEditStandardAppraisalPIPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnRemoveStandardAppraisalPIP", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnRemoveStandardAppraisalPIP_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnRemoveStandardAppraisalPIP(string docNo, int lineno) {
            object[] results = this.Invoke("FnRemoveStandardAppraisalPIP", new object[] {
                        docNo,
                        lineno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnRemoveStandardAppraisalPIPAsync(string docNo, int lineno) {
            this.FnRemoveStandardAppraisalPIPAsync(docNo, lineno, null);
        }
        
        /// <remarks/>
        public void FnRemoveStandardAppraisalPIPAsync(string docNo, int lineno, object userState) {
            if ((this.FnRemoveStandardAppraisalPIPOperationCompleted == null)) {
                this.FnRemoveStandardAppraisalPIPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnRemoveStandardAppraisalPIPOperationCompleted);
            }
            this.InvokeAsync("FnRemoveStandardAppraisalPIP", new object[] {
                        docNo,
                        lineno}, this.FnRemoveStandardAppraisalPIPOperationCompleted, userState);
        }
        
        private void OnFnRemoveStandardAppraisalPIPOperationCompleted(object arg) {
            if ((this.FnRemoveStandardAppraisalPIPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnRemoveStandardAppraisalPIPCompleted(this, new FnRemoveStandardAppraisalPIPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnInsertStandardAppraisalTrainig" +
            "Needs", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnInsertStandardAppraisalTrainigNeeds_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertStandardAppraisalTrainigNeeds(string docNo, string category, string desc) {
            object[] results = this.Invoke("FnInsertStandardAppraisalTrainigNeeds", new object[] {
                        docNo,
                        category,
                        desc});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertStandardAppraisalTrainigNeedsAsync(string docNo, string category, string desc) {
            this.FnInsertStandardAppraisalTrainigNeedsAsync(docNo, category, desc, null);
        }
        
        /// <remarks/>
        public void FnInsertStandardAppraisalTrainigNeedsAsync(string docNo, string category, string desc, object userState) {
            if ((this.FnInsertStandardAppraisalTrainigNeedsOperationCompleted == null)) {
                this.FnInsertStandardAppraisalTrainigNeedsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertStandardAppraisalTrainigNeedsOperationCompleted);
            }
            this.InvokeAsync("FnInsertStandardAppraisalTrainigNeeds", new object[] {
                        docNo,
                        category,
                        desc}, this.FnInsertStandardAppraisalTrainigNeedsOperationCompleted, userState);
        }
        
        private void OnFnInsertStandardAppraisalTrainigNeedsOperationCompleted(object arg) {
            if ((this.FnInsertStandardAppraisalTrainigNeedsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertStandardAppraisalTrainigNeedsCompleted(this, new FnInsertStandardAppraisalTrainigNeedsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnRemoveStandardAppraisalTrainig" +
            "Needs", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnRemoveStandardAppraisalTrainigNeeds_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnRemoveStandardAppraisalTrainigNeeds(string docNo, int lineno) {
            object[] results = this.Invoke("FnRemoveStandardAppraisalTrainigNeeds", new object[] {
                        docNo,
                        lineno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnRemoveStandardAppraisalTrainigNeedsAsync(string docNo, int lineno) {
            this.FnRemoveStandardAppraisalTrainigNeedsAsync(docNo, lineno, null);
        }
        
        /// <remarks/>
        public void FnRemoveStandardAppraisalTrainigNeedsAsync(string docNo, int lineno, object userState) {
            if ((this.FnRemoveStandardAppraisalTrainigNeedsOperationCompleted == null)) {
                this.FnRemoveStandardAppraisalTrainigNeedsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnRemoveStandardAppraisalTrainigNeedsOperationCompleted);
            }
            this.InvokeAsync("FnRemoveStandardAppraisalTrainigNeeds", new object[] {
                        docNo,
                        lineno}, this.FnRemoveStandardAppraisalTrainigNeedsOperationCompleted, userState);
        }
        
        private void OnFnRemoveStandardAppraisalTrainigNeedsOperationCompleted(object arg) {
            if ((this.FnRemoveStandardAppraisalTrainigNeedsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnRemoveStandardAppraisalTrainigNeedsCompleted(this, new FnRemoveStandardAppraisalTrainigNeedsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnEditStandardAppraisalTrainigNe" +
            "eds", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnEditStandardAppraisalTrainigNeeds_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnEditStandardAppraisalTrainigNeeds(string docNo, int lineno, string category, string desc) {
            object[] results = this.Invoke("FnEditStandardAppraisalTrainigNeeds", new object[] {
                        docNo,
                        lineno,
                        category,
                        desc});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnEditStandardAppraisalTrainigNeedsAsync(string docNo, int lineno, string category, string desc) {
            this.FnEditStandardAppraisalTrainigNeedsAsync(docNo, lineno, category, desc, null);
        }
        
        /// <remarks/>
        public void FnEditStandardAppraisalTrainigNeedsAsync(string docNo, int lineno, string category, string desc, object userState) {
            if ((this.FnEditStandardAppraisalTrainigNeedsOperationCompleted == null)) {
                this.FnEditStandardAppraisalTrainigNeedsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnEditStandardAppraisalTrainigNeedsOperationCompleted);
            }
            this.InvokeAsync("FnEditStandardAppraisalTrainigNeeds", new object[] {
                        docNo,
                        lineno,
                        category,
                        desc}, this.FnEditStandardAppraisalTrainigNeedsOperationCompleted, userState);
        }
        
        private void OnFnEditStandardAppraisalTrainigNeedsOperationCompleted(object arg) {
            if ((this.FnEditStandardAppraisalTrainigNeedsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnEditStandardAppraisalTrainigNeedsCompleted(this, new FnEditStandardAppraisalTrainigNeedsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnSubmitStandardAppraisalConfirm" +
            "ation", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnSubmitStandardAppraisalConfirmation_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitStandardAppraisalConfirmation(string docNo) {
            object[] results = this.Invoke("FnSubmitStandardAppraisalConfirmation", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitStandardAppraisalConfirmationAsync(string docNo) {
            this.FnSubmitStandardAppraisalConfirmationAsync(docNo, null);
        }
        
        /// <remarks/>
        public void FnSubmitStandardAppraisalConfirmationAsync(string docNo, object userState) {
            if ((this.FnSubmitStandardAppraisalConfirmationOperationCompleted == null)) {
                this.FnSubmitStandardAppraisalConfirmationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitStandardAppraisalConfirmationOperationCompleted);
            }
            this.InvokeAsync("FnSubmitStandardAppraisalConfirmation", new object[] {
                        docNo}, this.FnSubmitStandardAppraisalConfirmationOperationCompleted, userState);
        }
        
        private void OnFnSubmitStandardAppraisalConfirmationOperationCompleted(object arg) {
            if ((this.FnSubmitStandardAppraisalConfirmationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitStandardAppraisalConfirmationCompleted(this, new FnSubmitStandardAppraisalConfirmationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnSendAppraisalEmail", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnSendAppraisalEmail_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSendAppraisalEmail(string docNo) {
            object[] results = this.Invoke("FnSendAppraisalEmail", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSendAppraisalEmailAsync(string docNo) {
            this.FnSendAppraisalEmailAsync(docNo, null);
        }
        
        /// <remarks/>
        public void FnSendAppraisalEmailAsync(string docNo, object userState) {
            if ((this.FnSendAppraisalEmailOperationCompleted == null)) {
                this.FnSendAppraisalEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSendAppraisalEmailOperationCompleted);
            }
            this.InvokeAsync("FnSendAppraisalEmail", new object[] {
                        docNo}, this.FnSendAppraisalEmailOperationCompleted, userState);
        }
        
        private void OnFnSendAppraisalEmailOperationCompleted(object arg) {
            if ((this.FnSendAppraisalEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSendAppraisalEmailCompleted(this, new FnSendAppraisalEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnAppraisalSuggestObjectivesOutc" +
            "omes", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnAppraisalSuggestObjectivesOutcomes_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnAppraisalSuggestObjectivesOutcomes(string docNo) {
            object[] results = this.Invoke("FnAppraisalSuggestObjectivesOutcomes", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnAppraisalSuggestObjectivesOutcomesAsync(string docNo) {
            this.FnAppraisalSuggestObjectivesOutcomesAsync(docNo, null);
        }
        
        /// <remarks/>
        public void FnAppraisalSuggestObjectivesOutcomesAsync(string docNo, object userState) {
            if ((this.FnAppraisalSuggestObjectivesOutcomesOperationCompleted == null)) {
                this.FnAppraisalSuggestObjectivesOutcomesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnAppraisalSuggestObjectivesOutcomesOperationCompleted);
            }
            this.InvokeAsync("FnAppraisalSuggestObjectivesOutcomes", new object[] {
                        docNo}, this.FnAppraisalSuggestObjectivesOutcomesOperationCompleted, userState);
        }
        
        private void OnFnAppraisalSuggestObjectivesOutcomesOperationCompleted(object arg) {
            if ((this.FnAppraisalSuggestObjectivesOutcomesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnAppraisalSuggestObjectivesOutcomesCompleted(this, new FnAppraisalSuggestObjectivesOutcomesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnNewStandardAppraisal", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnNewStandardAppraisal_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnNewStandardAppraisal(string docNo, string empNo, string strategicPlan, string pmp, string tasks, string supervisor, string description, string personalSC) {
            object[] results = this.Invoke("FnNewStandardAppraisal", new object[] {
                        docNo,
                        empNo,
                        strategicPlan,
                        pmp,
                        tasks,
                        supervisor,
                        description,
                        personalSC});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnNewStandardAppraisalAsync(string docNo, string empNo, string strategicPlan, string pmp, string tasks, string supervisor, string description, string personalSC) {
            this.FnNewStandardAppraisalAsync(docNo, empNo, strategicPlan, pmp, tasks, supervisor, description, personalSC, null);
        }
        
        /// <remarks/>
        public void FnNewStandardAppraisalAsync(string docNo, string empNo, string strategicPlan, string pmp, string tasks, string supervisor, string description, string personalSC, object userState) {
            if ((this.FnNewStandardAppraisalOperationCompleted == null)) {
                this.FnNewStandardAppraisalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnNewStandardAppraisalOperationCompleted);
            }
            this.InvokeAsync("FnNewStandardAppraisal", new object[] {
                        docNo,
                        empNo,
                        strategicPlan,
                        pmp,
                        tasks,
                        supervisor,
                        description,
                        personalSC}, this.FnNewStandardAppraisalOperationCompleted, userState);
        }
        
        private void OnFnNewStandardAppraisalOperationCompleted(object arg) {
            if ((this.FnNewStandardAppraisalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnNewStandardAppraisalCompleted(this, new FnNewStandardAppraisalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnLoadCompetencies", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnLoadCompetencies_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnLoadCompetencies(string docNo) {
            object[] results = this.Invoke("FnLoadCompetencies", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnLoadCompetenciesAsync(string docNo) {
            this.FnLoadCompetenciesAsync(docNo, null);
        }
        
        /// <remarks/>
        public void FnLoadCompetenciesAsync(string docNo, object userState) {
            if ((this.FnLoadCompetenciesOperationCompleted == null)) {
                this.FnLoadCompetenciesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnLoadCompetenciesOperationCompleted);
            }
            this.InvokeAsync("FnLoadCompetencies", new object[] {
                        docNo}, this.FnLoadCompetenciesOperationCompleted, userState);
        }
        
        private void OnFnLoadCompetenciesOperationCompleted(object arg) {
            if ((this.FnLoadCompetenciesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnLoadCompetenciesCompleted(this, new FnLoadCompetenciesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnSubmitSelectedPLogCategories2", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnSubmitSelectedPLogCategories2_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitSelectedPLogCategories2(string strategyid, string personalscorecardid, string plogNumber, string initiativeNumber) {
            object[] results = this.Invoke("FnSubmitSelectedPLogCategories2", new object[] {
                        strategyid,
                        personalscorecardid,
                        plogNumber,
                        initiativeNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitSelectedPLogCategories2Async(string strategyid, string personalscorecardid, string plogNumber, string initiativeNumber) {
            this.FnSubmitSelectedPLogCategories2Async(strategyid, personalscorecardid, plogNumber, initiativeNumber, null);
        }
        
        /// <remarks/>
        public void FnSubmitSelectedPLogCategories2Async(string strategyid, string personalscorecardid, string plogNumber, string initiativeNumber, object userState) {
            if ((this.FnSubmitSelectedPLogCategories2OperationCompleted == null)) {
                this.FnSubmitSelectedPLogCategories2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitSelectedPLogCategories2OperationCompleted);
            }
            this.InvokeAsync("FnSubmitSelectedPLogCategories2", new object[] {
                        strategyid,
                        personalscorecardid,
                        plogNumber,
                        initiativeNumber}, this.FnSubmitSelectedPLogCategories2OperationCompleted, userState);
        }
        
        private void OnFnSubmitSelectedPLogCategories2OperationCompleted(object arg) {
            if ((this.FnSubmitSelectedPLogCategories2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitSelectedPLogCategories2Completed(this, new FnSubmitSelectedPLogCategories2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:ResetPassword", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="ResetPassword_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ResetPassword(string employeeNumbera45idNumber) {
            object[] results = this.Invoke("ResetPassword", new object[] {
                        employeeNumbera45idNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ResetPasswordAsync(string employeeNumbera45idNumber) {
            this.ResetPasswordAsync(employeeNumbera45idNumber, null);
        }
        
        /// <remarks/>
        public void ResetPasswordAsync(string employeeNumbera45idNumber, object userState) {
            if ((this.ResetPasswordOperationCompleted == null)) {
                this.ResetPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnResetPasswordOperationCompleted);
            }
            this.InvokeAsync("ResetPassword", new object[] {
                        employeeNumbera45idNumber}, this.ResetPasswordOperationCompleted, userState);
        }
        
        private void OnResetPasswordOperationCompleted(object arg) {
            if ((this.ResetPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ResetPasswordCompleted(this, new ResetPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:LeaveApplication", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="LeaveApplication_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string LeaveApplication(string leaveNo, string employeeNumber, string leaveType, int annualLeaveType, int daysApplied, System.DateTime lStartDate, string phoneNumber, string emailAddress, string examdetails, System.DateTime dateOfExam, int previousAttempts) {
            object[] results = this.Invoke("LeaveApplication", new object[] {
                        leaveNo,
                        employeeNumber,
                        leaveType,
                        annualLeaveType,
                        daysApplied,
                        lStartDate,
                        phoneNumber,
                        emailAddress,
                        examdetails,
                        dateOfExam,
                        previousAttempts});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LeaveApplicationAsync(string leaveNo, string employeeNumber, string leaveType, int annualLeaveType, int daysApplied, System.DateTime lStartDate, string phoneNumber, string emailAddress, string examdetails, System.DateTime dateOfExam, int previousAttempts) {
            this.LeaveApplicationAsync(leaveNo, employeeNumber, leaveType, annualLeaveType, daysApplied, lStartDate, phoneNumber, emailAddress, examdetails, dateOfExam, previousAttempts, null);
        }
        
        /// <remarks/>
        public void LeaveApplicationAsync(string leaveNo, string employeeNumber, string leaveType, int annualLeaveType, int daysApplied, System.DateTime lStartDate, string phoneNumber, string emailAddress, string examdetails, System.DateTime dateOfExam, int previousAttempts, object userState) {
            if ((this.LeaveApplicationOperationCompleted == null)) {
                this.LeaveApplicationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLeaveApplicationOperationCompleted);
            }
            this.InvokeAsync("LeaveApplication", new object[] {
                        leaveNo,
                        employeeNumber,
                        leaveType,
                        annualLeaveType,
                        daysApplied,
                        lStartDate,
                        phoneNumber,
                        emailAddress,
                        examdetails,
                        dateOfExam,
                        previousAttempts}, this.LeaveApplicationOperationCompleted, userState);
        }
        
        private void OnLeaveApplicationOperationCompleted(object arg) {
            if ((this.LeaveApplicationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LeaveApplicationCompleted(this, new LeaveApplicationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:GeneratePayslip", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="GeneratePayslip_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GeneratePayslip(string employeeNumber, System.DateTime payPeriod) {
            object[] results = this.Invoke("GeneratePayslip", new object[] {
                        employeeNumber,
                        payPeriod});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GeneratePayslipAsync(string employeeNumber, System.DateTime payPeriod) {
            this.GeneratePayslipAsync(employeeNumber, payPeriod, null);
        }
        
        /// <remarks/>
        public void GeneratePayslipAsync(string employeeNumber, System.DateTime payPeriod, object userState) {
            if ((this.GeneratePayslipOperationCompleted == null)) {
                this.GeneratePayslipOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGeneratePayslipOperationCompleted);
            }
            this.InvokeAsync("GeneratePayslip", new object[] {
                        employeeNumber,
                        payPeriod}, this.GeneratePayslipOperationCompleted, userState);
        }
        
        private void OnGeneratePayslipOperationCompleted(object arg) {
            if ((this.GeneratePayslipCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GeneratePayslipCompleted(this, new GeneratePayslipCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:CreateNewTrainingRequest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="CreateNewTrainingRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateNewTrainingRequest(string employeeNo, string needsNo, string description) {
            object[] results = this.Invoke("CreateNewTrainingRequest", new object[] {
                        employeeNo,
                        needsNo,
                        description});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateNewTrainingRequestAsync(string employeeNo, string needsNo, string description) {
            this.CreateNewTrainingRequestAsync(employeeNo, needsNo, description, null);
        }
        
        /// <remarks/>
        public void CreateNewTrainingRequestAsync(string employeeNo, string needsNo, string description, object userState) {
            if ((this.CreateNewTrainingRequestOperationCompleted == null)) {
                this.CreateNewTrainingRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateNewTrainingRequestOperationCompleted);
            }
            this.InvokeAsync("CreateNewTrainingRequest", new object[] {
                        employeeNo,
                        needsNo,
                        description}, this.CreateNewTrainingRequestOperationCompleted, userState);
        }
        
        private void OnCreateNewTrainingRequestOperationCompleted(object arg) {
            if ((this.CreateNewTrainingRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateNewTrainingRequestCompleted(this, new CreateNewTrainingRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:CreateNewTrainingNeedsLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="CreateNewTrainingNeedsLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateNewTrainingNeedsLines(string requestNo, string description, int source, string comments, int requiredfor, int category, string course) {
            object[] results = this.Invoke("CreateNewTrainingNeedsLines", new object[] {
                        requestNo,
                        description,
                        source,
                        comments,
                        requiredfor,
                        category,
                        course});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateNewTrainingNeedsLinesAsync(string requestNo, string description, int source, string comments, int requiredfor, int category, string course) {
            this.CreateNewTrainingNeedsLinesAsync(requestNo, description, source, comments, requiredfor, category, course, null);
        }
        
        /// <remarks/>
        public void CreateNewTrainingNeedsLinesAsync(string requestNo, string description, int source, string comments, int requiredfor, int category, string course, object userState) {
            if ((this.CreateNewTrainingNeedsLinesOperationCompleted == null)) {
                this.CreateNewTrainingNeedsLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateNewTrainingNeedsLinesOperationCompleted);
            }
            this.InvokeAsync("CreateNewTrainingNeedsLines", new object[] {
                        requestNo,
                        description,
                        source,
                        comments,
                        requiredfor,
                        category,
                        course}, this.CreateNewTrainingNeedsLinesOperationCompleted, userState);
        }
        
        private void OnCreateNewTrainingNeedsLinesOperationCompleted(object arg) {
            if ((this.CreateNewTrainingNeedsLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateNewTrainingNeedsLinesCompleted(this, new CreateNewTrainingNeedsLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:SendTrainingNeedsApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="SendTrainingNeedsApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string SendTrainingNeedsApproval(string empNo, string docNo) {
            object[] results = this.Invoke("SendTrainingNeedsApproval", new object[] {
                        empNo,
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendTrainingNeedsApprovalAsync(string empNo, string docNo) {
            this.SendTrainingNeedsApprovalAsync(empNo, docNo, null);
        }
        
        /// <remarks/>
        public void SendTrainingNeedsApprovalAsync(string empNo, string docNo, object userState) {
            if ((this.SendTrainingNeedsApprovalOperationCompleted == null)) {
                this.SendTrainingNeedsApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendTrainingNeedsApprovalOperationCompleted);
            }
            this.InvokeAsync("SendTrainingNeedsApproval", new object[] {
                        empNo,
                        docNo}, this.SendTrainingNeedsApprovalOperationCompleted, userState);
        }
        
        private void OnSendTrainingNeedsApprovalOperationCompleted(object arg) {
            if ((this.SendTrainingNeedsApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendTrainingNeedsApprovalCompleted(this, new SendTrainingNeedsApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:CancelTrainingNeedsApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="CancelTrainingNeedsApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CancelTrainingNeedsApproval(string empNo, string docNo) {
            object[] results = this.Invoke("CancelTrainingNeedsApproval", new object[] {
                        empNo,
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CancelTrainingNeedsApprovalAsync(string empNo, string docNo) {
            this.CancelTrainingNeedsApprovalAsync(empNo, docNo, null);
        }
        
        /// <remarks/>
        public void CancelTrainingNeedsApprovalAsync(string empNo, string docNo, object userState) {
            if ((this.CancelTrainingNeedsApprovalOperationCompleted == null)) {
                this.CancelTrainingNeedsApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelTrainingNeedsApprovalOperationCompleted);
            }
            this.InvokeAsync("CancelTrainingNeedsApproval", new object[] {
                        empNo,
                        docNo}, this.CancelTrainingNeedsApprovalOperationCompleted, userState);
        }
        
        private void OnCancelTrainingNeedsApprovalOperationCompleted(object arg) {
            if ((this.CancelTrainingNeedsApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelTrainingNeedsApprovalCompleted(this, new CancelTrainingNeedsApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:CreateNewTrainingApplication", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="CreateNewTrainingApplication_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateNewTrainingApplication(
                    string employeeNo, 
                    string applicationNo, 
                    string planNo, 
                    string courseTitle, 
                    string venue, 
                    string responsibilityCenter, 
                    string provider, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime startdate, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime enddate, 
                    string fundcode, 
                    string year, 
                    int trainingtype, 
                    int modeoftraining, 
                    string justification, 
                    int residency, 
                    string traininglocation) {
            object[] results = this.Invoke("CreateNewTrainingApplication", new object[] {
                        employeeNo,
                        applicationNo,
                        planNo,
                        courseTitle,
                        venue,
                        responsibilityCenter,
                        provider,
                        startdate,
                        enddate,
                        fundcode,
                        year,
                        trainingtype,
                        modeoftraining,
                        justification,
                        residency,
                        traininglocation});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateNewTrainingApplicationAsync(
                    string employeeNo, 
                    string applicationNo, 
                    string planNo, 
                    string courseTitle, 
                    string venue, 
                    string responsibilityCenter, 
                    string provider, 
                    System.DateTime startdate, 
                    System.DateTime enddate, 
                    string fundcode, 
                    string year, 
                    int trainingtype, 
                    int modeoftraining, 
                    string justification, 
                    int residency, 
                    string traininglocation) {
            this.CreateNewTrainingApplicationAsync(employeeNo, applicationNo, planNo, courseTitle, venue, responsibilityCenter, provider, startdate, enddate, fundcode, year, trainingtype, modeoftraining, justification, residency, traininglocation, null);
        }
        
        /// <remarks/>
        public void CreateNewTrainingApplicationAsync(
                    string employeeNo, 
                    string applicationNo, 
                    string planNo, 
                    string courseTitle, 
                    string venue, 
                    string responsibilityCenter, 
                    string provider, 
                    System.DateTime startdate, 
                    System.DateTime enddate, 
                    string fundcode, 
                    string year, 
                    int trainingtype, 
                    int modeoftraining, 
                    string justification, 
                    int residency, 
                    string traininglocation, 
                    object userState) {
            if ((this.CreateNewTrainingApplicationOperationCompleted == null)) {
                this.CreateNewTrainingApplicationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateNewTrainingApplicationOperationCompleted);
            }
            this.InvokeAsync("CreateNewTrainingApplication", new object[] {
                        employeeNo,
                        applicationNo,
                        planNo,
                        courseTitle,
                        venue,
                        responsibilityCenter,
                        provider,
                        startdate,
                        enddate,
                        fundcode,
                        year,
                        trainingtype,
                        modeoftraining,
                        justification,
                        residency,
                        traininglocation}, this.CreateNewTrainingApplicationOperationCompleted, userState);
        }
        
        private void OnCreateNewTrainingApplicationOperationCompleted(object arg) {
            if ((this.CreateNewTrainingApplicationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateNewTrainingApplicationCompleted(this, new CreateNewTrainingApplicationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:CreateTrainingRequisition", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="CreateTrainingRequisition_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateTrainingRequisition(string docNo, string trainingplan, string courseTitle, string trainingVenue, string respCenter, string location, string provider, string empNo, string desc, string fundcode, string year, int type, int mode, int residency) {
            object[] results = this.Invoke("CreateTrainingRequisition", new object[] {
                        docNo,
                        trainingplan,
                        courseTitle,
                        trainingVenue,
                        respCenter,
                        location,
                        provider,
                        empNo,
                        desc,
                        fundcode,
                        year,
                        type,
                        mode,
                        residency});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateTrainingRequisitionAsync(string docNo, string trainingplan, string courseTitle, string trainingVenue, string respCenter, string location, string provider, string empNo, string desc, string fundcode, string year, int type, int mode, int residency) {
            this.CreateTrainingRequisitionAsync(docNo, trainingplan, courseTitle, trainingVenue, respCenter, location, provider, empNo, desc, fundcode, year, type, mode, residency, null);
        }
        
        /// <remarks/>
        public void CreateTrainingRequisitionAsync(string docNo, string trainingplan, string courseTitle, string trainingVenue, string respCenter, string location, string provider, string empNo, string desc, string fundcode, string year, int type, int mode, int residency, object userState) {
            if ((this.CreateTrainingRequisitionOperationCompleted == null)) {
                this.CreateTrainingRequisitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateTrainingRequisitionOperationCompleted);
            }
            this.InvokeAsync("CreateTrainingRequisition", new object[] {
                        docNo,
                        trainingplan,
                        courseTitle,
                        trainingVenue,
                        respCenter,
                        location,
                        provider,
                        empNo,
                        desc,
                        fundcode,
                        year,
                        type,
                        mode,
                        residency}, this.CreateTrainingRequisitionOperationCompleted, userState);
        }
        
        private void OnCreateTrainingRequisitionOperationCompleted(object arg) {
            if ((this.CreateTrainingRequisitionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateTrainingRequisitionCompleted(this, new CreateTrainingRequisitionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:SendTrainingRequestApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="SendTrainingRequestApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string SendTrainingRequestApproval(string employeeNo, string reqNo) {
            object[] results = this.Invoke("SendTrainingRequestApproval", new object[] {
                        employeeNo,
                        reqNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendTrainingRequestApprovalAsync(string employeeNo, string reqNo) {
            this.SendTrainingRequestApprovalAsync(employeeNo, reqNo, null);
        }
        
        /// <remarks/>
        public void SendTrainingRequestApprovalAsync(string employeeNo, string reqNo, object userState) {
            if ((this.SendTrainingRequestApprovalOperationCompleted == null)) {
                this.SendTrainingRequestApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendTrainingRequestApprovalOperationCompleted);
            }
            this.InvokeAsync("SendTrainingRequestApproval", new object[] {
                        employeeNo,
                        reqNo}, this.SendTrainingRequestApprovalOperationCompleted, userState);
        }
        
        private void OnSendTrainingRequestApprovalOperationCompleted(object arg) {
            if ((this.SendTrainingRequestApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendTrainingRequestApprovalCompleted(this, new SendTrainingRequestApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:CancelTrainingRequestApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="CancelTrainingRequestApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CancelTrainingRequestApproval(string employeeNo, string recordNo) {
            object[] results = this.Invoke("CancelTrainingRequestApproval", new object[] {
                        employeeNo,
                        recordNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CancelTrainingRequestApprovalAsync(string employeeNo, string recordNo) {
            this.CancelTrainingRequestApprovalAsync(employeeNo, recordNo, null);
        }
        
        /// <remarks/>
        public void CancelTrainingRequestApprovalAsync(string employeeNo, string recordNo, object userState) {
            if ((this.CancelTrainingRequestApprovalOperationCompleted == null)) {
                this.CancelTrainingRequestApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelTrainingRequestApprovalOperationCompleted);
            }
            this.InvokeAsync("CancelTrainingRequestApproval", new object[] {
                        employeeNo,
                        recordNo}, this.CancelTrainingRequestApprovalOperationCompleted, userState);
        }
        
        private void OnCancelTrainingRequestApprovalOperationCompleted(object arg) {
            if ((this.CancelTrainingRequestApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelTrainingRequestApprovalCompleted(this, new CancelTrainingRequestApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:CreateTrainingApplicationLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="CreateTrainingApplicationLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateTrainingApplicationLines(string applicationNo, string type, string employee, string destination, int days) {
            object[] results = this.Invoke("CreateTrainingApplicationLines", new object[] {
                        applicationNo,
                        type,
                        employee,
                        destination,
                        days});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateTrainingApplicationLinesAsync(string applicationNo, string type, string employee, string destination, int days) {
            this.CreateTrainingApplicationLinesAsync(applicationNo, type, employee, destination, days, null);
        }
        
        /// <remarks/>
        public void CreateTrainingApplicationLinesAsync(string applicationNo, string type, string employee, string destination, int days, object userState) {
            if ((this.CreateTrainingApplicationLinesOperationCompleted == null)) {
                this.CreateTrainingApplicationLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateTrainingApplicationLinesOperationCompleted);
            }
            this.InvokeAsync("CreateTrainingApplicationLines", new object[] {
                        applicationNo,
                        type,
                        employee,
                        destination,
                        days}, this.CreateTrainingApplicationLinesOperationCompleted, userState);
        }
        
        private void OnCreateTrainingApplicationLinesOperationCompleted(object arg) {
            if ((this.CreateTrainingApplicationLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateTrainingApplicationLinesCompleted(this, new CreateTrainingApplicationLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnEditTrainingApplicationLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnEditTrainingApplicationLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnEditTrainingApplicationLines(string appicationNo, int lineno, string type, string employee, string destination, decimal days) {
            object[] results = this.Invoke("FnEditTrainingApplicationLines", new object[] {
                        appicationNo,
                        lineno,
                        type,
                        employee,
                        destination,
                        days});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnEditTrainingApplicationLinesAsync(string appicationNo, int lineno, string type, string employee, string destination, decimal days) {
            this.FnEditTrainingApplicationLinesAsync(appicationNo, lineno, type, employee, destination, days, null);
        }
        
        /// <remarks/>
        public void FnEditTrainingApplicationLinesAsync(string appicationNo, int lineno, string type, string employee, string destination, decimal days, object userState) {
            if ((this.FnEditTrainingApplicationLinesOperationCompleted == null)) {
                this.FnEditTrainingApplicationLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnEditTrainingApplicationLinesOperationCompleted);
            }
            this.InvokeAsync("FnEditTrainingApplicationLines", new object[] {
                        appicationNo,
                        lineno,
                        type,
                        employee,
                        destination,
                        days}, this.FnEditTrainingApplicationLinesOperationCompleted, userState);
        }
        
        private void OnFnEditTrainingApplicationLinesOperationCompleted(object arg) {
            if ((this.FnEditTrainingApplicationLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnEditTrainingApplicationLinesCompleted(this, new FnEditTrainingApplicationLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:CreateTrainingReport", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="CreateTrainingReport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateTrainingReport(string applicationNo) {
            object[] results = this.Invoke("CreateTrainingReport", new object[] {
                        applicationNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateTrainingReportAsync(string applicationNo) {
            this.CreateTrainingReportAsync(applicationNo, null);
        }
        
        /// <remarks/>
        public void CreateTrainingReportAsync(string applicationNo, object userState) {
            if ((this.CreateTrainingReportOperationCompleted == null)) {
                this.CreateTrainingReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateTrainingReportOperationCompleted);
            }
            this.InvokeAsync("CreateTrainingReport", new object[] {
                        applicationNo}, this.CreateTrainingReportOperationCompleted, userState);
        }
        
        private void OnCreateTrainingReportOperationCompleted(object arg) {
            if ((this.CreateTrainingReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateTrainingReportCompleted(this, new CreateTrainingReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnTrainingCosts", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnTrainingCosts_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnTrainingCosts(string applicationno, int costcategory, string costitem, string itemcategory, string itemcode, decimal cost, int quantity) {
            object[] results = this.Invoke("FnTrainingCosts", new object[] {
                        applicationno,
                        costcategory,
                        costitem,
                        itemcategory,
                        itemcode,
                        cost,
                        quantity});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnTrainingCostsAsync(string applicationno, int costcategory, string costitem, string itemcategory, string itemcode, decimal cost, int quantity) {
            this.FnTrainingCostsAsync(applicationno, costcategory, costitem, itemcategory, itemcode, cost, quantity, null);
        }
        
        /// <remarks/>
        public void FnTrainingCostsAsync(string applicationno, int costcategory, string costitem, string itemcategory, string itemcode, decimal cost, int quantity, object userState) {
            if ((this.FnTrainingCostsOperationCompleted == null)) {
                this.FnTrainingCostsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnTrainingCostsOperationCompleted);
            }
            this.InvokeAsync("FnTrainingCosts", new object[] {
                        applicationno,
                        costcategory,
                        costitem,
                        itemcategory,
                        itemcode,
                        cost,
                        quantity}, this.FnTrainingCostsOperationCompleted, userState);
        }
        
        private void OnFnTrainingCostsOperationCompleted(object arg) {
            if ((this.FnTrainingCostsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnTrainingCostsCompleted(this, new FnTrainingCostsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnDeleteTrainingApplicationLines" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnDeleteTrainingApplicationLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnDeleteTrainingApplicationLines(string applicationNo, int lineno) {
            object[] results = this.Invoke("FnDeleteTrainingApplicationLines", new object[] {
                        applicationNo,
                        lineno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnDeleteTrainingApplicationLinesAsync(string applicationNo, int lineno) {
            this.FnDeleteTrainingApplicationLinesAsync(applicationNo, lineno, null);
        }
        
        /// <remarks/>
        public void FnDeleteTrainingApplicationLinesAsync(string applicationNo, int lineno, object userState) {
            if ((this.FnDeleteTrainingApplicationLinesOperationCompleted == null)) {
                this.FnDeleteTrainingApplicationLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnDeleteTrainingApplicationLinesOperationCompleted);
            }
            this.InvokeAsync("FnDeleteTrainingApplicationLines", new object[] {
                        applicationNo,
                        lineno}, this.FnDeleteTrainingApplicationLinesOperationCompleted, userState);
        }
        
        private void OnFnDeleteTrainingApplicationLinesOperationCompleted(object arg) {
            if ((this.FnDeleteTrainingApplicationLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnDeleteTrainingApplicationLinesCompleted(this, new FnDeleteTrainingApplicationLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnCancelIndividualScorecardAppro" +
            "val", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnCancelIndividualScorecardApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnCancelIndividualScorecardApproval(string applicationno) {
            object[] results = this.Invoke("FnCancelIndividualScorecardApproval", new object[] {
                        applicationno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnCancelIndividualScorecardApprovalAsync(string applicationno) {
            this.FnCancelIndividualScorecardApprovalAsync(applicationno, null);
        }
        
        /// <remarks/>
        public void FnCancelIndividualScorecardApprovalAsync(string applicationno, object userState) {
            if ((this.FnCancelIndividualScorecardApprovalOperationCompleted == null)) {
                this.FnCancelIndividualScorecardApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnCancelIndividualScorecardApprovalOperationCompleted);
            }
            this.InvokeAsync("FnCancelIndividualScorecardApproval", new object[] {
                        applicationno}, this.FnCancelIndividualScorecardApprovalOperationCompleted, userState);
        }
        
        private void OnFnCancelIndividualScorecardApprovalOperationCompleted(object arg) {
            if ((this.FnCancelIndividualScorecardApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnCancelIndividualScorecardApprovalCompleted(this, new FnCancelIndividualScorecardApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnSubmitSelectedAdditionalInitia" +
            "tives", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnSubmitSelectedAdditionalInitiatives_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitSelectedAdditionalInitiatives(string strategicplanNumber, string initiativeNumber, string individualCardNo, string workploanNo) {
            object[] results = this.Invoke("FnSubmitSelectedAdditionalInitiatives", new object[] {
                        strategicplanNumber,
                        initiativeNumber,
                        individualCardNo,
                        workploanNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitSelectedAdditionalInitiativesAsync(string strategicplanNumber, string initiativeNumber, string individualCardNo, string workploanNo) {
            this.FnSubmitSelectedAdditionalInitiativesAsync(strategicplanNumber, initiativeNumber, individualCardNo, workploanNo, null);
        }
        
        /// <remarks/>
        public void FnSubmitSelectedAdditionalInitiativesAsync(string strategicplanNumber, string initiativeNumber, string individualCardNo, string workploanNo, object userState) {
            if ((this.FnSubmitSelectedAdditionalInitiativesOperationCompleted == null)) {
                this.FnSubmitSelectedAdditionalInitiativesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitSelectedAdditionalInitiativesOperationCompleted);
            }
            this.InvokeAsync("FnSubmitSelectedAdditionalInitiatives", new object[] {
                        strategicplanNumber,
                        initiativeNumber,
                        individualCardNo,
                        workploanNo}, this.FnSubmitSelectedAdditionalInitiativesOperationCompleted, userState);
        }
        
        private void OnFnSubmitSelectedAdditionalInitiativesOperationCompleted(object arg) {
            if ((this.FnSubmitSelectedAdditionalInitiativesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitSelectedAdditionalInitiativesCompleted(this, new FnSubmitSelectedAdditionalInitiativesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnSendIndividualScorecardApprova" +
            "l", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnSendIndividualScorecardApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSendIndividualScorecardApproval(string applicationno) {
            object[] results = this.Invoke("FnSendIndividualScorecardApproval", new object[] {
                        applicationno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSendIndividualScorecardApprovalAsync(string applicationno) {
            this.FnSendIndividualScorecardApprovalAsync(applicationno, null);
        }
        
        /// <remarks/>
        public void FnSendIndividualScorecardApprovalAsync(string applicationno, object userState) {
            if ((this.FnSendIndividualScorecardApprovalOperationCompleted == null)) {
                this.FnSendIndividualScorecardApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSendIndividualScorecardApprovalOperationCompleted);
            }
            this.InvokeAsync("FnSendIndividualScorecardApproval", new object[] {
                        applicationno}, this.FnSendIndividualScorecardApprovalOperationCompleted, userState);
        }
        
        private void OnFnSendIndividualScorecardApprovalOperationCompleted(object arg) {
            if ((this.FnSendIndividualScorecardApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSendIndividualScorecardApprovalCompleted(this, new FnSendIndividualScorecardApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:SendTrainingApplicationApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="SendTrainingApplicationApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string SendTrainingApplicationApproval(string applicationno) {
            object[] results = this.Invoke("SendTrainingApplicationApproval", new object[] {
                        applicationno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendTrainingApplicationApprovalAsync(string applicationno) {
            this.SendTrainingApplicationApprovalAsync(applicationno, null);
        }
        
        /// <remarks/>
        public void SendTrainingApplicationApprovalAsync(string applicationno, object userState) {
            if ((this.SendTrainingApplicationApprovalOperationCompleted == null)) {
                this.SendTrainingApplicationApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendTrainingApplicationApprovalOperationCompleted);
            }
            this.InvokeAsync("SendTrainingApplicationApproval", new object[] {
                        applicationno}, this.SendTrainingApplicationApprovalOperationCompleted, userState);
        }
        
        private void OnSendTrainingApplicationApprovalOperationCompleted(object arg) {
            if ((this.SendTrainingApplicationApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendTrainingApplicationApprovalCompleted(this, new SendTrainingApplicationApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:CreateNewTrainingFeedback1", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="CreateNewTrainingFeedback1_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateNewTrainingFeedback1(string employeeNo, string feedbackNo, string applicationCode) {
            object[] results = this.Invoke("CreateNewTrainingFeedback1", new object[] {
                        employeeNo,
                        feedbackNo,
                        applicationCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateNewTrainingFeedback1Async(string employeeNo, string feedbackNo, string applicationCode) {
            this.CreateNewTrainingFeedback1Async(employeeNo, feedbackNo, applicationCode, null);
        }
        
        /// <remarks/>
        public void CreateNewTrainingFeedback1Async(string employeeNo, string feedbackNo, string applicationCode, object userState) {
            if ((this.CreateNewTrainingFeedback1OperationCompleted == null)) {
                this.CreateNewTrainingFeedback1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateNewTrainingFeedback1OperationCompleted);
            }
            this.InvokeAsync("CreateNewTrainingFeedback1", new object[] {
                        employeeNo,
                        feedbackNo,
                        applicationCode}, this.CreateNewTrainingFeedback1OperationCompleted, userState);
        }
        
        private void OnCreateNewTrainingFeedback1OperationCompleted(object arg) {
            if ((this.CreateNewTrainingFeedback1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateNewTrainingFeedback1Completed(this, new CreateNewTrainingFeedback1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:CreateTrainingFeedbackLines1", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="CreateTrainingFeedbackLines1_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateTrainingFeedbackLines1(string feedbackNo, string trainingcategory, string ratingcode, string comments) {
            object[] results = this.Invoke("CreateTrainingFeedbackLines1", new object[] {
                        feedbackNo,
                        trainingcategory,
                        ratingcode,
                        comments});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateTrainingFeedbackLines1Async(string feedbackNo, string trainingcategory, string ratingcode, string comments) {
            this.CreateTrainingFeedbackLines1Async(feedbackNo, trainingcategory, ratingcode, comments, null);
        }
        
        /// <remarks/>
        public void CreateTrainingFeedbackLines1Async(string feedbackNo, string trainingcategory, string ratingcode, string comments, object userState) {
            if ((this.CreateTrainingFeedbackLines1OperationCompleted == null)) {
                this.CreateTrainingFeedbackLines1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateTrainingFeedbackLines1OperationCompleted);
            }
            this.InvokeAsync("CreateTrainingFeedbackLines1", new object[] {
                        feedbackNo,
                        trainingcategory,
                        ratingcode,
                        comments}, this.CreateTrainingFeedbackLines1OperationCompleted, userState);
        }
        
        private void OnCreateTrainingFeedbackLines1OperationCompleted(object arg) {
            if ((this.CreateTrainingFeedbackLines1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateTrainingFeedbackLines1Completed(this, new CreateTrainingFeedbackLines1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnEditTrainingFeedbackLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnEditTrainingFeedbackLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnEditTrainingFeedbackLines(int lineno, string feedbackno, string rating, string category, string comments) {
            object[] results = this.Invoke("FnEditTrainingFeedbackLines", new object[] {
                        lineno,
                        feedbackno,
                        rating,
                        category,
                        comments});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnEditTrainingFeedbackLinesAsync(int lineno, string feedbackno, string rating, string category, string comments) {
            this.FnEditTrainingFeedbackLinesAsync(lineno, feedbackno, rating, category, comments, null);
        }
        
        /// <remarks/>
        public void FnEditTrainingFeedbackLinesAsync(int lineno, string feedbackno, string rating, string category, string comments, object userState) {
            if ((this.FnEditTrainingFeedbackLinesOperationCompleted == null)) {
                this.FnEditTrainingFeedbackLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnEditTrainingFeedbackLinesOperationCompleted);
            }
            this.InvokeAsync("FnEditTrainingFeedbackLines", new object[] {
                        lineno,
                        feedbackno,
                        rating,
                        category,
                        comments}, this.FnEditTrainingFeedbackLinesOperationCompleted, userState);
        }
        
        private void OnFnEditTrainingFeedbackLinesOperationCompleted(object arg) {
            if ((this.FnEditTrainingFeedbackLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnEditTrainingFeedbackLinesCompleted(this, new FnEditTrainingFeedbackLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnDeleteTrainingFeedbackLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnDeleteTrainingFeedbackLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnDeleteTrainingFeedbackLines(int lineno, string feedbackno) {
            object[] results = this.Invoke("FnDeleteTrainingFeedbackLines", new object[] {
                        lineno,
                        feedbackno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnDeleteTrainingFeedbackLinesAsync(int lineno, string feedbackno) {
            this.FnDeleteTrainingFeedbackLinesAsync(lineno, feedbackno, null);
        }
        
        /// <remarks/>
        public void FnDeleteTrainingFeedbackLinesAsync(int lineno, string feedbackno, object userState) {
            if ((this.FnDeleteTrainingFeedbackLinesOperationCompleted == null)) {
                this.FnDeleteTrainingFeedbackLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnDeleteTrainingFeedbackLinesOperationCompleted);
            }
            this.InvokeAsync("FnDeleteTrainingFeedbackLines", new object[] {
                        lineno,
                        feedbackno}, this.FnDeleteTrainingFeedbackLinesOperationCompleted, userState);
        }
        
        private void OnFnDeleteTrainingFeedbackLinesOperationCompleted(object arg) {
            if ((this.FnDeleteTrainingFeedbackLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnDeleteTrainingFeedbackLinesCompleted(this, new FnDeleteTrainingFeedbackLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:CreateTrainingEvaluation", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="CreateTrainingEvaluation_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateTrainingEvaluation(string employeeNo, string applicationCode, string evaluationNo) {
            object[] results = this.Invoke("CreateTrainingEvaluation", new object[] {
                        employeeNo,
                        applicationCode,
                        evaluationNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateTrainingEvaluationAsync(string employeeNo, string applicationCode, string evaluationNo) {
            this.CreateTrainingEvaluationAsync(employeeNo, applicationCode, evaluationNo, null);
        }
        
        /// <remarks/>
        public void CreateTrainingEvaluationAsync(string employeeNo, string applicationCode, string evaluationNo, object userState) {
            if ((this.CreateTrainingEvaluationOperationCompleted == null)) {
                this.CreateTrainingEvaluationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateTrainingEvaluationOperationCompleted);
            }
            this.InvokeAsync("CreateTrainingEvaluation", new object[] {
                        employeeNo,
                        applicationCode,
                        evaluationNo}, this.CreateTrainingEvaluationOperationCompleted, userState);
        }
        
        private void OnCreateTrainingEvaluationOperationCompleted(object arg) {
            if ((this.CreateTrainingEvaluationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateTrainingEvaluationCompleted(this, new CreateTrainingEvaluationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:CreateTrainingEvaluationLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="CreateTrainingEvaluationLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateTrainingEvaluationLines(string trainingNo, string category, string ratingcode, string comments) {
            object[] results = this.Invoke("CreateTrainingEvaluationLines", new object[] {
                        trainingNo,
                        category,
                        ratingcode,
                        comments});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateTrainingEvaluationLinesAsync(string trainingNo, string category, string ratingcode, string comments) {
            this.CreateTrainingEvaluationLinesAsync(trainingNo, category, ratingcode, comments, null);
        }
        
        /// <remarks/>
        public void CreateTrainingEvaluationLinesAsync(string trainingNo, string category, string ratingcode, string comments, object userState) {
            if ((this.CreateTrainingEvaluationLinesOperationCompleted == null)) {
                this.CreateTrainingEvaluationLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateTrainingEvaluationLinesOperationCompleted);
            }
            this.InvokeAsync("CreateTrainingEvaluationLines", new object[] {
                        trainingNo,
                        category,
                        ratingcode,
                        comments}, this.CreateTrainingEvaluationLinesOperationCompleted, userState);
        }
        
        private void OnCreateTrainingEvaluationLinesOperationCompleted(object arg) {
            if ((this.CreateTrainingEvaluationLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateTrainingEvaluationLinesCompleted(this, new CreateTrainingEvaluationLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:CreateNewDailyWorkTicket", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="CreateNewDailyWorkTicket_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateNewDailyWorkTicket(string empNo, string ticketNo, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime monthdate, string dailyTicketNo, string previousTicketNo, string vehicleNo, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateclosed, string authorizer) {
            object[] results = this.Invoke("CreateNewDailyWorkTicket", new object[] {
                        empNo,
                        ticketNo,
                        monthdate,
                        dailyTicketNo,
                        previousTicketNo,
                        vehicleNo,
                        dateclosed,
                        authorizer});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateNewDailyWorkTicketAsync(string empNo, string ticketNo, System.DateTime monthdate, string dailyTicketNo, string previousTicketNo, string vehicleNo, System.DateTime dateclosed, string authorizer) {
            this.CreateNewDailyWorkTicketAsync(empNo, ticketNo, monthdate, dailyTicketNo, previousTicketNo, vehicleNo, dateclosed, authorizer, null);
        }
        
        /// <remarks/>
        public void CreateNewDailyWorkTicketAsync(string empNo, string ticketNo, System.DateTime monthdate, string dailyTicketNo, string previousTicketNo, string vehicleNo, System.DateTime dateclosed, string authorizer, object userState) {
            if ((this.CreateNewDailyWorkTicketOperationCompleted == null)) {
                this.CreateNewDailyWorkTicketOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateNewDailyWorkTicketOperationCompleted);
            }
            this.InvokeAsync("CreateNewDailyWorkTicket", new object[] {
                        empNo,
                        ticketNo,
                        monthdate,
                        dailyTicketNo,
                        previousTicketNo,
                        vehicleNo,
                        dateclosed,
                        authorizer}, this.CreateNewDailyWorkTicketOperationCompleted, userState);
        }
        
        private void OnCreateNewDailyWorkTicketOperationCompleted(object arg) {
            if ((this.CreateNewDailyWorkTicketCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateNewDailyWorkTicketCompleted(this, new CreateNewDailyWorkTicketCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:CreateNewDailyWorkTicketLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="CreateNewDailyWorkTicketLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateNewDailyWorkTicketLines(string ticketNo, string requisitionno, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime requisitiondate, string driverno, string journeydetails, decimal oildrawn, decimal fueldrawn, decimal openodometer, decimal closeodometer, decimal totalKm, string receiptno) {
            object[] results = this.Invoke("CreateNewDailyWorkTicketLines", new object[] {
                        ticketNo,
                        requisitionno,
                        requisitiondate,
                        driverno,
                        journeydetails,
                        oildrawn,
                        fueldrawn,
                        openodometer,
                        closeodometer,
                        totalKm,
                        receiptno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateNewDailyWorkTicketLinesAsync(string ticketNo, string requisitionno, System.DateTime requisitiondate, string driverno, string journeydetails, decimal oildrawn, decimal fueldrawn, decimal openodometer, decimal closeodometer, decimal totalKm, string receiptno) {
            this.CreateNewDailyWorkTicketLinesAsync(ticketNo, requisitionno, requisitiondate, driverno, journeydetails, oildrawn, fueldrawn, openodometer, closeodometer, totalKm, receiptno, null);
        }
        
        /// <remarks/>
        public void CreateNewDailyWorkTicketLinesAsync(string ticketNo, string requisitionno, System.DateTime requisitiondate, string driverno, string journeydetails, decimal oildrawn, decimal fueldrawn, decimal openodometer, decimal closeodometer, decimal totalKm, string receiptno, object userState) {
            if ((this.CreateNewDailyWorkTicketLinesOperationCompleted == null)) {
                this.CreateNewDailyWorkTicketLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateNewDailyWorkTicketLinesOperationCompleted);
            }
            this.InvokeAsync("CreateNewDailyWorkTicketLines", new object[] {
                        ticketNo,
                        requisitionno,
                        requisitiondate,
                        driverno,
                        journeydetails,
                        oildrawn,
                        fueldrawn,
                        openodometer,
                        closeodometer,
                        totalKm,
                        receiptno}, this.CreateNewDailyWorkTicketLinesOperationCompleted, userState);
        }
        
        private void OnCreateNewDailyWorkTicketLinesOperationCompleted(object arg) {
            if ((this.CreateNewDailyWorkTicketLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateNewDailyWorkTicketLinesCompleted(this, new CreateNewDailyWorkTicketLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnEditDailyWorkTicketLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnEditDailyWorkTicketLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnEditDailyWorkTicketLines(string tickenno, int lineno, decimal kmtravelled, decimal oildrawn, decimal fueldrawn, string receiptno) {
            object[] results = this.Invoke("FnEditDailyWorkTicketLines", new object[] {
                        tickenno,
                        lineno,
                        kmtravelled,
                        oildrawn,
                        fueldrawn,
                        receiptno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnEditDailyWorkTicketLinesAsync(string tickenno, int lineno, decimal kmtravelled, decimal oildrawn, decimal fueldrawn, string receiptno) {
            this.FnEditDailyWorkTicketLinesAsync(tickenno, lineno, kmtravelled, oildrawn, fueldrawn, receiptno, null);
        }
        
        /// <remarks/>
        public void FnEditDailyWorkTicketLinesAsync(string tickenno, int lineno, decimal kmtravelled, decimal oildrawn, decimal fueldrawn, string receiptno, object userState) {
            if ((this.FnEditDailyWorkTicketLinesOperationCompleted == null)) {
                this.FnEditDailyWorkTicketLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnEditDailyWorkTicketLinesOperationCompleted);
            }
            this.InvokeAsync("FnEditDailyWorkTicketLines", new object[] {
                        tickenno,
                        lineno,
                        kmtravelled,
                        oildrawn,
                        fueldrawn,
                        receiptno}, this.FnEditDailyWorkTicketLinesOperationCompleted, userState);
        }
        
        private void OnFnEditDailyWorkTicketLinesOperationCompleted(object arg) {
            if ((this.FnEditDailyWorkTicketLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnEditDailyWorkTicketLinesCompleted(this, new FnEditDailyWorkTicketLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnDeleteDailyTicketLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnDeleteDailyTicketLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnDeleteDailyTicketLines(string ticketno, int lineno) {
            object[] results = this.Invoke("FnDeleteDailyTicketLines", new object[] {
                        ticketno,
                        lineno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnDeleteDailyTicketLinesAsync(string ticketno, int lineno) {
            this.FnDeleteDailyTicketLinesAsync(ticketno, lineno, null);
        }
        
        /// <remarks/>
        public void FnDeleteDailyTicketLinesAsync(string ticketno, int lineno, object userState) {
            if ((this.FnDeleteDailyTicketLinesOperationCompleted == null)) {
                this.FnDeleteDailyTicketLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnDeleteDailyTicketLinesOperationCompleted);
            }
            this.InvokeAsync("FnDeleteDailyTicketLines", new object[] {
                        ticketno,
                        lineno}, this.FnDeleteDailyTicketLinesOperationCompleted, userState);
        }
        
        private void OnFnDeleteDailyTicketLinesOperationCompleted(object arg) {
            if ((this.FnDeleteDailyTicketLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnDeleteDailyTicketLinesCompleted(this, new FnDeleteDailyTicketLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnEditTrainingNeedsRequestLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnEditTrainingNeedsRequestLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnEditTrainingNeedsRequestLines(string needsno, int lineno, string description, int source, string comments) {
            object[] results = this.Invoke("FnEditTrainingNeedsRequestLines", new object[] {
                        needsno,
                        lineno,
                        description,
                        source,
                        comments});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnEditTrainingNeedsRequestLinesAsync(string needsno, int lineno, string description, int source, string comments) {
            this.FnEditTrainingNeedsRequestLinesAsync(needsno, lineno, description, source, comments, null);
        }
        
        /// <remarks/>
        public void FnEditTrainingNeedsRequestLinesAsync(string needsno, int lineno, string description, int source, string comments, object userState) {
            if ((this.FnEditTrainingNeedsRequestLinesOperationCompleted == null)) {
                this.FnEditTrainingNeedsRequestLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnEditTrainingNeedsRequestLinesOperationCompleted);
            }
            this.InvokeAsync("FnEditTrainingNeedsRequestLines", new object[] {
                        needsno,
                        lineno,
                        description,
                        source,
                        comments}, this.FnEditTrainingNeedsRequestLinesOperationCompleted, userState);
        }
        
        private void OnFnEditTrainingNeedsRequestLinesOperationCompleted(object arg) {
            if ((this.FnEditTrainingNeedsRequestLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnEditTrainingNeedsRequestLinesCompleted(this, new FnEditTrainingNeedsRequestLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnDeleteTrainingNeedsLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnDeleteTrainingNeedsLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnDeleteTrainingNeedsLines(string needsno, int lineno) {
            object[] results = this.Invoke("FnDeleteTrainingNeedsLines", new object[] {
                        needsno,
                        lineno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnDeleteTrainingNeedsLinesAsync(string needsno, int lineno) {
            this.FnDeleteTrainingNeedsLinesAsync(needsno, lineno, null);
        }
        
        /// <remarks/>
        public void FnDeleteTrainingNeedsLinesAsync(string needsno, int lineno, object userState) {
            if ((this.FnDeleteTrainingNeedsLinesOperationCompleted == null)) {
                this.FnDeleteTrainingNeedsLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnDeleteTrainingNeedsLinesOperationCompleted);
            }
            this.InvokeAsync("FnDeleteTrainingNeedsLines", new object[] {
                        needsno,
                        lineno}, this.FnDeleteTrainingNeedsLinesOperationCompleted, userState);
        }
        
        private void OnFnDeleteTrainingNeedsLinesOperationCompleted(object arg) {
            if ((this.FnDeleteTrainingNeedsLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnDeleteTrainingNeedsLinesCompleted(this, new FnDeleteTrainingNeedsLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnGenerateTrainingApplicationRep" +
            "ort", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnGenerateTrainingApplicationReport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGenerateTrainingApplicationReport(string docNo) {
            object[] results = this.Invoke("FnGenerateTrainingApplicationReport", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGenerateTrainingApplicationReportAsync(string docNo) {
            this.FnGenerateTrainingApplicationReportAsync(docNo, null);
        }
        
        /// <remarks/>
        public void FnGenerateTrainingApplicationReportAsync(string docNo, object userState) {
            if ((this.FnGenerateTrainingApplicationReportOperationCompleted == null)) {
                this.FnGenerateTrainingApplicationReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGenerateTrainingApplicationReportOperationCompleted);
            }
            this.InvokeAsync("FnGenerateTrainingApplicationReport", new object[] {
                        docNo}, this.FnGenerateTrainingApplicationReportOperationCompleted, userState);
        }
        
        private void OnFnGenerateTrainingApplicationReportOperationCompleted(object arg) {
            if ((this.FnGenerateTrainingApplicationReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGenerateTrainingApplicationReportCompleted(this, new FnGenerateTrainingApplicationReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnGenerateTrainingPlanReport", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnGenerateTrainingPlanReport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGenerateTrainingPlanReport(string docNo) {
            object[] results = this.Invoke("FnGenerateTrainingPlanReport", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGenerateTrainingPlanReportAsync(string docNo) {
            this.FnGenerateTrainingPlanReportAsync(docNo, null);
        }
        
        /// <remarks/>
        public void FnGenerateTrainingPlanReportAsync(string docNo, object userState) {
            if ((this.FnGenerateTrainingPlanReportOperationCompleted == null)) {
                this.FnGenerateTrainingPlanReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGenerateTrainingPlanReportOperationCompleted);
            }
            this.InvokeAsync("FnGenerateTrainingPlanReport", new object[] {
                        docNo}, this.FnGenerateTrainingPlanReportOperationCompleted, userState);
        }
        
        private void OnFnGenerateTrainingPlanReportOperationCompleted(object arg) {
            if ((this.FnGenerateTrainingPlanReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGenerateTrainingPlanReportCompleted(this, new FnGenerateTrainingPlanReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnGenerateTrainingFeedbackReport" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnGenerateTrainingFeedbackReport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGenerateTrainingFeedbackReport(string docNo) {
            object[] results = this.Invoke("FnGenerateTrainingFeedbackReport", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGenerateTrainingFeedbackReportAsync(string docNo) {
            this.FnGenerateTrainingFeedbackReportAsync(docNo, null);
        }
        
        /// <remarks/>
        public void FnGenerateTrainingFeedbackReportAsync(string docNo, object userState) {
            if ((this.FnGenerateTrainingFeedbackReportOperationCompleted == null)) {
                this.FnGenerateTrainingFeedbackReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGenerateTrainingFeedbackReportOperationCompleted);
            }
            this.InvokeAsync("FnGenerateTrainingFeedbackReport", new object[] {
                        docNo}, this.FnGenerateTrainingFeedbackReportOperationCompleted, userState);
        }
        
        private void OnFnGenerateTrainingFeedbackReportOperationCompleted(object arg) {
            if ((this.FnGenerateTrainingFeedbackReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGenerateTrainingFeedbackReportCompleted(this, new FnGenerateTrainingFeedbackReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnGenerateTrainingEvaluationRepo" +
            "rt", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnGenerateTrainingEvaluationReport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGenerateTrainingEvaluationReport(string docNo) {
            object[] results = this.Invoke("FnGenerateTrainingEvaluationReport", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGenerateTrainingEvaluationReportAsync(string docNo) {
            this.FnGenerateTrainingEvaluationReportAsync(docNo, null);
        }
        
        /// <remarks/>
        public void FnGenerateTrainingEvaluationReportAsync(string docNo, object userState) {
            if ((this.FnGenerateTrainingEvaluationReportOperationCompleted == null)) {
                this.FnGenerateTrainingEvaluationReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGenerateTrainingEvaluationReportOperationCompleted);
            }
            this.InvokeAsync("FnGenerateTrainingEvaluationReport", new object[] {
                        docNo}, this.FnGenerateTrainingEvaluationReportOperationCompleted, userState);
        }
        
        private void OnFnGenerateTrainingEvaluationReportOperationCompleted(object arg) {
            if ((this.FnGenerateTrainingEvaluationReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGenerateTrainingEvaluationReportCompleted(this, new FnGenerateTrainingEvaluationReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:GenerateP9", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="GenerateP9_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GenerateP9(string employeeNumber, System.DateTime startDate, System.DateTime endDate) {
            object[] results = this.Invoke("GenerateP9", new object[] {
                        employeeNumber,
                        startDate,
                        endDate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GenerateP9Async(string employeeNumber, System.DateTime startDate, System.DateTime endDate) {
            this.GenerateP9Async(employeeNumber, startDate, endDate, null);
        }
        
        /// <remarks/>
        public void GenerateP9Async(string employeeNumber, System.DateTime startDate, System.DateTime endDate, object userState) {
            if ((this.GenerateP9OperationCompleted == null)) {
                this.GenerateP9OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateP9OperationCompleted);
            }
            this.InvokeAsync("GenerateP9", new object[] {
                        employeeNumber,
                        startDate,
                        endDate}, this.GenerateP9OperationCompleted, userState);
        }
        
        private void OnGenerateP9OperationCompleted(object arg) {
            if ((this.GenerateP9Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateP9Completed(this, new GenerateP9CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:Register", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="Register_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string Register(string first_Name, string middle_Name, string last_name, string email_Address, string phone_Number, string idNumbera47Passport, string citizenship, string gender) {
            object[] results = this.Invoke("Register", new object[] {
                        first_Name,
                        middle_Name,
                        last_name,
                        email_Address,
                        phone_Number,
                        idNumbera47Passport,
                        citizenship,
                        gender});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RegisterAsync(string first_Name, string middle_Name, string last_name, string email_Address, string phone_Number, string idNumbera47Passport, string citizenship, string gender) {
            this.RegisterAsync(first_Name, middle_Name, last_name, email_Address, phone_Number, idNumbera47Passport, citizenship, gender, null);
        }
        
        /// <remarks/>
        public void RegisterAsync(string first_Name, string middle_Name, string last_name, string email_Address, string phone_Number, string idNumbera47Passport, string citizenship, string gender, object userState) {
            if ((this.RegisterOperationCompleted == null)) {
                this.RegisterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRegisterOperationCompleted);
            }
            this.InvokeAsync("Register", new object[] {
                        first_Name,
                        middle_Name,
                        last_name,
                        email_Address,
                        phone_Number,
                        idNumbera47Passport,
                        citizenship,
                        gender}, this.RegisterOperationCompleted, userState);
        }
        
        private void OnRegisterOperationCompleted(object arg) {
            if ((this.RegisterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RegisterCompleted(this, new RegisterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddHobby", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddHobby_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddHobby(string idNumber, string hobby) {
            object[] results = this.Invoke("AddHobby", new object[] {
                        idNumber,
                        hobby});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddHobbyAsync(string idNumber, string hobby) {
            this.AddHobbyAsync(idNumber, hobby, null);
        }
        
        /// <remarks/>
        public void AddHobbyAsync(string idNumber, string hobby, object userState) {
            if ((this.AddHobbyOperationCompleted == null)) {
                this.AddHobbyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddHobbyOperationCompleted);
            }
            this.InvokeAsync("AddHobby", new object[] {
                        idNumber,
                        hobby}, this.AddHobbyOperationCompleted, userState);
        }
        
        private void OnAddHobbyOperationCompleted(object arg) {
            if ((this.AddHobbyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddHobbyCompleted(this, new AddHobbyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:UpdateGeneralDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="UpdateGeneralDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string UpdateGeneralDetails(
                    string idNumber, 
                    string firstName, 
                    string middleName, 
                    string lastName, 
                    string initials, 
                    string firstLanguage, 
                    bool firstLanguageRead, 
                    bool firstLanguageWrite, 
                    bool firstLanguageSpeak, 
                    string secondLanguage, 
                    bool secondLanguageRead, 
                    bool secondLanguageWrite, 
                    bool secondLanguageSpeak, 
                    string additionalLanguage, 
                    string gender, 
                    string citizenship) {
            object[] results = this.Invoke("UpdateGeneralDetails", new object[] {
                        idNumber,
                        firstName,
                        middleName,
                        lastName,
                        initials,
                        firstLanguage,
                        firstLanguageRead,
                        firstLanguageWrite,
                        firstLanguageSpeak,
                        secondLanguage,
                        secondLanguageRead,
                        secondLanguageWrite,
                        secondLanguageSpeak,
                        additionalLanguage,
                        gender,
                        citizenship});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateGeneralDetailsAsync(
                    string idNumber, 
                    string firstName, 
                    string middleName, 
                    string lastName, 
                    string initials, 
                    string firstLanguage, 
                    bool firstLanguageRead, 
                    bool firstLanguageWrite, 
                    bool firstLanguageSpeak, 
                    string secondLanguage, 
                    bool secondLanguageRead, 
                    bool secondLanguageWrite, 
                    bool secondLanguageSpeak, 
                    string additionalLanguage, 
                    string gender, 
                    string citizenship) {
            this.UpdateGeneralDetailsAsync(idNumber, firstName, middleName, lastName, initials, firstLanguage, firstLanguageRead, firstLanguageWrite, firstLanguageSpeak, secondLanguage, secondLanguageRead, secondLanguageWrite, secondLanguageSpeak, additionalLanguage, gender, citizenship, null);
        }
        
        /// <remarks/>
        public void UpdateGeneralDetailsAsync(
                    string idNumber, 
                    string firstName, 
                    string middleName, 
                    string lastName, 
                    string initials, 
                    string firstLanguage, 
                    bool firstLanguageRead, 
                    bool firstLanguageWrite, 
                    bool firstLanguageSpeak, 
                    string secondLanguage, 
                    bool secondLanguageRead, 
                    bool secondLanguageWrite, 
                    bool secondLanguageSpeak, 
                    string additionalLanguage, 
                    string gender, 
                    string citizenship, 
                    object userState) {
            if ((this.UpdateGeneralDetailsOperationCompleted == null)) {
                this.UpdateGeneralDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateGeneralDetailsOperationCompleted);
            }
            this.InvokeAsync("UpdateGeneralDetails", new object[] {
                        idNumber,
                        firstName,
                        middleName,
                        lastName,
                        initials,
                        firstLanguage,
                        firstLanguageRead,
                        firstLanguageWrite,
                        firstLanguageSpeak,
                        secondLanguage,
                        secondLanguageRead,
                        secondLanguageWrite,
                        secondLanguageSpeak,
                        additionalLanguage,
                        gender,
                        citizenship}, this.UpdateGeneralDetailsOperationCompleted, userState);
        }
        
        private void OnUpdateGeneralDetailsOperationCompleted(object arg) {
            if ((this.UpdateGeneralDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateGeneralDetailsCompleted(this, new UpdateGeneralDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:UpdatePersonalDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="UpdatePersonalDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string UpdatePersonalDetails(string idNumber, string maritalStatus, string ethnicOrigin, string disabled, bool healthAssessment, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime healthAssessmentDate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateOfBirth) {
            object[] results = this.Invoke("UpdatePersonalDetails", new object[] {
                        idNumber,
                        maritalStatus,
                        ethnicOrigin,
                        disabled,
                        healthAssessment,
                        healthAssessmentDate,
                        dateOfBirth});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdatePersonalDetailsAsync(string idNumber, string maritalStatus, string ethnicOrigin, string disabled, bool healthAssessment, System.DateTime healthAssessmentDate, System.DateTime dateOfBirth) {
            this.UpdatePersonalDetailsAsync(idNumber, maritalStatus, ethnicOrigin, disabled, healthAssessment, healthAssessmentDate, dateOfBirth, null);
        }
        
        /// <remarks/>
        public void UpdatePersonalDetailsAsync(string idNumber, string maritalStatus, string ethnicOrigin, string disabled, bool healthAssessment, System.DateTime healthAssessmentDate, System.DateTime dateOfBirth, object userState) {
            if ((this.UpdatePersonalDetailsOperationCompleted == null)) {
                this.UpdatePersonalDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePersonalDetailsOperationCompleted);
            }
            this.InvokeAsync("UpdatePersonalDetails", new object[] {
                        idNumber,
                        maritalStatus,
                        ethnicOrigin,
                        disabled,
                        healthAssessment,
                        healthAssessmentDate,
                        dateOfBirth}, this.UpdatePersonalDetailsOperationCompleted, userState);
        }
        
        private void OnUpdatePersonalDetailsOperationCompleted(object arg) {
            if ((this.UpdatePersonalDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatePersonalDetailsCompleted(this, new UpdatePersonalDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:UpdateCommunicationDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="UpdateCommunicationDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string UpdateCommunicationDetails(string idNumber, string homePhoneNumber, string postalAddress, string postalAddress2, string postalAddress3, string residentialAddress, string residentialAddress2, string residentialAddress3, string cellPhoneNumber, string workPhoneNumber, string extension, string fax, string postCode, string postCode2) {
            object[] results = this.Invoke("UpdateCommunicationDetails", new object[] {
                        idNumber,
                        homePhoneNumber,
                        postalAddress,
                        postalAddress2,
                        postalAddress3,
                        residentialAddress,
                        residentialAddress2,
                        residentialAddress3,
                        cellPhoneNumber,
                        workPhoneNumber,
                        extension,
                        fax,
                        postCode,
                        postCode2});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateCommunicationDetailsAsync(string idNumber, string homePhoneNumber, string postalAddress, string postalAddress2, string postalAddress3, string residentialAddress, string residentialAddress2, string residentialAddress3, string cellPhoneNumber, string workPhoneNumber, string extension, string fax, string postCode, string postCode2) {
            this.UpdateCommunicationDetailsAsync(idNumber, homePhoneNumber, postalAddress, postalAddress2, postalAddress3, residentialAddress, residentialAddress2, residentialAddress3, cellPhoneNumber, workPhoneNumber, extension, fax, postCode, postCode2, null);
        }
        
        /// <remarks/>
        public void UpdateCommunicationDetailsAsync(string idNumber, string homePhoneNumber, string postalAddress, string postalAddress2, string postalAddress3, string residentialAddress, string residentialAddress2, string residentialAddress3, string cellPhoneNumber, string workPhoneNumber, string extension, string fax, string postCode, string postCode2, object userState) {
            if ((this.UpdateCommunicationDetailsOperationCompleted == null)) {
                this.UpdateCommunicationDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateCommunicationDetailsOperationCompleted);
            }
            this.InvokeAsync("UpdateCommunicationDetails", new object[] {
                        idNumber,
                        homePhoneNumber,
                        postalAddress,
                        postalAddress2,
                        postalAddress3,
                        residentialAddress,
                        residentialAddress2,
                        residentialAddress3,
                        cellPhoneNumber,
                        workPhoneNumber,
                        extension,
                        fax,
                        postCode,
                        postCode2}, this.UpdateCommunicationDetailsOperationCompleted, userState);
        }
        
        private void OnUpdateCommunicationDetailsOperationCompleted(object arg) {
            if ((this.UpdateCommunicationDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCommunicationDetailsCompleted(this, new UpdateCommunicationDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddReferee", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddReferee_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddReferee(string idNumber, string refName, string refDesignation, string refInstitution, string refAddress, string refTelephone, string refEmail) {
            object[] results = this.Invoke("AddReferee", new object[] {
                        idNumber,
                        refName,
                        refDesignation,
                        refInstitution,
                        refAddress,
                        refTelephone,
                        refEmail});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddRefereeAsync(string idNumber, string refName, string refDesignation, string refInstitution, string refAddress, string refTelephone, string refEmail) {
            this.AddRefereeAsync(idNumber, refName, refDesignation, refInstitution, refAddress, refTelephone, refEmail, null);
        }
        
        /// <remarks/>
        public void AddRefereeAsync(string idNumber, string refName, string refDesignation, string refInstitution, string refAddress, string refTelephone, string refEmail, object userState) {
            if ((this.AddRefereeOperationCompleted == null)) {
                this.AddRefereeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddRefereeOperationCompleted);
            }
            this.InvokeAsync("AddReferee", new object[] {
                        idNumber,
                        refName,
                        refDesignation,
                        refInstitution,
                        refAddress,
                        refTelephone,
                        refEmail}, this.AddRefereeOperationCompleted, userState);
        }
        
        private void OnAddRefereeOperationCompleted(object arg) {
            if ((this.AddRefereeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddRefereeCompleted(this, new AddRefereeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddQualification", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddQualification_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddQualification(string idNumber, string qualificationType, string qualificationCode, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime qualificationFrom, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime qualificationTo, string institution) {
            object[] results = this.Invoke("AddQualification", new object[] {
                        idNumber,
                        qualificationType,
                        qualificationCode,
                        qualificationFrom,
                        qualificationTo,
                        institution});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddQualificationAsync(string idNumber, string qualificationType, string qualificationCode, System.DateTime qualificationFrom, System.DateTime qualificationTo, string institution) {
            this.AddQualificationAsync(idNumber, qualificationType, qualificationCode, qualificationFrom, qualificationTo, institution, null);
        }
        
        /// <remarks/>
        public void AddQualificationAsync(string idNumber, string qualificationType, string qualificationCode, System.DateTime qualificationFrom, System.DateTime qualificationTo, string institution, object userState) {
            if ((this.AddQualificationOperationCompleted == null)) {
                this.AddQualificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddQualificationOperationCompleted);
            }
            this.InvokeAsync("AddQualification", new object[] {
                        idNumber,
                        qualificationType,
                        qualificationCode,
                        qualificationFrom,
                        qualificationTo,
                        institution}, this.AddQualificationOperationCompleted, userState);
        }
        
        private void OnAddQualificationOperationCompleted(object arg) {
            if ((this.AddQualificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddQualificationCompleted(this, new AddQualificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:Apply", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="Apply_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string Apply(string idNumber, string jobId) {
            object[] results = this.Invoke("Apply", new object[] {
                        idNumber,
                        jobId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ApplyAsync(string idNumber, string jobId) {
            this.ApplyAsync(idNumber, jobId, null);
        }
        
        /// <remarks/>
        public void ApplyAsync(string idNumber, string jobId, object userState) {
            if ((this.ApplyOperationCompleted == null)) {
                this.ApplyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApplyOperationCompleted);
            }
            this.InvokeAsync("Apply", new object[] {
                        idNumber,
                        jobId}, this.ApplyOperationCompleted, userState);
        }
        
        private void OnApplyOperationCompleted(object arg) {
            if ((this.ApplyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApplyCompleted(this, new ApplyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:ImprestGeneralDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="ImprestGeneralDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ImprestGeneralDetails(string employeeNo, string imprestNo, string subject, string objective, string destinationNarration, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime travelDate, decimal numberOfDays, string job, string jobTaskNo, string fundCode) {
            object[] results = this.Invoke("ImprestGeneralDetails", new object[] {
                        employeeNo,
                        imprestNo,
                        subject,
                        objective,
                        destinationNarration,
                        travelDate,
                        numberOfDays,
                        job,
                        jobTaskNo,
                        fundCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ImprestGeneralDetailsAsync(string employeeNo, string imprestNo, string subject, string objective, string destinationNarration, System.DateTime travelDate, decimal numberOfDays, string job, string jobTaskNo, string fundCode) {
            this.ImprestGeneralDetailsAsync(employeeNo, imprestNo, subject, objective, destinationNarration, travelDate, numberOfDays, job, jobTaskNo, fundCode, null);
        }
        
        /// <remarks/>
        public void ImprestGeneralDetailsAsync(string employeeNo, string imprestNo, string subject, string objective, string destinationNarration, System.DateTime travelDate, decimal numberOfDays, string job, string jobTaskNo, string fundCode, object userState) {
            if ((this.ImprestGeneralDetailsOperationCompleted == null)) {
                this.ImprestGeneralDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnImprestGeneralDetailsOperationCompleted);
            }
            this.InvokeAsync("ImprestGeneralDetails", new object[] {
                        employeeNo,
                        imprestNo,
                        subject,
                        objective,
                        destinationNarration,
                        travelDate,
                        numberOfDays,
                        job,
                        jobTaskNo,
                        fundCode}, this.ImprestGeneralDetailsOperationCompleted, userState);
        }
        
        private void OnImprestGeneralDetailsOperationCompleted(object arg) {
            if ((this.ImprestGeneralDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ImprestGeneralDetailsCompleted(this, new ImprestGeneralDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:GetImprestObjective", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="GetImprestObjective_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetImprestObjective(string imprestNo, string employeeNo) {
            object[] results = this.Invoke("GetImprestObjective", new object[] {
                        imprestNo,
                        employeeNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetImprestObjectiveAsync(string imprestNo, string employeeNo) {
            this.GetImprestObjectiveAsync(imprestNo, employeeNo, null);
        }
        
        /// <remarks/>
        public void GetImprestObjectiveAsync(string imprestNo, string employeeNo, object userState) {
            if ((this.GetImprestObjectiveOperationCompleted == null)) {
                this.GetImprestObjectiveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetImprestObjectiveOperationCompleted);
            }
            this.InvokeAsync("GetImprestObjective", new object[] {
                        imprestNo,
                        employeeNo}, this.GetImprestObjectiveOperationCompleted, userState);
        }
        
        private void OnGetImprestObjectiveOperationCompleted(object arg) {
            if ((this.GetImprestObjectiveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetImprestObjectiveCompleted(this, new GetImprestObjectiveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddTeamMember", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddTeamMember_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddTeamMember(string employeeNo, string imprestNo, string destinationTown, string voteItem, string teamMember, decimal noOfDays) {
            object[] results = this.Invoke("AddTeamMember", new object[] {
                        employeeNo,
                        imprestNo,
                        destinationTown,
                        voteItem,
                        teamMember,
                        noOfDays});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddTeamMemberAsync(string employeeNo, string imprestNo, string destinationTown, string voteItem, string teamMember, decimal noOfDays) {
            this.AddTeamMemberAsync(employeeNo, imprestNo, destinationTown, voteItem, teamMember, noOfDays, null);
        }
        
        /// <remarks/>
        public void AddTeamMemberAsync(string employeeNo, string imprestNo, string destinationTown, string voteItem, string teamMember, decimal noOfDays, object userState) {
            if ((this.AddTeamMemberOperationCompleted == null)) {
                this.AddTeamMemberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddTeamMemberOperationCompleted);
            }
            this.InvokeAsync("AddTeamMember", new object[] {
                        employeeNo,
                        imprestNo,
                        destinationTown,
                        voteItem,
                        teamMember,
                        noOfDays}, this.AddTeamMemberOperationCompleted, userState);
        }
        
        private void OnAddTeamMemberOperationCompleted(object arg) {
            if ((this.AddTeamMemberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddTeamMemberCompleted(this, new AddTeamMemberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddFuel", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddFuel_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddFuel(string employeeNo, string imprestNo, string workType, string resource, decimal mileage) {
            object[] results = this.Invoke("AddFuel", new object[] {
                        employeeNo,
                        imprestNo,
                        workType,
                        resource,
                        mileage});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddFuelAsync(string employeeNo, string imprestNo, string workType, string resource, decimal mileage) {
            this.AddFuelAsync(employeeNo, imprestNo, workType, resource, mileage, null);
        }
        
        /// <remarks/>
        public void AddFuelAsync(string employeeNo, string imprestNo, string workType, string resource, decimal mileage, object userState) {
            if ((this.AddFuelOperationCompleted == null)) {
                this.AddFuelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddFuelOperationCompleted);
            }
            this.InvokeAsync("AddFuel", new object[] {
                        employeeNo,
                        imprestNo,
                        workType,
                        resource,
                        mileage}, this.AddFuelOperationCompleted, userState);
        }
        
        private void OnAddFuelOperationCompleted(object arg) {
            if ((this.AddFuelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddFuelCompleted(this, new AddFuelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddCasuals", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddCasuals_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddCasuals(string employeeNo, string imprestNo, int type, string resource, string workType, decimal noRequired, decimal noOfDays) {
            object[] results = this.Invoke("AddCasuals", new object[] {
                        employeeNo,
                        imprestNo,
                        type,
                        resource,
                        workType,
                        noRequired,
                        noOfDays});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddCasualsAsync(string employeeNo, string imprestNo, int type, string resource, string workType, decimal noRequired, decimal noOfDays) {
            this.AddCasualsAsync(employeeNo, imprestNo, type, resource, workType, noRequired, noOfDays, null);
        }
        
        /// <remarks/>
        public void AddCasualsAsync(string employeeNo, string imprestNo, int type, string resource, string workType, decimal noRequired, decimal noOfDays, object userState) {
            if ((this.AddCasualsOperationCompleted == null)) {
                this.AddCasualsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddCasualsOperationCompleted);
            }
            this.InvokeAsync("AddCasuals", new object[] {
                        employeeNo,
                        imprestNo,
                        type,
                        resource,
                        workType,
                        noRequired,
                        noOfDays}, this.AddCasualsOperationCompleted, userState);
        }
        
        private void OnAddCasualsOperationCompleted(object arg) {
            if ((this.AddCasualsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddCasualsCompleted(this, new AddCasualsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddOtherCosts", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddOtherCosts_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddOtherCosts(string employeeNo, string imprestNo, string voteItem, string requiredFor, decimal quantityRequired, decimal noOfDays, decimal unitCost) {
            object[] results = this.Invoke("AddOtherCosts", new object[] {
                        employeeNo,
                        imprestNo,
                        voteItem,
                        requiredFor,
                        quantityRequired,
                        noOfDays,
                        unitCost});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddOtherCostsAsync(string employeeNo, string imprestNo, string voteItem, string requiredFor, decimal quantityRequired, decimal noOfDays, decimal unitCost) {
            this.AddOtherCostsAsync(employeeNo, imprestNo, voteItem, requiredFor, quantityRequired, noOfDays, unitCost, null);
        }
        
        /// <remarks/>
        public void AddOtherCostsAsync(string employeeNo, string imprestNo, string voteItem, string requiredFor, decimal quantityRequired, decimal noOfDays, decimal unitCost, object userState) {
            if ((this.AddOtherCostsOperationCompleted == null)) {
                this.AddOtherCostsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddOtherCostsOperationCompleted);
            }
            this.InvokeAsync("AddOtherCosts", new object[] {
                        employeeNo,
                        imprestNo,
                        voteItem,
                        requiredFor,
                        quantityRequired,
                        noOfDays,
                        unitCost}, this.AddOtherCostsOperationCompleted, userState);
        }
        
        private void OnAddOtherCostsOperationCompleted(object arg) {
            if ((this.AddOtherCostsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddOtherCostsCompleted(this, new AddOtherCostsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:SendImprestMemoApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="SendImprestMemoApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string SendImprestMemoApproval(string employeeNo, string imprestNo) {
            object[] results = this.Invoke("SendImprestMemoApproval", new object[] {
                        employeeNo,
                        imprestNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendImprestMemoApprovalAsync(string employeeNo, string imprestNo) {
            this.SendImprestMemoApprovalAsync(employeeNo, imprestNo, null);
        }
        
        /// <remarks/>
        public void SendImprestMemoApprovalAsync(string employeeNo, string imprestNo, object userState) {
            if ((this.SendImprestMemoApprovalOperationCompleted == null)) {
                this.SendImprestMemoApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendImprestMemoApprovalOperationCompleted);
            }
            this.InvokeAsync("SendImprestMemoApproval", new object[] {
                        employeeNo,
                        imprestNo}, this.SendImprestMemoApprovalOperationCompleted, userState);
        }
        
        private void OnSendImprestMemoApprovalOperationCompleted(object arg) {
            if ((this.SendImprestMemoApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendImprestMemoApprovalCompleted(this, new SendImprestMemoApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:CreateImprestSurrender", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="CreateImprestSurrender_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateImprestSurrender(string employeeNo, string imprestNo, string surrenderNo) {
            object[] results = this.Invoke("CreateImprestSurrender", new object[] {
                        employeeNo,
                        imprestNo,
                        surrenderNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateImprestSurrenderAsync(string employeeNo, string imprestNo, string surrenderNo) {
            this.CreateImprestSurrenderAsync(employeeNo, imprestNo, surrenderNo, null);
        }
        
        /// <remarks/>
        public void CreateImprestSurrenderAsync(string employeeNo, string imprestNo, string surrenderNo, object userState) {
            if ((this.CreateImprestSurrenderOperationCompleted == null)) {
                this.CreateImprestSurrenderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateImprestSurrenderOperationCompleted);
            }
            this.InvokeAsync("CreateImprestSurrender", new object[] {
                        employeeNo,
                        imprestNo,
                        surrenderNo}, this.CreateImprestSurrenderOperationCompleted, userState);
        }
        
        private void OnCreateImprestSurrenderOperationCompleted(object arg) {
            if ((this.CreateImprestSurrenderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateImprestSurrenderCompleted(this, new CreateImprestSurrenderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:SendImprestSurrenderApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="SendImprestSurrenderApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string SendImprestSurrenderApproval(string employeeNo, string imprestSurrenderNo) {
            object[] results = this.Invoke("SendImprestSurrenderApproval", new object[] {
                        employeeNo,
                        imprestSurrenderNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendImprestSurrenderApprovalAsync(string employeeNo, string imprestSurrenderNo) {
            this.SendImprestSurrenderApprovalAsync(employeeNo, imprestSurrenderNo, null);
        }
        
        /// <remarks/>
        public void SendImprestSurrenderApprovalAsync(string employeeNo, string imprestSurrenderNo, object userState) {
            if ((this.SendImprestSurrenderApprovalOperationCompleted == null)) {
                this.SendImprestSurrenderApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendImprestSurrenderApprovalOperationCompleted);
            }
            this.InvokeAsync("SendImprestSurrenderApproval", new object[] {
                        employeeNo,
                        imprestSurrenderNo}, this.SendImprestSurrenderApprovalOperationCompleted, userState);
        }
        
        private void OnSendImprestSurrenderApprovalOperationCompleted(object arg) {
            if ((this.SendImprestSurrenderApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendImprestSurrenderApprovalCompleted(this, new SendImprestSurrenderApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:UpdateSurrenderLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="UpdateSurrenderLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string UpdateSurrenderLine(string employeeNo, string imprestSurrenderNo, int lineNo, decimal amountSpent, string receipt) {
            object[] results = this.Invoke("UpdateSurrenderLine", new object[] {
                        employeeNo,
                        imprestSurrenderNo,
                        lineNo,
                        amountSpent,
                        receipt});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateSurrenderLineAsync(string employeeNo, string imprestSurrenderNo, int lineNo, decimal amountSpent, string receipt) {
            this.UpdateSurrenderLineAsync(employeeNo, imprestSurrenderNo, lineNo, amountSpent, receipt, null);
        }
        
        /// <remarks/>
        public void UpdateSurrenderLineAsync(string employeeNo, string imprestSurrenderNo, int lineNo, decimal amountSpent, string receipt, object userState) {
            if ((this.UpdateSurrenderLineOperationCompleted == null)) {
                this.UpdateSurrenderLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateSurrenderLineOperationCompleted);
            }
            this.InvokeAsync("UpdateSurrenderLine", new object[] {
                        employeeNo,
                        imprestSurrenderNo,
                        lineNo,
                        amountSpent,
                        receipt}, this.UpdateSurrenderLineOperationCompleted, userState);
        }
        
        private void OnUpdateSurrenderLineOperationCompleted(object arg) {
            if ((this.UpdateSurrenderLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateSurrenderLineCompleted(this, new UpdateSurrenderLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:CreatePurchaseRequisition", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="CreatePurchaseRequisition_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreatePurchaseRequisition(string employeeNo, string requisitionNo, string location, string description, int priorityLevel, int requisitionProductGroup, string constituency, string planId, int planEntryNo, string job, string jobTaskNo, int reqType) {
            object[] results = this.Invoke("CreatePurchaseRequisition", new object[] {
                        employeeNo,
                        requisitionNo,
                        location,
                        description,
                        priorityLevel,
                        requisitionProductGroup,
                        constituency,
                        planId,
                        planEntryNo,
                        job,
                        jobTaskNo,
                        reqType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreatePurchaseRequisitionAsync(string employeeNo, string requisitionNo, string location, string description, int priorityLevel, int requisitionProductGroup, string constituency, string planId, int planEntryNo, string job, string jobTaskNo, int reqType) {
            this.CreatePurchaseRequisitionAsync(employeeNo, requisitionNo, location, description, priorityLevel, requisitionProductGroup, constituency, planId, planEntryNo, job, jobTaskNo, reqType, null);
        }
        
        /// <remarks/>
        public void CreatePurchaseRequisitionAsync(string employeeNo, string requisitionNo, string location, string description, int priorityLevel, int requisitionProductGroup, string constituency, string planId, int planEntryNo, string job, string jobTaskNo, int reqType, object userState) {
            if ((this.CreatePurchaseRequisitionOperationCompleted == null)) {
                this.CreatePurchaseRequisitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreatePurchaseRequisitionOperationCompleted);
            }
            this.InvokeAsync("CreatePurchaseRequisition", new object[] {
                        employeeNo,
                        requisitionNo,
                        location,
                        description,
                        priorityLevel,
                        requisitionProductGroup,
                        constituency,
                        planId,
                        planEntryNo,
                        job,
                        jobTaskNo,
                        reqType}, this.CreatePurchaseRequisitionOperationCompleted, userState);
        }
        
        private void OnCreatePurchaseRequisitionOperationCompleted(object arg) {
            if ((this.CreatePurchaseRequisitionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreatePurchaseRequisitionCompleted(this, new CreatePurchaseRequisitionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:CreatePurchaseStoreRequisition", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="CreatePurchaseStoreRequisition_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreatePurchaseStoreRequisition(string employeeNo, string requisitionNo, string location, string description, int type, string fundCode, string jobNo, string jobTask) {
            object[] results = this.Invoke("CreatePurchaseStoreRequisition", new object[] {
                        employeeNo,
                        requisitionNo,
                        location,
                        description,
                        type,
                        fundCode,
                        jobNo,
                        jobTask});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreatePurchaseStoreRequisitionAsync(string employeeNo, string requisitionNo, string location, string description, int type, string fundCode, string jobNo, string jobTask) {
            this.CreatePurchaseStoreRequisitionAsync(employeeNo, requisitionNo, location, description, type, fundCode, jobNo, jobTask, null);
        }
        
        /// <remarks/>
        public void CreatePurchaseStoreRequisitionAsync(string employeeNo, string requisitionNo, string location, string description, int type, string fundCode, string jobNo, string jobTask, object userState) {
            if ((this.CreatePurchaseStoreRequisitionOperationCompleted == null)) {
                this.CreatePurchaseStoreRequisitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreatePurchaseStoreRequisitionOperationCompleted);
            }
            this.InvokeAsync("CreatePurchaseStoreRequisition", new object[] {
                        employeeNo,
                        requisitionNo,
                        location,
                        description,
                        type,
                        fundCode,
                        jobNo,
                        jobTask}, this.CreatePurchaseStoreRequisitionOperationCompleted, userState);
        }
        
        private void OnCreatePurchaseStoreRequisitionOperationCompleted(object arg) {
            if ((this.CreatePurchaseStoreRequisitionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreatePurchaseStoreRequisitionCompleted(this, new CreatePurchaseStoreRequisitionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:CreateRequisitionLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="CreateRequisitionLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateRequisitionLine(string employeeNo, string requisitionNo, string budget, string procurementPlan, string itemCategory, string item, decimal quantity, decimal directUnitCost) {
            object[] results = this.Invoke("CreateRequisitionLine", new object[] {
                        employeeNo,
                        requisitionNo,
                        budget,
                        procurementPlan,
                        itemCategory,
                        item,
                        quantity,
                        directUnitCost});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateRequisitionLineAsync(string employeeNo, string requisitionNo, string budget, string procurementPlan, string itemCategory, string item, decimal quantity, decimal directUnitCost) {
            this.CreateRequisitionLineAsync(employeeNo, requisitionNo, budget, procurementPlan, itemCategory, item, quantity, directUnitCost, null);
        }
        
        /// <remarks/>
        public void CreateRequisitionLineAsync(string employeeNo, string requisitionNo, string budget, string procurementPlan, string itemCategory, string item, decimal quantity, decimal directUnitCost, object userState) {
            if ((this.CreateRequisitionLineOperationCompleted == null)) {
                this.CreateRequisitionLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateRequisitionLineOperationCompleted);
            }
            this.InvokeAsync("CreateRequisitionLine", new object[] {
                        employeeNo,
                        requisitionNo,
                        budget,
                        procurementPlan,
                        itemCategory,
                        item,
                        quantity,
                        directUnitCost}, this.CreateRequisitionLineOperationCompleted, userState);
        }
        
        private void OnCreateRequisitionLineOperationCompleted(object arg) {
            if ((this.CreateRequisitionLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateRequisitionLineCompleted(this, new CreateRequisitionLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:SendPurchaseRequisitionApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="SendPurchaseRequisitionApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string SendPurchaseRequisitionApproval(string employeeNo, string requisitionNo) {
            object[] results = this.Invoke("SendPurchaseRequisitionApproval", new object[] {
                        employeeNo,
                        requisitionNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendPurchaseRequisitionApprovalAsync(string employeeNo, string requisitionNo) {
            this.SendPurchaseRequisitionApprovalAsync(employeeNo, requisitionNo, null);
        }
        
        /// <remarks/>
        public void SendPurchaseRequisitionApprovalAsync(string employeeNo, string requisitionNo, object userState) {
            if ((this.SendPurchaseRequisitionApprovalOperationCompleted == null)) {
                this.SendPurchaseRequisitionApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendPurchaseRequisitionApprovalOperationCompleted);
            }
            this.InvokeAsync("SendPurchaseRequisitionApproval", new object[] {
                        employeeNo,
                        requisitionNo}, this.SendPurchaseRequisitionApprovalOperationCompleted, userState);
        }
        
        private void OnSendPurchaseRequisitionApprovalOperationCompleted(object arg) {
            if ((this.SendPurchaseRequisitionApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendPurchaseRequisitionApprovalCompleted(this, new SendPurchaseRequisitionApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:CreateFleetRequisition", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="CreateFleetRequisition_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateFleetRequisition(string employeeNo, string requisitionNo, string from, string destination, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateOfTrip, System.DateTime timeOut, string journeyRoute, decimal noOfDaysRequested, string purposeOfTrip, string comments, string imprest, int travelType, decimal hourstrip, int requisitiontype) {
            object[] results = this.Invoke("CreateFleetRequisition", new object[] {
                        employeeNo,
                        requisitionNo,
                        from,
                        destination,
                        dateOfTrip,
                        timeOut,
                        journeyRoute,
                        noOfDaysRequested,
                        purposeOfTrip,
                        comments,
                        imprest,
                        travelType,
                        hourstrip,
                        requisitiontype});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateFleetRequisitionAsync(string employeeNo, string requisitionNo, string from, string destination, System.DateTime dateOfTrip, System.DateTime timeOut, string journeyRoute, decimal noOfDaysRequested, string purposeOfTrip, string comments, string imprest, int travelType, decimal hourstrip, int requisitiontype) {
            this.CreateFleetRequisitionAsync(employeeNo, requisitionNo, from, destination, dateOfTrip, timeOut, journeyRoute, noOfDaysRequested, purposeOfTrip, comments, imprest, travelType, hourstrip, requisitiontype, null);
        }
        
        /// <remarks/>
        public void CreateFleetRequisitionAsync(string employeeNo, string requisitionNo, string from, string destination, System.DateTime dateOfTrip, System.DateTime timeOut, string journeyRoute, decimal noOfDaysRequested, string purposeOfTrip, string comments, string imprest, int travelType, decimal hourstrip, int requisitiontype, object userState) {
            if ((this.CreateFleetRequisitionOperationCompleted == null)) {
                this.CreateFleetRequisitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateFleetRequisitionOperationCompleted);
            }
            this.InvokeAsync("CreateFleetRequisition", new object[] {
                        employeeNo,
                        requisitionNo,
                        from,
                        destination,
                        dateOfTrip,
                        timeOut,
                        journeyRoute,
                        noOfDaysRequested,
                        purposeOfTrip,
                        comments,
                        imprest,
                        travelType,
                        hourstrip,
                        requisitiontype}, this.CreateFleetRequisitionOperationCompleted, userState);
        }
        
        private void OnCreateFleetRequisitionOperationCompleted(object arg) {
            if ((this.CreateFleetRequisitionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateFleetRequisitionCompleted(this, new CreateFleetRequisitionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddFleetRequisitionStaff", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddFleetRequisitionStaff_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddFleetRequisitionStaff(string employeeNo, string requisitionNo, string staffNo) {
            object[] results = this.Invoke("AddFleetRequisitionStaff", new object[] {
                        employeeNo,
                        requisitionNo,
                        staffNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddFleetRequisitionStaffAsync(string employeeNo, string requisitionNo, string staffNo) {
            this.AddFleetRequisitionStaffAsync(employeeNo, requisitionNo, staffNo, null);
        }
        
        /// <remarks/>
        public void AddFleetRequisitionStaffAsync(string employeeNo, string requisitionNo, string staffNo, object userState) {
            if ((this.AddFleetRequisitionStaffOperationCompleted == null)) {
                this.AddFleetRequisitionStaffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddFleetRequisitionStaffOperationCompleted);
            }
            this.InvokeAsync("AddFleetRequisitionStaff", new object[] {
                        employeeNo,
                        requisitionNo,
                        staffNo}, this.AddFleetRequisitionStaffOperationCompleted, userState);
        }
        
        private void OnAddFleetRequisitionStaffOperationCompleted(object arg) {
            if ((this.AddFleetRequisitionStaffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddFleetRequisitionStaffCompleted(this, new AddFleetRequisitionStaffCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddFleetRequisitioNonStaff", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddFleetRequisitioNonStaff_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddFleetRequisitioNonStaff(string employeeNo, string requisitionNo, int idnumber, int phonenumber, string organizationame, string fullname) {
            object[] results = this.Invoke("AddFleetRequisitioNonStaff", new object[] {
                        employeeNo,
                        requisitionNo,
                        idnumber,
                        phonenumber,
                        organizationame,
                        fullname});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddFleetRequisitioNonStaffAsync(string employeeNo, string requisitionNo, int idnumber, int phonenumber, string organizationame, string fullname) {
            this.AddFleetRequisitioNonStaffAsync(employeeNo, requisitionNo, idnumber, phonenumber, organizationame, fullname, null);
        }
        
        /// <remarks/>
        public void AddFleetRequisitioNonStaffAsync(string employeeNo, string requisitionNo, int idnumber, int phonenumber, string organizationame, string fullname, object userState) {
            if ((this.AddFleetRequisitioNonStaffOperationCompleted == null)) {
                this.AddFleetRequisitioNonStaffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddFleetRequisitioNonStaffOperationCompleted);
            }
            this.InvokeAsync("AddFleetRequisitioNonStaff", new object[] {
                        employeeNo,
                        requisitionNo,
                        idnumber,
                        phonenumber,
                        organizationame,
                        fullname}, this.AddFleetRequisitioNonStaffOperationCompleted, userState);
        }
        
        private void OnAddFleetRequisitioNonStaffOperationCompleted(object arg) {
            if ((this.AddFleetRequisitioNonStaffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddFleetRequisitioNonStaffCompleted(this, new AddFleetRequisitioNonStaffCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddFleetRequisitioLoadItems", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddFleetRequisitioLoadItems_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddFleetRequisitioLoadItems(string employeeNo, string requisitionNo, string itemcategory, string description, decimal quantity, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime returndate, string purpose, bool returnable, string serialnumber) {
            object[] results = this.Invoke("AddFleetRequisitioLoadItems", new object[] {
                        employeeNo,
                        requisitionNo,
                        itemcategory,
                        description,
                        quantity,
                        returndate,
                        purpose,
                        returnable,
                        serialnumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddFleetRequisitioLoadItemsAsync(string employeeNo, string requisitionNo, string itemcategory, string description, decimal quantity, System.DateTime returndate, string purpose, bool returnable, string serialnumber) {
            this.AddFleetRequisitioLoadItemsAsync(employeeNo, requisitionNo, itemcategory, description, quantity, returndate, purpose, returnable, serialnumber, null);
        }
        
        /// <remarks/>
        public void AddFleetRequisitioLoadItemsAsync(string employeeNo, string requisitionNo, string itemcategory, string description, decimal quantity, System.DateTime returndate, string purpose, bool returnable, string serialnumber, object userState) {
            if ((this.AddFleetRequisitioLoadItemsOperationCompleted == null)) {
                this.AddFleetRequisitioLoadItemsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddFleetRequisitioLoadItemsOperationCompleted);
            }
            this.InvokeAsync("AddFleetRequisitioLoadItems", new object[] {
                        employeeNo,
                        requisitionNo,
                        itemcategory,
                        description,
                        quantity,
                        returndate,
                        purpose,
                        returnable,
                        serialnumber}, this.AddFleetRequisitioLoadItemsOperationCompleted, userState);
        }
        
        private void OnAddFleetRequisitioLoadItemsOperationCompleted(object arg) {
            if ((this.AddFleetRequisitioLoadItemsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddFleetRequisitioLoadItemsCompleted(this, new AddFleetRequisitioLoadItemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:SendFleetRequisitionApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="SendFleetRequisitionApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string SendFleetRequisitionApproval(string employeeNo, string requisitionNo) {
            object[] results = this.Invoke("SendFleetRequisitionApproval", new object[] {
                        employeeNo,
                        requisitionNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendFleetRequisitionApprovalAsync(string employeeNo, string requisitionNo) {
            this.SendFleetRequisitionApprovalAsync(employeeNo, requisitionNo, null);
        }
        
        /// <remarks/>
        public void SendFleetRequisitionApprovalAsync(string employeeNo, string requisitionNo, object userState) {
            if ((this.SendFleetRequisitionApprovalOperationCompleted == null)) {
                this.SendFleetRequisitionApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendFleetRequisitionApprovalOperationCompleted);
            }
            this.InvokeAsync("SendFleetRequisitionApproval", new object[] {
                        employeeNo,
                        requisitionNo}, this.SendFleetRequisitionApprovalOperationCompleted, userState);
        }
        
        private void OnSendFleetRequisitionApprovalOperationCompleted(object arg) {
            if ((this.SendFleetRequisitionApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendFleetRequisitionApprovalCompleted(this, new SendFleetRequisitionApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:RemoveStaffFromTravelRequisition" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="RemoveStaffFromTravelRequisition_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string RemoveStaffFromTravelRequisition(string employeeNo, string requisitionNo, int entryNo) {
            object[] results = this.Invoke("RemoveStaffFromTravelRequisition", new object[] {
                        employeeNo,
                        requisitionNo,
                        entryNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveStaffFromTravelRequisitionAsync(string employeeNo, string requisitionNo, int entryNo) {
            this.RemoveStaffFromTravelRequisitionAsync(employeeNo, requisitionNo, entryNo, null);
        }
        
        /// <remarks/>
        public void RemoveStaffFromTravelRequisitionAsync(string employeeNo, string requisitionNo, int entryNo, object userState) {
            if ((this.RemoveStaffFromTravelRequisitionOperationCompleted == null)) {
                this.RemoveStaffFromTravelRequisitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveStaffFromTravelRequisitionOperationCompleted);
            }
            this.InvokeAsync("RemoveStaffFromTravelRequisition", new object[] {
                        employeeNo,
                        requisitionNo,
                        entryNo}, this.RemoveStaffFromTravelRequisitionOperationCompleted, userState);
        }
        
        private void OnRemoveStaffFromTravelRequisitionOperationCompleted(object arg) {
            if ((this.RemoveStaffFromTravelRequisitionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveStaffFromTravelRequisitionCompleted(this, new RemoveStaffFromTravelRequisitionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:RemoveLoadItemsTravelRequisition" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="RemoveLoadItemsTravelRequisition_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string RemoveLoadItemsTravelRequisition(string employeeNo, string requisitionNo, int entryNo) {
            object[] results = this.Invoke("RemoveLoadItemsTravelRequisition", new object[] {
                        employeeNo,
                        requisitionNo,
                        entryNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveLoadItemsTravelRequisitionAsync(string employeeNo, string requisitionNo, int entryNo) {
            this.RemoveLoadItemsTravelRequisitionAsync(employeeNo, requisitionNo, entryNo, null);
        }
        
        /// <remarks/>
        public void RemoveLoadItemsTravelRequisitionAsync(string employeeNo, string requisitionNo, int entryNo, object userState) {
            if ((this.RemoveLoadItemsTravelRequisitionOperationCompleted == null)) {
                this.RemoveLoadItemsTravelRequisitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveLoadItemsTravelRequisitionOperationCompleted);
            }
            this.InvokeAsync("RemoveLoadItemsTravelRequisition", new object[] {
                        employeeNo,
                        requisitionNo,
                        entryNo}, this.RemoveLoadItemsTravelRequisitionOperationCompleted, userState);
        }
        
        private void OnRemoveLoadItemsTravelRequisitionOperationCompleted(object arg) {
            if ((this.RemoveLoadItemsTravelRequisitionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveLoadItemsTravelRequisitionCompleted(this, new RemoveLoadItemsTravelRequisitionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:RemoveNonStaffTravelRequisition", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="RemoveNonStaffTravelRequisition_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string RemoveNonStaffTravelRequisition(string employeeNo, string requisitionNo, int entryNo) {
            object[] results = this.Invoke("RemoveNonStaffTravelRequisition", new object[] {
                        employeeNo,
                        requisitionNo,
                        entryNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveNonStaffTravelRequisitionAsync(string employeeNo, string requisitionNo, int entryNo) {
            this.RemoveNonStaffTravelRequisitionAsync(employeeNo, requisitionNo, entryNo, null);
        }
        
        /// <remarks/>
        public void RemoveNonStaffTravelRequisitionAsync(string employeeNo, string requisitionNo, int entryNo, object userState) {
            if ((this.RemoveNonStaffTravelRequisitionOperationCompleted == null)) {
                this.RemoveNonStaffTravelRequisitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveNonStaffTravelRequisitionOperationCompleted);
            }
            this.InvokeAsync("RemoveNonStaffTravelRequisition", new object[] {
                        employeeNo,
                        requisitionNo,
                        entryNo}, this.RemoveNonStaffTravelRequisitionOperationCompleted, userState);
        }
        
        private void OnRemoveNonStaffTravelRequisitionOperationCompleted(object arg) {
            if ((this.RemoveNonStaffTravelRequisitionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveNonStaffTravelRequisitionCompleted(this, new RemoveNonStaffTravelRequisitionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:RemoveFuelDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="RemoveFuelDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string RemoveFuelDetails(string requisitionNo, int entryNo) {
            object[] results = this.Invoke("RemoveFuelDetails", new object[] {
                        requisitionNo,
                        entryNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveFuelDetailsAsync(string requisitionNo, int entryNo) {
            this.RemoveFuelDetailsAsync(requisitionNo, entryNo, null);
        }
        
        /// <remarks/>
        public void RemoveFuelDetailsAsync(string requisitionNo, int entryNo, object userState) {
            if ((this.RemoveFuelDetailsOperationCompleted == null)) {
                this.RemoveFuelDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveFuelDetailsOperationCompleted);
            }
            this.InvokeAsync("RemoveFuelDetails", new object[] {
                        requisitionNo,
                        entryNo}, this.RemoveFuelDetailsOperationCompleted, userState);
        }
        
        private void OnRemoveFuelDetailsOperationCompleted(object arg) {
            if ((this.RemoveFuelDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveFuelDetailsCompleted(this, new RemoveFuelDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:RemoveMemberFromImprestMemo", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="RemoveMemberFromImprestMemo_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string RemoveMemberFromImprestMemo(string number, string workType, string mEmployeeNo, string imprestNo) {
            object[] results = this.Invoke("RemoveMemberFromImprestMemo", new object[] {
                        number,
                        workType,
                        mEmployeeNo,
                        imprestNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveMemberFromImprestMemoAsync(string number, string workType, string mEmployeeNo, string imprestNo) {
            this.RemoveMemberFromImprestMemoAsync(number, workType, mEmployeeNo, imprestNo, null);
        }
        
        /// <remarks/>
        public void RemoveMemberFromImprestMemoAsync(string number, string workType, string mEmployeeNo, string imprestNo, object userState) {
            if ((this.RemoveMemberFromImprestMemoOperationCompleted == null)) {
                this.RemoveMemberFromImprestMemoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveMemberFromImprestMemoOperationCompleted);
            }
            this.InvokeAsync("RemoveMemberFromImprestMemo", new object[] {
                        number,
                        workType,
                        mEmployeeNo,
                        imprestNo}, this.RemoveMemberFromImprestMemoOperationCompleted, userState);
        }
        
        private void OnRemoveMemberFromImprestMemoOperationCompleted(object arg) {
            if ((this.RemoveMemberFromImprestMemoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveMemberFromImprestMemoCompleted(this, new RemoveMemberFromImprestMemoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddTripRequisitionDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddTripRequisitionDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddTripRequisitionDetails(string employeeNo, string requisitionNo, string journeydetails, int kilometers, decimal oildrawn, decimal fueldrawn, string vouchernumber, decimal opsodometer, decimal endodometer, string authrizedby) {
            object[] results = this.Invoke("AddTripRequisitionDetails", new object[] {
                        employeeNo,
                        requisitionNo,
                        journeydetails,
                        kilometers,
                        oildrawn,
                        fueldrawn,
                        vouchernumber,
                        opsodometer,
                        endodometer,
                        authrizedby});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddTripRequisitionDetailsAsync(string employeeNo, string requisitionNo, string journeydetails, int kilometers, decimal oildrawn, decimal fueldrawn, string vouchernumber, decimal opsodometer, decimal endodometer, string authrizedby) {
            this.AddTripRequisitionDetailsAsync(employeeNo, requisitionNo, journeydetails, kilometers, oildrawn, fueldrawn, vouchernumber, opsodometer, endodometer, authrizedby, null);
        }
        
        /// <remarks/>
        public void AddTripRequisitionDetailsAsync(string employeeNo, string requisitionNo, string journeydetails, int kilometers, decimal oildrawn, decimal fueldrawn, string vouchernumber, decimal opsodometer, decimal endodometer, string authrizedby, object userState) {
            if ((this.AddTripRequisitionDetailsOperationCompleted == null)) {
                this.AddTripRequisitionDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddTripRequisitionDetailsOperationCompleted);
            }
            this.InvokeAsync("AddTripRequisitionDetails", new object[] {
                        employeeNo,
                        requisitionNo,
                        journeydetails,
                        kilometers,
                        oildrawn,
                        fueldrawn,
                        vouchernumber,
                        opsodometer,
                        endodometer,
                        authrizedby}, this.AddTripRequisitionDetailsOperationCompleted, userState);
        }
        
        private void OnAddTripRequisitionDetailsOperationCompleted(object arg) {
            if ((this.AddTripRequisitionDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddTripRequisitionDetailsCompleted(this, new AddTripRequisitionDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddTripAccidentDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddTripAccidentDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddTripAccidentDetails(string employeeNo, string requisitionNo, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime accidentdate, string accidentdetails, string policeabstract, string remarks) {
            object[] results = this.Invoke("AddTripAccidentDetails", new object[] {
                        employeeNo,
                        requisitionNo,
                        accidentdate,
                        accidentdetails,
                        policeabstract,
                        remarks});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddTripAccidentDetailsAsync(string employeeNo, string requisitionNo, System.DateTime accidentdate, string accidentdetails, string policeabstract, string remarks) {
            this.AddTripAccidentDetailsAsync(employeeNo, requisitionNo, accidentdate, accidentdetails, policeabstract, remarks, null);
        }
        
        /// <remarks/>
        public void AddTripAccidentDetailsAsync(string employeeNo, string requisitionNo, System.DateTime accidentdate, string accidentdetails, string policeabstract, string remarks, object userState) {
            if ((this.AddTripAccidentDetailsOperationCompleted == null)) {
                this.AddTripAccidentDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddTripAccidentDetailsOperationCompleted);
            }
            this.InvokeAsync("AddTripAccidentDetails", new object[] {
                        employeeNo,
                        requisitionNo,
                        accidentdate,
                        accidentdetails,
                        policeabstract,
                        remarks}, this.AddTripAccidentDetailsOperationCompleted, userState);
        }
        
        private void OnAddTripAccidentDetailsOperationCompleted(object arg) {
            if ((this.AddTripAccidentDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddTripAccidentDetailsCompleted(this, new AddTripAccidentDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddVehicleMaintenanceRequestDeta" +
            "ils", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddVehicleMaintenanceRequestDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddVehicleMaintenanceRequestDetails(string employeeNo, string registrationnumber, decimal odometerreading, string servicetype, string description, string fundingcode, string projectnumber, string budgetline, decimal maintenancecost, string vendornumber) {
            object[] results = this.Invoke("AddVehicleMaintenanceRequestDetails", new object[] {
                        employeeNo,
                        registrationnumber,
                        odometerreading,
                        servicetype,
                        description,
                        fundingcode,
                        projectnumber,
                        budgetline,
                        maintenancecost,
                        vendornumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddVehicleMaintenanceRequestDetailsAsync(string employeeNo, string registrationnumber, decimal odometerreading, string servicetype, string description, string fundingcode, string projectnumber, string budgetline, decimal maintenancecost, string vendornumber) {
            this.AddVehicleMaintenanceRequestDetailsAsync(employeeNo, registrationnumber, odometerreading, servicetype, description, fundingcode, projectnumber, budgetline, maintenancecost, vendornumber, null);
        }
        
        /// <remarks/>
        public void AddVehicleMaintenanceRequestDetailsAsync(string employeeNo, string registrationnumber, decimal odometerreading, string servicetype, string description, string fundingcode, string projectnumber, string budgetline, decimal maintenancecost, string vendornumber, object userState) {
            if ((this.AddVehicleMaintenanceRequestDetailsOperationCompleted == null)) {
                this.AddVehicleMaintenanceRequestDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddVehicleMaintenanceRequestDetailsOperationCompleted);
            }
            this.InvokeAsync("AddVehicleMaintenanceRequestDetails", new object[] {
                        employeeNo,
                        registrationnumber,
                        odometerreading,
                        servicetype,
                        description,
                        fundingcode,
                        projectnumber,
                        budgetline,
                        maintenancecost,
                        vendornumber}, this.AddVehicleMaintenanceRequestDetailsOperationCompleted, userState);
        }
        
        private void OnAddVehicleMaintenanceRequestDetailsOperationCompleted(object arg) {
            if ((this.AddVehicleMaintenanceRequestDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddVehicleMaintenanceRequestDetailsCompleted(this, new AddVehicleMaintenanceRequestDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:SubmitVehicleMaintenanceRequestD" +
            "etails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="SubmitVehicleMaintenanceRequestDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string SubmitVehicleMaintenanceRequestDetails(string employeeNo, string registrationnumber) {
            object[] results = this.Invoke("SubmitVehicleMaintenanceRequestDetails", new object[] {
                        employeeNo,
                        registrationnumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SubmitVehicleMaintenanceRequestDetailsAsync(string employeeNo, string registrationnumber) {
            this.SubmitVehicleMaintenanceRequestDetailsAsync(employeeNo, registrationnumber, null);
        }
        
        /// <remarks/>
        public void SubmitVehicleMaintenanceRequestDetailsAsync(string employeeNo, string registrationnumber, object userState) {
            if ((this.SubmitVehicleMaintenanceRequestDetailsOperationCompleted == null)) {
                this.SubmitVehicleMaintenanceRequestDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSubmitVehicleMaintenanceRequestDetailsOperationCompleted);
            }
            this.InvokeAsync("SubmitVehicleMaintenanceRequestDetails", new object[] {
                        employeeNo,
                        registrationnumber}, this.SubmitVehicleMaintenanceRequestDetailsOperationCompleted, userState);
        }
        
        private void OnSubmitVehicleMaintenanceRequestDetailsOperationCompleted(object arg) {
            if ((this.SubmitVehicleMaintenanceRequestDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SubmitVehicleMaintenanceRequestDetailsCompleted(this, new SubmitVehicleMaintenanceRequestDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:SubmitVehicleFuelRequestDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="SubmitVehicleFuelRequestDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string SubmitVehicleFuelRequestDetails(string employeeNo, string requisitionNumber, int expensetype, string jobnumber, string tasknumber, decimal amount) {
            object[] results = this.Invoke("SubmitVehicleFuelRequestDetails", new object[] {
                        employeeNo,
                        requisitionNumber,
                        expensetype,
                        jobnumber,
                        tasknumber,
                        amount});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SubmitVehicleFuelRequestDetailsAsync(string employeeNo, string requisitionNumber, int expensetype, string jobnumber, string tasknumber, decimal amount) {
            this.SubmitVehicleFuelRequestDetailsAsync(employeeNo, requisitionNumber, expensetype, jobnumber, tasknumber, amount, null);
        }
        
        /// <remarks/>
        public void SubmitVehicleFuelRequestDetailsAsync(string employeeNo, string requisitionNumber, int expensetype, string jobnumber, string tasknumber, decimal amount, object userState) {
            if ((this.SubmitVehicleFuelRequestDetailsOperationCompleted == null)) {
                this.SubmitVehicleFuelRequestDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSubmitVehicleFuelRequestDetailsOperationCompleted);
            }
            this.InvokeAsync("SubmitVehicleFuelRequestDetails", new object[] {
                        employeeNo,
                        requisitionNumber,
                        expensetype,
                        jobnumber,
                        tasknumber,
                        amount}, this.SubmitVehicleFuelRequestDetailsOperationCompleted, userState);
        }
        
        private void OnSubmitVehicleFuelRequestDetailsOperationCompleted(object arg) {
            if ((this.SubmitVehicleFuelRequestDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SubmitVehicleFuelRequestDetailsCompleted(this, new SubmitVehicleFuelRequestDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:SendMaintenanceRequisitionApprov" +
            "al", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="SendMaintenanceRequisitionApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string SendMaintenanceRequisitionApproval(string employeeNo, string requisitionNo) {
            object[] results = this.Invoke("SendMaintenanceRequisitionApproval", new object[] {
                        employeeNo,
                        requisitionNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendMaintenanceRequisitionApprovalAsync(string employeeNo, string requisitionNo) {
            this.SendMaintenanceRequisitionApprovalAsync(employeeNo, requisitionNo, null);
        }
        
        /// <remarks/>
        public void SendMaintenanceRequisitionApprovalAsync(string employeeNo, string requisitionNo, object userState) {
            if ((this.SendMaintenanceRequisitionApprovalOperationCompleted == null)) {
                this.SendMaintenanceRequisitionApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendMaintenanceRequisitionApprovalOperationCompleted);
            }
            this.InvokeAsync("SendMaintenanceRequisitionApproval", new object[] {
                        employeeNo,
                        requisitionNo}, this.SendMaintenanceRequisitionApprovalOperationCompleted, userState);
        }
        
        private void OnSendMaintenanceRequisitionApprovalOperationCompleted(object arg) {
            if ((this.SendMaintenanceRequisitionApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendMaintenanceRequisitionApprovalCompleted(this, new SendMaintenanceRequisitionApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:DeleteTripAccidentDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="DeleteTripAccidentDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteTripAccidentDetails(string employeeNo, string requisitionNo, int etntryNumber) {
            object[] results = this.Invoke("DeleteTripAccidentDetails", new object[] {
                        employeeNo,
                        requisitionNo,
                        etntryNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteTripAccidentDetailsAsync(string employeeNo, string requisitionNo, int etntryNumber) {
            this.DeleteTripAccidentDetailsAsync(employeeNo, requisitionNo, etntryNumber, null);
        }
        
        /// <remarks/>
        public void DeleteTripAccidentDetailsAsync(string employeeNo, string requisitionNo, int etntryNumber, object userState) {
            if ((this.DeleteTripAccidentDetailsOperationCompleted == null)) {
                this.DeleteTripAccidentDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteTripAccidentDetailsOperationCompleted);
            }
            this.InvokeAsync("DeleteTripAccidentDetails", new object[] {
                        employeeNo,
                        requisitionNo,
                        etntryNumber}, this.DeleteTripAccidentDetailsOperationCompleted, userState);
        }
        
        private void OnDeleteTripAccidentDetailsOperationCompleted(object arg) {
            if ((this.DeleteTripAccidentDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteTripAccidentDetailsCompleted(this, new DeleteTripAccidentDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:EditTeamMember", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="EditTeamMember_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string EditTeamMember(string employeeNo, string imprestNo, string destinationTown, string voteItem, string teamMember, decimal noOfDays, string originalNumber, string originalWorkType) {
            object[] results = this.Invoke("EditTeamMember", new object[] {
                        employeeNo,
                        imprestNo,
                        destinationTown,
                        voteItem,
                        teamMember,
                        noOfDays,
                        originalNumber,
                        originalWorkType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditTeamMemberAsync(string employeeNo, string imprestNo, string destinationTown, string voteItem, string teamMember, decimal noOfDays, string originalNumber, string originalWorkType) {
            this.EditTeamMemberAsync(employeeNo, imprestNo, destinationTown, voteItem, teamMember, noOfDays, originalNumber, originalWorkType, null);
        }
        
        /// <remarks/>
        public void EditTeamMemberAsync(string employeeNo, string imprestNo, string destinationTown, string voteItem, string teamMember, decimal noOfDays, string originalNumber, string originalWorkType, object userState) {
            if ((this.EditTeamMemberOperationCompleted == null)) {
                this.EditTeamMemberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditTeamMemberOperationCompleted);
            }
            this.InvokeAsync("EditTeamMember", new object[] {
                        employeeNo,
                        imprestNo,
                        destinationTown,
                        voteItem,
                        teamMember,
                        noOfDays,
                        originalNumber,
                        originalWorkType}, this.EditTeamMemberOperationCompleted, userState);
        }
        
        private void OnEditTeamMemberOperationCompleted(object arg) {
            if ((this.EditTeamMemberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditTeamMemberCompleted(this, new EditTeamMemberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:RemoveFuelFromImprestMemo", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="RemoveFuelFromImprestMemo_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string RemoveFuelFromImprestMemo(string imprestNo, int entryNumber) {
            object[] results = this.Invoke("RemoveFuelFromImprestMemo", new object[] {
                        imprestNo,
                        entryNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveFuelFromImprestMemoAsync(string imprestNo, int entryNumber) {
            this.RemoveFuelFromImprestMemoAsync(imprestNo, entryNumber, null);
        }
        
        /// <remarks/>
        public void RemoveFuelFromImprestMemoAsync(string imprestNo, int entryNumber, object userState) {
            if ((this.RemoveFuelFromImprestMemoOperationCompleted == null)) {
                this.RemoveFuelFromImprestMemoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveFuelFromImprestMemoOperationCompleted);
            }
            this.InvokeAsync("RemoveFuelFromImprestMemo", new object[] {
                        imprestNo,
                        entryNumber}, this.RemoveFuelFromImprestMemoOperationCompleted, userState);
        }
        
        private void OnRemoveFuelFromImprestMemoOperationCompleted(object arg) {
            if ((this.RemoveFuelFromImprestMemoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveFuelFromImprestMemoCompleted(this, new RemoveFuelFromImprestMemoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:EditFuel", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="EditFuel_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string EditFuel(string employeeNo, string imprestNo, string workType, string resource, decimal mileage, string originalNo, string originalWorkType) {
            object[] results = this.Invoke("EditFuel", new object[] {
                        employeeNo,
                        imprestNo,
                        workType,
                        resource,
                        mileage,
                        originalNo,
                        originalWorkType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditFuelAsync(string employeeNo, string imprestNo, string workType, string resource, decimal mileage, string originalNo, string originalWorkType) {
            this.EditFuelAsync(employeeNo, imprestNo, workType, resource, mileage, originalNo, originalWorkType, null);
        }
        
        /// <remarks/>
        public void EditFuelAsync(string employeeNo, string imprestNo, string workType, string resource, decimal mileage, string originalNo, string originalWorkType, object userState) {
            if ((this.EditFuelOperationCompleted == null)) {
                this.EditFuelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditFuelOperationCompleted);
            }
            this.InvokeAsync("EditFuel", new object[] {
                        employeeNo,
                        imprestNo,
                        workType,
                        resource,
                        mileage,
                        originalNo,
                        originalWorkType}, this.EditFuelOperationCompleted, userState);
        }
        
        private void OnEditFuelOperationCompleted(object arg) {
            if ((this.EditFuelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditFuelCompleted(this, new EditFuelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:RemoveCasuals", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="RemoveCasuals_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string RemoveCasuals(string employeeNo, string imprestNo, string resourceType, string resourceNo) {
            object[] results = this.Invoke("RemoveCasuals", new object[] {
                        employeeNo,
                        imprestNo,
                        resourceType,
                        resourceNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveCasualsAsync(string employeeNo, string imprestNo, string resourceType, string resourceNo) {
            this.RemoveCasualsAsync(employeeNo, imprestNo, resourceType, resourceNo, null);
        }
        
        /// <remarks/>
        public void RemoveCasualsAsync(string employeeNo, string imprestNo, string resourceType, string resourceNo, object userState) {
            if ((this.RemoveCasualsOperationCompleted == null)) {
                this.RemoveCasualsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveCasualsOperationCompleted);
            }
            this.InvokeAsync("RemoveCasuals", new object[] {
                        employeeNo,
                        imprestNo,
                        resourceType,
                        resourceNo}, this.RemoveCasualsOperationCompleted, userState);
        }
        
        private void OnRemoveCasualsOperationCompleted(object arg) {
            if ((this.RemoveCasualsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveCasualsCompleted(this, new RemoveCasualsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:EditCasuals", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="EditCasuals_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string EditCasuals(string employeeNo, string imprestNo, int type, string resource, string workType, decimal noRequired, decimal noOfDays, string originalResourceType, string originalResourceNo) {
            object[] results = this.Invoke("EditCasuals", new object[] {
                        employeeNo,
                        imprestNo,
                        type,
                        resource,
                        workType,
                        noRequired,
                        noOfDays,
                        originalResourceType,
                        originalResourceNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditCasualsAsync(string employeeNo, string imprestNo, int type, string resource, string workType, decimal noRequired, decimal noOfDays, string originalResourceType, string originalResourceNo) {
            this.EditCasualsAsync(employeeNo, imprestNo, type, resource, workType, noRequired, noOfDays, originalResourceType, originalResourceNo, null);
        }
        
        /// <remarks/>
        public void EditCasualsAsync(string employeeNo, string imprestNo, int type, string resource, string workType, decimal noRequired, decimal noOfDays, string originalResourceType, string originalResourceNo, object userState) {
            if ((this.EditCasualsOperationCompleted == null)) {
                this.EditCasualsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditCasualsOperationCompleted);
            }
            this.InvokeAsync("EditCasuals", new object[] {
                        employeeNo,
                        imprestNo,
                        type,
                        resource,
                        workType,
                        noRequired,
                        noOfDays,
                        originalResourceType,
                        originalResourceNo}, this.EditCasualsOperationCompleted, userState);
        }
        
        private void OnEditCasualsOperationCompleted(object arg) {
            if ((this.EditCasualsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditCasualsCompleted(this, new EditCasualsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:RemoveOtherCosts", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="RemoveOtherCosts_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string RemoveOtherCosts(string imprestNo, string employeeNo, int lineNo) {
            object[] results = this.Invoke("RemoveOtherCosts", new object[] {
                        imprestNo,
                        employeeNo,
                        lineNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveOtherCostsAsync(string imprestNo, string employeeNo, int lineNo) {
            this.RemoveOtherCostsAsync(imprestNo, employeeNo, lineNo, null);
        }
        
        /// <remarks/>
        public void RemoveOtherCostsAsync(string imprestNo, string employeeNo, int lineNo, object userState) {
            if ((this.RemoveOtherCostsOperationCompleted == null)) {
                this.RemoveOtherCostsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveOtherCostsOperationCompleted);
            }
            this.InvokeAsync("RemoveOtherCosts", new object[] {
                        imprestNo,
                        employeeNo,
                        lineNo}, this.RemoveOtherCostsOperationCompleted, userState);
        }
        
        private void OnRemoveOtherCostsOperationCompleted(object arg) {
            if ((this.RemoveOtherCostsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveOtherCostsCompleted(this, new RemoveOtherCostsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:EditOtherCosts", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="EditOtherCosts_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string EditOtherCosts(string employeeNo, string imprestNo, string voteItem, string requiredFor, decimal quantityRequired, decimal noOfDays, decimal unitCost, int originalLineNo) {
            object[] results = this.Invoke("EditOtherCosts", new object[] {
                        employeeNo,
                        imprestNo,
                        voteItem,
                        requiredFor,
                        quantityRequired,
                        noOfDays,
                        unitCost,
                        originalLineNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditOtherCostsAsync(string employeeNo, string imprestNo, string voteItem, string requiredFor, decimal quantityRequired, decimal noOfDays, decimal unitCost, int originalLineNo) {
            this.EditOtherCostsAsync(employeeNo, imprestNo, voteItem, requiredFor, quantityRequired, noOfDays, unitCost, originalLineNo, null);
        }
        
        /// <remarks/>
        public void EditOtherCostsAsync(string employeeNo, string imprestNo, string voteItem, string requiredFor, decimal quantityRequired, decimal noOfDays, decimal unitCost, int originalLineNo, object userState) {
            if ((this.EditOtherCostsOperationCompleted == null)) {
                this.EditOtherCostsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditOtherCostsOperationCompleted);
            }
            this.InvokeAsync("EditOtherCosts", new object[] {
                        employeeNo,
                        imprestNo,
                        voteItem,
                        requiredFor,
                        quantityRequired,
                        noOfDays,
                        unitCost,
                        originalLineNo}, this.EditOtherCostsOperationCompleted, userState);
        }
        
        private void OnEditOtherCostsOperationCompleted(object arg) {
            if ((this.EditOtherCostsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditOtherCostsCompleted(this, new EditOtherCostsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:GenerateLeaveForm", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="GenerateLeaveForm_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GenerateLeaveForm(string employeeNo, string leaveNo) {
            object[] results = this.Invoke("GenerateLeaveForm", new object[] {
                        employeeNo,
                        leaveNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GenerateLeaveFormAsync(string employeeNo, string leaveNo) {
            this.GenerateLeaveFormAsync(employeeNo, leaveNo, null);
        }
        
        /// <remarks/>
        public void GenerateLeaveFormAsync(string employeeNo, string leaveNo, object userState) {
            if ((this.GenerateLeaveFormOperationCompleted == null)) {
                this.GenerateLeaveFormOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateLeaveFormOperationCompleted);
            }
            this.InvokeAsync("GenerateLeaveForm", new object[] {
                        employeeNo,
                        leaveNo}, this.GenerateLeaveFormOperationCompleted, userState);
        }
        
        private void OnGenerateLeaveFormOperationCompleted(object arg) {
            if ((this.GenerateLeaveFormCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateLeaveFormCompleted(this, new GenerateLeaveFormCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:SendRecordForApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="SendRecordForApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string SendRecordForApproval(string employeeNo, string recordNo, string recordType) {
            object[] results = this.Invoke("SendRecordForApproval", new object[] {
                        employeeNo,
                        recordNo,
                        recordType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendRecordForApprovalAsync(string employeeNo, string recordNo, string recordType) {
            this.SendRecordForApprovalAsync(employeeNo, recordNo, recordType, null);
        }
        
        /// <remarks/>
        public void SendRecordForApprovalAsync(string employeeNo, string recordNo, string recordType, object userState) {
            if ((this.SendRecordForApprovalOperationCompleted == null)) {
                this.SendRecordForApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendRecordForApprovalOperationCompleted);
            }
            this.InvokeAsync("SendRecordForApproval", new object[] {
                        employeeNo,
                        recordNo,
                        recordType}, this.SendRecordForApprovalOperationCompleted, userState);
        }
        
        private void OnSendRecordForApprovalOperationCompleted(object arg) {
            if ((this.SendRecordForApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendRecordForApprovalCompleted(this, new SendRecordForApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:CancelRecordApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="CancelRecordApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CancelRecordApproval(string employeeNo, string recordNo, string recordType) {
            object[] results = this.Invoke("CancelRecordApproval", new object[] {
                        employeeNo,
                        recordNo,
                        recordType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CancelRecordApprovalAsync(string employeeNo, string recordNo, string recordType) {
            this.CancelRecordApprovalAsync(employeeNo, recordNo, recordType, null);
        }
        
        /// <remarks/>
        public void CancelRecordApprovalAsync(string employeeNo, string recordNo, string recordType, object userState) {
            if ((this.CancelRecordApprovalOperationCompleted == null)) {
                this.CancelRecordApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelRecordApprovalOperationCompleted);
            }
            this.InvokeAsync("CancelRecordApproval", new object[] {
                        employeeNo,
                        recordNo,
                        recordType}, this.CancelRecordApprovalOperationCompleted, userState);
        }
        
        private void OnCancelRecordApprovalOperationCompleted(object arg) {
            if ((this.CancelRecordApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelRecordApprovalCompleted(this, new CancelRecordApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:ChangePassword", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="ChangePassword_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ChangePassword(string employeeNo, string currentPassword, string newPassword, string confirmPassword) {
            object[] results = this.Invoke("ChangePassword", new object[] {
                        employeeNo,
                        currentPassword,
                        newPassword,
                        confirmPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ChangePasswordAsync(string employeeNo, string currentPassword, string newPassword, string confirmPassword) {
            this.ChangePasswordAsync(employeeNo, currentPassword, newPassword, confirmPassword, null);
        }
        
        /// <remarks/>
        public void ChangePasswordAsync(string employeeNo, string currentPassword, string newPassword, string confirmPassword, object userState) {
            if ((this.ChangePasswordOperationCompleted == null)) {
                this.ChangePasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangePasswordOperationCompleted);
            }
            this.InvokeAsync("ChangePassword", new object[] {
                        employeeNo,
                        currentPassword,
                        newPassword,
                        confirmPassword}, this.ChangePasswordOperationCompleted, userState);
        }
        
        private void OnChangePasswordOperationCompleted(object arg) {
            if ((this.ChangePasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangePasswordCompleted(this, new ChangePasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:DeleteRequisitionLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="DeleteRequisitionLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteRequisitionLine(string employeeNo, string requisitionNo, int lineNo, int documentType) {
            object[] results = this.Invoke("DeleteRequisitionLine", new object[] {
                        employeeNo,
                        requisitionNo,
                        lineNo,
                        documentType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteRequisitionLineAsync(string employeeNo, string requisitionNo, int lineNo, int documentType) {
            this.DeleteRequisitionLineAsync(employeeNo, requisitionNo, lineNo, documentType, null);
        }
        
        /// <remarks/>
        public void DeleteRequisitionLineAsync(string employeeNo, string requisitionNo, int lineNo, int documentType, object userState) {
            if ((this.DeleteRequisitionLineOperationCompleted == null)) {
                this.DeleteRequisitionLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteRequisitionLineOperationCompleted);
            }
            this.InvokeAsync("DeleteRequisitionLine", new object[] {
                        employeeNo,
                        requisitionNo,
                        lineNo,
                        documentType}, this.DeleteRequisitionLineOperationCompleted, userState);
        }
        
        private void OnDeleteRequisitionLineOperationCompleted(object arg) {
            if ((this.DeleteRequisitionLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteRequisitionLineCompleted(this, new DeleteRequisitionLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:SendStaffClaimApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="SendStaffClaimApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string SendStaffClaimApproval(string employeeNo, string staffClaim) {
            object[] results = this.Invoke("SendStaffClaimApproval", new object[] {
                        employeeNo,
                        staffClaim});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendStaffClaimApprovalAsync(string employeeNo, string staffClaim) {
            this.SendStaffClaimApprovalAsync(employeeNo, staffClaim, null);
        }
        
        /// <remarks/>
        public void SendStaffClaimApprovalAsync(string employeeNo, string staffClaim, object userState) {
            if ((this.SendStaffClaimApprovalOperationCompleted == null)) {
                this.SendStaffClaimApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendStaffClaimApprovalOperationCompleted);
            }
            this.InvokeAsync("SendStaffClaimApproval", new object[] {
                        employeeNo,
                        staffClaim}, this.SendStaffClaimApprovalOperationCompleted, userState);
        }
        
        private void OnSendStaffClaimApprovalOperationCompleted(object arg) {
            if ((this.SendStaffClaimApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendStaffClaimApprovalCompleted(this, new SendStaffClaimApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:CreateStaffClaim", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="CreateStaffClaim_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateStaffClaim(string employeeNo, string claimNo, string paymentNarration, string fundCode, string job, string jobTask) {
            object[] results = this.Invoke("CreateStaffClaim", new object[] {
                        employeeNo,
                        claimNo,
                        paymentNarration,
                        fundCode,
                        job,
                        jobTask});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateStaffClaimAsync(string employeeNo, string claimNo, string paymentNarration, string fundCode, string job, string jobTask) {
            this.CreateStaffClaimAsync(employeeNo, claimNo, paymentNarration, fundCode, job, jobTask, null);
        }
        
        /// <remarks/>
        public void CreateStaffClaimAsync(string employeeNo, string claimNo, string paymentNarration, string fundCode, string job, string jobTask, object userState) {
            if ((this.CreateStaffClaimOperationCompleted == null)) {
                this.CreateStaffClaimOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateStaffClaimOperationCompleted);
            }
            this.InvokeAsync("CreateStaffClaim", new object[] {
                        employeeNo,
                        claimNo,
                        paymentNarration,
                        fundCode,
                        job,
                        jobTask}, this.CreateStaffClaimOperationCompleted, userState);
        }
        
        private void OnCreateStaffClaimOperationCompleted(object arg) {
            if ((this.CreateStaffClaimCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateStaffClaimCompleted(this, new CreateStaffClaimCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:DeleteStaffClaimLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="DeleteStaffClaimLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteStaffClaimLine(string employeeNo, string claimNo, int lineNo) {
            object[] results = this.Invoke("DeleteStaffClaimLine", new object[] {
                        employeeNo,
                        claimNo,
                        lineNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteStaffClaimLineAsync(string employeeNo, string claimNo, int lineNo) {
            this.DeleteStaffClaimLineAsync(employeeNo, claimNo, lineNo, null);
        }
        
        /// <remarks/>
        public void DeleteStaffClaimLineAsync(string employeeNo, string claimNo, int lineNo, object userState) {
            if ((this.DeleteStaffClaimLineOperationCompleted == null)) {
                this.DeleteStaffClaimLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteStaffClaimLineOperationCompleted);
            }
            this.InvokeAsync("DeleteStaffClaimLine", new object[] {
                        employeeNo,
                        claimNo,
                        lineNo}, this.DeleteStaffClaimLineOperationCompleted, userState);
        }
        
        private void OnDeleteStaffClaimLineOperationCompleted(object arg) {
            if ((this.DeleteStaffClaimLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteStaffClaimLineCompleted(this, new DeleteStaffClaimLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:CreateStaffClaimLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="CreateStaffClaimLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateStaffClaimLine(string employeeNo, string claimNo, string voteItem, string description, decimal amount) {
            object[] results = this.Invoke("CreateStaffClaimLine", new object[] {
                        employeeNo,
                        claimNo,
                        voteItem,
                        description,
                        amount});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateStaffClaimLineAsync(string employeeNo, string claimNo, string voteItem, string description, decimal amount) {
            this.CreateStaffClaimLineAsync(employeeNo, claimNo, voteItem, description, amount, null);
        }
        
        /// <remarks/>
        public void CreateStaffClaimLineAsync(string employeeNo, string claimNo, string voteItem, string description, decimal amount, object userState) {
            if ((this.CreateStaffClaimLineOperationCompleted == null)) {
                this.CreateStaffClaimLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateStaffClaimLineOperationCompleted);
            }
            this.InvokeAsync("CreateStaffClaimLine", new object[] {
                        employeeNo,
                        claimNo,
                        voteItem,
                        description,
                        amount}, this.CreateStaffClaimLineOperationCompleted, userState);
        }
        
        private void OnCreateStaffClaimLineOperationCompleted(object arg) {
            if ((this.CreateStaffClaimLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateStaffClaimLineCompleted(this, new CreateStaffClaimLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:EditStaffClaimLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="EditStaffClaimLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string EditStaffClaimLine(int lineNo, string employeeNo, string claimNo, string voteItem, string description, decimal amount) {
            object[] results = this.Invoke("EditStaffClaimLine", new object[] {
                        lineNo,
                        employeeNo,
                        claimNo,
                        voteItem,
                        description,
                        amount});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditStaffClaimLineAsync(int lineNo, string employeeNo, string claimNo, string voteItem, string description, decimal amount) {
            this.EditStaffClaimLineAsync(lineNo, employeeNo, claimNo, voteItem, description, amount, null);
        }
        
        /// <remarks/>
        public void EditStaffClaimLineAsync(int lineNo, string employeeNo, string claimNo, string voteItem, string description, decimal amount, object userState) {
            if ((this.EditStaffClaimLineOperationCompleted == null)) {
                this.EditStaffClaimLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditStaffClaimLineOperationCompleted);
            }
            this.InvokeAsync("EditStaffClaimLine", new object[] {
                        lineNo,
                        employeeNo,
                        claimNo,
                        voteItem,
                        description,
                        amount}, this.EditStaffClaimLineOperationCompleted, userState);
        }
        
        private void OnEditStaffClaimLineOperationCompleted(object arg) {
            if ((this.EditStaffClaimLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditStaffClaimLineCompleted(this, new EditStaffClaimLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:SendStoreRequisitionApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="SendStoreRequisitionApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string SendStoreRequisitionApproval(string employeeNo, string requisitionNo) {
            object[] results = this.Invoke("SendStoreRequisitionApproval", new object[] {
                        employeeNo,
                        requisitionNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendStoreRequisitionApprovalAsync(string employeeNo, string requisitionNo) {
            this.SendStoreRequisitionApprovalAsync(employeeNo, requisitionNo, null);
        }
        
        /// <remarks/>
        public void SendStoreRequisitionApprovalAsync(string employeeNo, string requisitionNo, object userState) {
            if ((this.SendStoreRequisitionApprovalOperationCompleted == null)) {
                this.SendStoreRequisitionApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendStoreRequisitionApprovalOperationCompleted);
            }
            this.InvokeAsync("SendStoreRequisitionApproval", new object[] {
                        employeeNo,
                        requisitionNo}, this.SendStoreRequisitionApprovalOperationCompleted, userState);
        }
        
        private void OnSendStoreRequisitionApprovalOperationCompleted(object arg) {
            if ((this.SendStoreRequisitionApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendStoreRequisitionApprovalCompleted(this, new SendStoreRequisitionApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:CreateStoreRequisitionLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="CreateStoreRequisitionLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateStoreRequisitionLine(string employeeNo, string requisitionNo, string itemCategory, string item, decimal quantity) {
            object[] results = this.Invoke("CreateStoreRequisitionLine", new object[] {
                        employeeNo,
                        requisitionNo,
                        itemCategory,
                        item,
                        quantity});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateStoreRequisitionLineAsync(string employeeNo, string requisitionNo, string itemCategory, string item, decimal quantity) {
            this.CreateStoreRequisitionLineAsync(employeeNo, requisitionNo, itemCategory, item, quantity, null);
        }
        
        /// <remarks/>
        public void CreateStoreRequisitionLineAsync(string employeeNo, string requisitionNo, string itemCategory, string item, decimal quantity, object userState) {
            if ((this.CreateStoreRequisitionLineOperationCompleted == null)) {
                this.CreateStoreRequisitionLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateStoreRequisitionLineOperationCompleted);
            }
            this.InvokeAsync("CreateStoreRequisitionLine", new object[] {
                        employeeNo,
                        requisitionNo,
                        itemCategory,
                        item,
                        quantity}, this.CreateStoreRequisitionLineOperationCompleted, userState);
        }
        
        private void OnCreateStoreRequisitionLineOperationCompleted(object arg) {
            if ((this.CreateStoreRequisitionLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateStoreRequisitionLineCompleted(this, new CreateStoreRequisitionLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:ApplyexternalHrJobs", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="ApplyexternalHrJobs_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ApplyexternalHrJobs(
                    string jobId, 
                    string surname, 
                    string firstname, 
                    string lastname, 
                    string title, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dOB, 
                    int gender, 
                    int disabled, 
                    string disabilityDetails, 
                    string county, 
                    string nationality, 
                    int maritalStatus, 
                    string religion, 
                    string idNumber, 
                    string phoneNo, 
                    string email, 
                    string ethinc, 
                    string postalAddress, 
                    string postalAddressCode, 
                    string city, 
                    decimal expected_salary, 
                    string registrationDetails, 
                    string nhifNo, 
                    string nssfNo, 
                    string pinNo, 
                    string altPhoneNo, 
                    string altEmail, 
                    string positionHeld, 
                    string currentEmployer, 
                    decimal grossSalary, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime effectiveDate, 
                    string reqNo) {
            object[] results = this.Invoke("ApplyexternalHrJobs", new object[] {
                        jobId,
                        surname,
                        firstname,
                        lastname,
                        title,
                        dOB,
                        gender,
                        disabled,
                        disabilityDetails,
                        county,
                        nationality,
                        maritalStatus,
                        religion,
                        idNumber,
                        phoneNo,
                        email,
                        ethinc,
                        postalAddress,
                        postalAddressCode,
                        city,
                        expected_salary,
                        registrationDetails,
                        nhifNo,
                        nssfNo,
                        pinNo,
                        altPhoneNo,
                        altEmail,
                        positionHeld,
                        currentEmployer,
                        grossSalary,
                        effectiveDate,
                        reqNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ApplyexternalHrJobsAsync(
                    string jobId, 
                    string surname, 
                    string firstname, 
                    string lastname, 
                    string title, 
                    System.DateTime dOB, 
                    int gender, 
                    int disabled, 
                    string disabilityDetails, 
                    string county, 
                    string nationality, 
                    int maritalStatus, 
                    string religion, 
                    string idNumber, 
                    string phoneNo, 
                    string email, 
                    string ethinc, 
                    string postalAddress, 
                    string postalAddressCode, 
                    string city, 
                    decimal expected_salary, 
                    string registrationDetails, 
                    string nhifNo, 
                    string nssfNo, 
                    string pinNo, 
                    string altPhoneNo, 
                    string altEmail, 
                    string positionHeld, 
                    string currentEmployer, 
                    decimal grossSalary, 
                    System.DateTime effectiveDate, 
                    string reqNo) {
            this.ApplyexternalHrJobsAsync(jobId, surname, firstname, lastname, title, dOB, gender, disabled, disabilityDetails, county, nationality, maritalStatus, religion, idNumber, phoneNo, email, ethinc, postalAddress, postalAddressCode, city, expected_salary, registrationDetails, nhifNo, nssfNo, pinNo, altPhoneNo, altEmail, positionHeld, currentEmployer, grossSalary, effectiveDate, reqNo, null);
        }
        
        /// <remarks/>
        public void ApplyexternalHrJobsAsync(
                    string jobId, 
                    string surname, 
                    string firstname, 
                    string lastname, 
                    string title, 
                    System.DateTime dOB, 
                    int gender, 
                    int disabled, 
                    string disabilityDetails, 
                    string county, 
                    string nationality, 
                    int maritalStatus, 
                    string religion, 
                    string idNumber, 
                    string phoneNo, 
                    string email, 
                    string ethinc, 
                    string postalAddress, 
                    string postalAddressCode, 
                    string city, 
                    decimal expected_salary, 
                    string registrationDetails, 
                    string nhifNo, 
                    string nssfNo, 
                    string pinNo, 
                    string altPhoneNo, 
                    string altEmail, 
                    string positionHeld, 
                    string currentEmployer, 
                    decimal grossSalary, 
                    System.DateTime effectiveDate, 
                    string reqNo, 
                    object userState) {
            if ((this.ApplyexternalHrJobsOperationCompleted == null)) {
                this.ApplyexternalHrJobsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApplyexternalHrJobsOperationCompleted);
            }
            this.InvokeAsync("ApplyexternalHrJobs", new object[] {
                        jobId,
                        surname,
                        firstname,
                        lastname,
                        title,
                        dOB,
                        gender,
                        disabled,
                        disabilityDetails,
                        county,
                        nationality,
                        maritalStatus,
                        religion,
                        idNumber,
                        phoneNo,
                        email,
                        ethinc,
                        postalAddress,
                        postalAddressCode,
                        city,
                        expected_salary,
                        registrationDetails,
                        nhifNo,
                        nssfNo,
                        pinNo,
                        altPhoneNo,
                        altEmail,
                        positionHeld,
                        currentEmployer,
                        grossSalary,
                        effectiveDate,
                        reqNo}, this.ApplyexternalHrJobsOperationCompleted, userState);
        }
        
        private void OnApplyexternalHrJobsOperationCompleted(object arg) {
            if ((this.ApplyexternalHrJobsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApplyexternalHrJobsCompleted(this, new ApplyexternalHrJobsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:ApplyinternalHrJobs", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="ApplyinternalHrJobs_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ApplyinternalHrJobs(
                    string docNo, 
                    string jobId, 
                    string surname, 
                    string firstname, 
                    string lastname, 
                    string title, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dOB, 
                    int gender, 
                    int disabled, 
                    string disabilityDetails, 
                    string county, 
                    string nationality, 
                    int maritalStatus, 
                    string religion, 
                    string idNumber, 
                    string nhifNo, 
                    string nssfNo, 
                    string pinNo, 
                    string phoneNo, 
                    string altPhoneNo, 
                    string email, 
                    string altEmail, 
                    string empNo, 
                    string dpt, 
                    string currentPosition, 
                    string jobGroup, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateOfFirstAppointment, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime lastPromotionDate, 
                    string ethinc, 
                    string reqNo) {
            object[] results = this.Invoke("ApplyinternalHrJobs", new object[] {
                        docNo,
                        jobId,
                        surname,
                        firstname,
                        lastname,
                        title,
                        dOB,
                        gender,
                        disabled,
                        disabilityDetails,
                        county,
                        nationality,
                        maritalStatus,
                        religion,
                        idNumber,
                        nhifNo,
                        nssfNo,
                        pinNo,
                        phoneNo,
                        altPhoneNo,
                        email,
                        altEmail,
                        empNo,
                        dpt,
                        currentPosition,
                        jobGroup,
                        dateOfFirstAppointment,
                        lastPromotionDate,
                        ethinc,
                        reqNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ApplyinternalHrJobsAsync(
                    string docNo, 
                    string jobId, 
                    string surname, 
                    string firstname, 
                    string lastname, 
                    string title, 
                    System.DateTime dOB, 
                    int gender, 
                    int disabled, 
                    string disabilityDetails, 
                    string county, 
                    string nationality, 
                    int maritalStatus, 
                    string religion, 
                    string idNumber, 
                    string nhifNo, 
                    string nssfNo, 
                    string pinNo, 
                    string phoneNo, 
                    string altPhoneNo, 
                    string email, 
                    string altEmail, 
                    string empNo, 
                    string dpt, 
                    string currentPosition, 
                    string jobGroup, 
                    System.DateTime dateOfFirstAppointment, 
                    System.DateTime lastPromotionDate, 
                    string ethinc, 
                    string reqNo) {
            this.ApplyinternalHrJobsAsync(docNo, jobId, surname, firstname, lastname, title, dOB, gender, disabled, disabilityDetails, county, nationality, maritalStatus, religion, idNumber, nhifNo, nssfNo, pinNo, phoneNo, altPhoneNo, email, altEmail, empNo, dpt, currentPosition, jobGroup, dateOfFirstAppointment, lastPromotionDate, ethinc, reqNo, null);
        }
        
        /// <remarks/>
        public void ApplyinternalHrJobsAsync(
                    string docNo, 
                    string jobId, 
                    string surname, 
                    string firstname, 
                    string lastname, 
                    string title, 
                    System.DateTime dOB, 
                    int gender, 
                    int disabled, 
                    string disabilityDetails, 
                    string county, 
                    string nationality, 
                    int maritalStatus, 
                    string religion, 
                    string idNumber, 
                    string nhifNo, 
                    string nssfNo, 
                    string pinNo, 
                    string phoneNo, 
                    string altPhoneNo, 
                    string email, 
                    string altEmail, 
                    string empNo, 
                    string dpt, 
                    string currentPosition, 
                    string jobGroup, 
                    System.DateTime dateOfFirstAppointment, 
                    System.DateTime lastPromotionDate, 
                    string ethinc, 
                    string reqNo, 
                    object userState) {
            if ((this.ApplyinternalHrJobsOperationCompleted == null)) {
                this.ApplyinternalHrJobsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApplyinternalHrJobsOperationCompleted);
            }
            this.InvokeAsync("ApplyinternalHrJobs", new object[] {
                        docNo,
                        jobId,
                        surname,
                        firstname,
                        lastname,
                        title,
                        dOB,
                        gender,
                        disabled,
                        disabilityDetails,
                        county,
                        nationality,
                        maritalStatus,
                        religion,
                        idNumber,
                        nhifNo,
                        nssfNo,
                        pinNo,
                        phoneNo,
                        altPhoneNo,
                        email,
                        altEmail,
                        empNo,
                        dpt,
                        currentPosition,
                        jobGroup,
                        dateOfFirstAppointment,
                        lastPromotionDate,
                        ethinc,
                        reqNo}, this.ApplyinternalHrJobsOperationCompleted, userState);
        }
        
        private void OnApplyinternalHrJobsOperationCompleted(object arg) {
            if ((this.ApplyinternalHrJobsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApplyinternalHrJobsCompleted(this, new ApplyinternalHrJobsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddEmploymentHistory", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddEmploymentHistory_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddEmploymentHistory(string idNumber, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime startDate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime endDate, string company, string designation, string jobGrade, string appNo, string empNo, string jobId) {
            object[] results = this.Invoke("AddEmploymentHistory", new object[] {
                        idNumber,
                        startDate,
                        endDate,
                        company,
                        designation,
                        jobGrade,
                        appNo,
                        empNo,
                        jobId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddEmploymentHistoryAsync(string idNumber, System.DateTime startDate, System.DateTime endDate, string company, string designation, string jobGrade, string appNo, string empNo, string jobId) {
            this.AddEmploymentHistoryAsync(idNumber, startDate, endDate, company, designation, jobGrade, appNo, empNo, jobId, null);
        }
        
        /// <remarks/>
        public void AddEmploymentHistoryAsync(string idNumber, System.DateTime startDate, System.DateTime endDate, string company, string designation, string jobGrade, string appNo, string empNo, string jobId, object userState) {
            if ((this.AddEmploymentHistoryOperationCompleted == null)) {
                this.AddEmploymentHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddEmploymentHistoryOperationCompleted);
            }
            this.InvokeAsync("AddEmploymentHistory", new object[] {
                        idNumber,
                        startDate,
                        endDate,
                        company,
                        designation,
                        jobGrade,
                        appNo,
                        empNo,
                        jobId}, this.AddEmploymentHistoryOperationCompleted, userState);
        }
        
        private void OnAddEmploymentHistoryOperationCompleted(object arg) {
            if ((this.AddEmploymentHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddEmploymentHistoryCompleted(this, new AddEmploymentHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddAcademicQualifications", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddAcademicQualifications_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddAcademicQualifications(string appNo, string institution, string awardAttainment, string specialization, string gradeAttained, string empNo, string jobId, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime fromDate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime toDate) {
            object[] results = this.Invoke("AddAcademicQualifications", new object[] {
                        appNo,
                        institution,
                        awardAttainment,
                        specialization,
                        gradeAttained,
                        empNo,
                        jobId,
                        fromDate,
                        toDate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddAcademicQualificationsAsync(string appNo, string institution, string awardAttainment, string specialization, string gradeAttained, string empNo, string jobId, System.DateTime fromDate, System.DateTime toDate) {
            this.AddAcademicQualificationsAsync(appNo, institution, awardAttainment, specialization, gradeAttained, empNo, jobId, fromDate, toDate, null);
        }
        
        /// <remarks/>
        public void AddAcademicQualificationsAsync(string appNo, string institution, string awardAttainment, string specialization, string gradeAttained, string empNo, string jobId, System.DateTime fromDate, System.DateTime toDate, object userState) {
            if ((this.AddAcademicQualificationsOperationCompleted == null)) {
                this.AddAcademicQualificationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddAcademicQualificationsOperationCompleted);
            }
            this.InvokeAsync("AddAcademicQualifications", new object[] {
                        appNo,
                        institution,
                        awardAttainment,
                        specialization,
                        gradeAttained,
                        empNo,
                        jobId,
                        fromDate,
                        toDate}, this.AddAcademicQualificationsOperationCompleted, userState);
        }
        
        private void OnAddAcademicQualificationsOperationCompleted(object arg) {
            if ((this.AddAcademicQualificationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddAcademicQualificationsCompleted(this, new AddAcademicQualificationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddProffessionalQualifications", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddProffessionalQualifications_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddProffessionalQualifications(string appNo, string institution, string awardAttainment, string specialization, string gradeAttained, string empNo, string jobId, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime fromDate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime toDate) {
            object[] results = this.Invoke("AddProffessionalQualifications", new object[] {
                        appNo,
                        institution,
                        awardAttainment,
                        specialization,
                        gradeAttained,
                        empNo,
                        jobId,
                        fromDate,
                        toDate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddProffessionalQualificationsAsync(string appNo, string institution, string awardAttainment, string specialization, string gradeAttained, string empNo, string jobId, System.DateTime fromDate, System.DateTime toDate) {
            this.AddProffessionalQualificationsAsync(appNo, institution, awardAttainment, specialization, gradeAttained, empNo, jobId, fromDate, toDate, null);
        }
        
        /// <remarks/>
        public void AddProffessionalQualificationsAsync(string appNo, string institution, string awardAttainment, string specialization, string gradeAttained, string empNo, string jobId, System.DateTime fromDate, System.DateTime toDate, object userState) {
            if ((this.AddProffessionalQualificationsOperationCompleted == null)) {
                this.AddProffessionalQualificationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddProffessionalQualificationsOperationCompleted);
            }
            this.InvokeAsync("AddProffessionalQualifications", new object[] {
                        appNo,
                        institution,
                        awardAttainment,
                        specialization,
                        gradeAttained,
                        empNo,
                        jobId,
                        fromDate,
                        toDate}, this.AddProffessionalQualificationsOperationCompleted, userState);
        }
        
        private void OnAddProffessionalQualificationsOperationCompleted(object arg) {
            if ((this.AddProffessionalQualificationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddProffessionalQualificationsCompleted(this, new AddProffessionalQualificationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddTrainingAttended", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddTrainingAttended_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddTrainingAttended([System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime fromDate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime toDate, string jobId, string employeeNo, string institution, string courseName, string appNo, string attained) {
            object[] results = this.Invoke("AddTrainingAttended", new object[] {
                        fromDate,
                        toDate,
                        jobId,
                        employeeNo,
                        institution,
                        courseName,
                        appNo,
                        attained});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddTrainingAttendedAsync(System.DateTime fromDate, System.DateTime toDate, string jobId, string employeeNo, string institution, string courseName, string appNo, string attained) {
            this.AddTrainingAttendedAsync(fromDate, toDate, jobId, employeeNo, institution, courseName, appNo, attained, null);
        }
        
        /// <remarks/>
        public void AddTrainingAttendedAsync(System.DateTime fromDate, System.DateTime toDate, string jobId, string employeeNo, string institution, string courseName, string appNo, string attained, object userState) {
            if ((this.AddTrainingAttendedOperationCompleted == null)) {
                this.AddTrainingAttendedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddTrainingAttendedOperationCompleted);
            }
            this.InvokeAsync("AddTrainingAttended", new object[] {
                        fromDate,
                        toDate,
                        jobId,
                        employeeNo,
                        institution,
                        courseName,
                        appNo,
                        attained}, this.AddTrainingAttendedOperationCompleted, userState);
        }
        
        private void OnAddTrainingAttendedOperationCompleted(object arg) {
            if ((this.AddTrainingAttendedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddTrainingAttendedCompleted(this, new AddTrainingAttendedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddProfessionalBody", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddProfessionalBody_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddProfessionalBody(string appNo, string jobId, string empNo, string pBody, string mNo, string mType, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime rDate) {
            object[] results = this.Invoke("AddProfessionalBody", new object[] {
                        appNo,
                        jobId,
                        empNo,
                        pBody,
                        mNo,
                        mType,
                        rDate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddProfessionalBodyAsync(string appNo, string jobId, string empNo, string pBody, string mNo, string mType, System.DateTime rDate) {
            this.AddProfessionalBodyAsync(appNo, jobId, empNo, pBody, mNo, mType, rDate, null);
        }
        
        /// <remarks/>
        public void AddProfessionalBodyAsync(string appNo, string jobId, string empNo, string pBody, string mNo, string mType, System.DateTime rDate, object userState) {
            if ((this.AddProfessionalBodyOperationCompleted == null)) {
                this.AddProfessionalBodyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddProfessionalBodyOperationCompleted);
            }
            this.InvokeAsync("AddProfessionalBody", new object[] {
                        appNo,
                        jobId,
                        empNo,
                        pBody,
                        mNo,
                        mType,
                        rDate}, this.AddProfessionalBodyOperationCompleted, userState);
        }
        
        private void OnAddProfessionalBodyOperationCompleted(object arg) {
            if ((this.AddProfessionalBodyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddProfessionalBodyCompleted(this, new AddProfessionalBodyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddApplicantAccomplishment", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddApplicantAccomplishment_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddApplicantAccomplishment(string appNo, string empNo, string description, int number, string jobId, string amt) {
            object[] results = this.Invoke("AddApplicantAccomplishment", new object[] {
                        appNo,
                        empNo,
                        description,
                        number,
                        jobId,
                        amt});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddApplicantAccomplishmentAsync(string appNo, string empNo, string description, int number, string jobId, string amt) {
            this.AddApplicantAccomplishmentAsync(appNo, empNo, description, number, jobId, amt, null);
        }
        
        /// <remarks/>
        public void AddApplicantAccomplishmentAsync(string appNo, string empNo, string description, int number, string jobId, string amt, object userState) {
            if ((this.AddApplicantAccomplishmentOperationCompleted == null)) {
                this.AddApplicantAccomplishmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddApplicantAccomplishmentOperationCompleted);
            }
            this.InvokeAsync("AddApplicantAccomplishment", new object[] {
                        appNo,
                        empNo,
                        description,
                        number,
                        jobId,
                        amt}, this.AddApplicantAccomplishmentOperationCompleted, userState);
        }
        
        private void OnAddApplicantAccomplishmentOperationCompleted(object arg) {
            if ((this.AddApplicantAccomplishmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddApplicantAccomplishmentCompleted(this, new AddApplicantAccomplishmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddAbilityDetails_Accomplishment" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddAbilityDetails_Accomplishment_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddAbilityDetails_Accomplishment(string description, string appNo, string pAccomplishment) {
            object[] results = this.Invoke("AddAbilityDetails_Accomplishment", new object[] {
                        description,
                        appNo,
                        pAccomplishment});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddAbilityDetails_AccomplishmentAsync(string description, string appNo, string pAccomplishment) {
            this.AddAbilityDetails_AccomplishmentAsync(description, appNo, pAccomplishment, null);
        }
        
        /// <remarks/>
        public void AddAbilityDetails_AccomplishmentAsync(string description, string appNo, string pAccomplishment, object userState) {
            if ((this.AddAbilityDetails_AccomplishmentOperationCompleted == null)) {
                this.AddAbilityDetails_AccomplishmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddAbilityDetails_AccomplishmentOperationCompleted);
            }
            this.InvokeAsync("AddAbilityDetails_Accomplishment", new object[] {
                        description,
                        appNo,
                        pAccomplishment}, this.AddAbilityDetails_AccomplishmentOperationCompleted, userState);
        }
        
        private void OnAddAbilityDetails_AccomplishmentOperationCompleted(object arg) {
            if ((this.AddAbilityDetails_AccomplishmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddAbilityDetails_AccomplishmentCompleted(this, new AddAbilityDetails_AccomplishmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddAbilityDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddAbilityDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddAbilityDetails(string description, string appNo) {
            object[] results = this.Invoke("AddAbilityDetails", new object[] {
                        description,
                        appNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddAbilityDetailsAsync(string description, string appNo) {
            this.AddAbilityDetailsAsync(description, appNo, null);
        }
        
        /// <remarks/>
        public void AddAbilityDetailsAsync(string description, string appNo, object userState) {
            if ((this.AddAbilityDetailsOperationCompleted == null)) {
                this.AddAbilityDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddAbilityDetailsOperationCompleted);
            }
            this.InvokeAsync("AddAbilityDetails", new object[] {
                        description,
                        appNo}, this.AddAbilityDetailsOperationCompleted, userState);
        }
        
        private void OnAddAbilityDetailsOperationCompleted(object arg) {
            if ((this.AddAbilityDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddAbilityDetailsCompleted(this, new AddAbilityDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:CreateReferee", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="CreateReferee_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateReferee(string appNo, string empNo, string name, string occupation, string address, string postCode, string phone, string email, string knownPeriod, string jobId) {
            object[] results = this.Invoke("CreateReferee", new object[] {
                        appNo,
                        empNo,
                        name,
                        occupation,
                        address,
                        postCode,
                        phone,
                        email,
                        knownPeriod,
                        jobId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateRefereeAsync(string appNo, string empNo, string name, string occupation, string address, string postCode, string phone, string email, string knownPeriod, string jobId) {
            this.CreateRefereeAsync(appNo, empNo, name, occupation, address, postCode, phone, email, knownPeriod, jobId, null);
        }
        
        /// <remarks/>
        public void CreateRefereeAsync(string appNo, string empNo, string name, string occupation, string address, string postCode, string phone, string email, string knownPeriod, string jobId, object userState) {
            if ((this.CreateRefereeOperationCompleted == null)) {
                this.CreateRefereeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateRefereeOperationCompleted);
            }
            this.InvokeAsync("CreateReferee", new object[] {
                        appNo,
                        empNo,
                        name,
                        occupation,
                        address,
                        postCode,
                        phone,
                        email,
                        knownPeriod,
                        jobId}, this.CreateRefereeOperationCompleted, userState);
        }
        
        private void OnCreateRefereeOperationCompleted(object arg) {
            if ((this.CreateRefereeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateRefereeCompleted(this, new CreateRefereeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddCurrentDutiesSkills", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddCurrentDutiesSkills_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddCurrentDutiesSkills(string abilities, string currentDuties, string appNo) {
            object[] results = this.Invoke("AddCurrentDutiesSkills", new object[] {
                        abilities,
                        currentDuties,
                        appNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddCurrentDutiesSkillsAsync(string abilities, string currentDuties, string appNo) {
            this.AddCurrentDutiesSkillsAsync(abilities, currentDuties, appNo, null);
        }
        
        /// <remarks/>
        public void AddCurrentDutiesSkillsAsync(string abilities, string currentDuties, string appNo, object userState) {
            if ((this.AddCurrentDutiesSkillsOperationCompleted == null)) {
                this.AddCurrentDutiesSkillsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddCurrentDutiesSkillsOperationCompleted);
            }
            this.InvokeAsync("AddCurrentDutiesSkills", new object[] {
                        abilities,
                        currentDuties,
                        appNo}, this.AddCurrentDutiesSkillsOperationCompleted, userState);
        }
        
        private void OnAddCurrentDutiesSkillsOperationCompleted(object arg) {
            if ((this.AddCurrentDutiesSkillsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddCurrentDutiesSkillsCompleted(this, new AddCurrentDutiesSkillsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddOtherPersonalDetails1", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddOtherPersonalDetails1_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddOtherPersonalDetails1(string appNo, bool convicted, string convictionDesc, bool dismissal, string dismissalDesc, string highestLevel, bool workInAllCenters) {
            object[] results = this.Invoke("AddOtherPersonalDetails1", new object[] {
                        appNo,
                        convicted,
                        convictionDesc,
                        dismissal,
                        dismissalDesc,
                        highestLevel,
                        workInAllCenters});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddOtherPersonalDetails1Async(string appNo, bool convicted, string convictionDesc, bool dismissal, string dismissalDesc, string highestLevel, bool workInAllCenters) {
            this.AddOtherPersonalDetails1Async(appNo, convicted, convictionDesc, dismissal, dismissalDesc, highestLevel, workInAllCenters, null);
        }
        
        /// <remarks/>
        public void AddOtherPersonalDetails1Async(string appNo, bool convicted, string convictionDesc, bool dismissal, string dismissalDesc, string highestLevel, bool workInAllCenters, object userState) {
            if ((this.AddOtherPersonalDetails1OperationCompleted == null)) {
                this.AddOtherPersonalDetails1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddOtherPersonalDetails1OperationCompleted);
            }
            this.InvokeAsync("AddOtherPersonalDetails1", new object[] {
                        appNo,
                        convicted,
                        convictionDesc,
                        dismissal,
                        dismissalDesc,
                        highestLevel,
                        workInAllCenters}, this.AddOtherPersonalDetails1OperationCompleted, userState);
        }
        
        private void OnAddOtherPersonalDetails1OperationCompleted(object arg) {
            if ((this.AddOtherPersonalDetails1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddOtherPersonalDetails1Completed(this, new AddOtherPersonalDetails1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddOtherPersonalDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddOtherPersonalDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddOtherPersonalDetails(string appNo, bool convicted, string convictionDesc, bool dismissal, string dismissalDesc, string highestLevel) {
            object[] results = this.Invoke("AddOtherPersonalDetails", new object[] {
                        appNo,
                        convicted,
                        convictionDesc,
                        dismissal,
                        dismissalDesc,
                        highestLevel});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddOtherPersonalDetailsAsync(string appNo, bool convicted, string convictionDesc, bool dismissal, string dismissalDesc, string highestLevel) {
            this.AddOtherPersonalDetailsAsync(appNo, convicted, convictionDesc, dismissal, dismissalDesc, highestLevel, null);
        }
        
        /// <remarks/>
        public void AddOtherPersonalDetailsAsync(string appNo, bool convicted, string convictionDesc, bool dismissal, string dismissalDesc, string highestLevel, object userState) {
            if ((this.AddOtherPersonalDetailsOperationCompleted == null)) {
                this.AddOtherPersonalDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddOtherPersonalDetailsOperationCompleted);
            }
            this.InvokeAsync("AddOtherPersonalDetails", new object[] {
                        appNo,
                        convicted,
                        convictionDesc,
                        dismissal,
                        dismissalDesc,
                        highestLevel}, this.AddOtherPersonalDetailsOperationCompleted, userState);
        }
        
        private void OnAddOtherPersonalDetailsOperationCompleted(object arg) {
            if ((this.AddOtherPersonalDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddOtherPersonalDetailsCompleted(this, new AddOtherPersonalDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddDutiesDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddDutiesDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddDutiesDetails(string description, string appNo) {
            object[] results = this.Invoke("AddDutiesDetails", new object[] {
                        description,
                        appNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddDutiesDetailsAsync(string description, string appNo) {
            this.AddDutiesDetailsAsync(description, appNo, null);
        }
        
        /// <remarks/>
        public void AddDutiesDetailsAsync(string description, string appNo, object userState) {
            if ((this.AddDutiesDetailsOperationCompleted == null)) {
                this.AddDutiesDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddDutiesDetailsOperationCompleted);
            }
            this.InvokeAsync("AddDutiesDetails", new object[] {
                        description,
                        appNo}, this.AddDutiesDetailsOperationCompleted, userState);
        }
        
        private void OnAddDutiesDetailsOperationCompleted(object arg) {
            if ((this.AddDutiesDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddDutiesDetailsCompleted(this, new AddDutiesDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:DeleteAcademicLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="DeleteAcademicLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteAcademicLine(int id, string appNo) {
            object[] results = this.Invoke("DeleteAcademicLine", new object[] {
                        id,
                        appNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteAcademicLineAsync(int id, string appNo) {
            this.DeleteAcademicLineAsync(id, appNo, null);
        }
        
        /// <remarks/>
        public void DeleteAcademicLineAsync(int id, string appNo, object userState) {
            if ((this.DeleteAcademicLineOperationCompleted == null)) {
                this.DeleteAcademicLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteAcademicLineOperationCompleted);
            }
            this.InvokeAsync("DeleteAcademicLine", new object[] {
                        id,
                        appNo}, this.DeleteAcademicLineOperationCompleted, userState);
        }
        
        private void OnDeleteAcademicLineOperationCompleted(object arg) {
            if ((this.DeleteAcademicLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteAcademicLineCompleted(this, new DeleteAcademicLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:DeleteProfessionalLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="DeleteProfessionalLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteProfessionalLine(int id, string appNo) {
            object[] results = this.Invoke("DeleteProfessionalLine", new object[] {
                        id,
                        appNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteProfessionalLineAsync(int id, string appNo) {
            this.DeleteProfessionalLineAsync(id, appNo, null);
        }
        
        /// <remarks/>
        public void DeleteProfessionalLineAsync(int id, string appNo, object userState) {
            if ((this.DeleteProfessionalLineOperationCompleted == null)) {
                this.DeleteProfessionalLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteProfessionalLineOperationCompleted);
            }
            this.InvokeAsync("DeleteProfessionalLine", new object[] {
                        id,
                        appNo}, this.DeleteProfessionalLineOperationCompleted, userState);
        }
        
        private void OnDeleteProfessionalLineOperationCompleted(object arg) {
            if ((this.DeleteProfessionalLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteProfessionalLineCompleted(this, new DeleteProfessionalLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:DeleteTrainingLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="DeleteTrainingLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteTrainingLine(int id, string appNo) {
            object[] results = this.Invoke("DeleteTrainingLine", new object[] {
                        id,
                        appNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteTrainingLineAsync(int id, string appNo) {
            this.DeleteTrainingLineAsync(id, appNo, null);
        }
        
        /// <remarks/>
        public void DeleteTrainingLineAsync(int id, string appNo, object userState) {
            if ((this.DeleteTrainingLineOperationCompleted == null)) {
                this.DeleteTrainingLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteTrainingLineOperationCompleted);
            }
            this.InvokeAsync("DeleteTrainingLine", new object[] {
                        id,
                        appNo}, this.DeleteTrainingLineOperationCompleted, userState);
        }
        
        private void OnDeleteTrainingLineOperationCompleted(object arg) {
            if ((this.DeleteTrainingLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteTrainingLineCompleted(this, new DeleteTrainingLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:DeleteProffessionalBodyLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="DeleteProffessionalBodyLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteProffessionalBodyLine(int id, string appNo) {
            object[] results = this.Invoke("DeleteProffessionalBodyLine", new object[] {
                        id,
                        appNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteProffessionalBodyLineAsync(int id, string appNo) {
            this.DeleteProffessionalBodyLineAsync(id, appNo, null);
        }
        
        /// <remarks/>
        public void DeleteProffessionalBodyLineAsync(int id, string appNo, object userState) {
            if ((this.DeleteProffessionalBodyLineOperationCompleted == null)) {
                this.DeleteProffessionalBodyLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteProffessionalBodyLineOperationCompleted);
            }
            this.InvokeAsync("DeleteProffessionalBodyLine", new object[] {
                        id,
                        appNo}, this.DeleteProffessionalBodyLineOperationCompleted, userState);
        }
        
        private void OnDeleteProffessionalBodyLineOperationCompleted(object arg) {
            if ((this.DeleteProffessionalBodyLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteProffessionalBodyLineCompleted(this, new DeleteProffessionalBodyLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:DeleteEmploymentHistoryLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="DeleteEmploymentHistoryLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteEmploymentHistoryLine(int id, string appNo) {
            object[] results = this.Invoke("DeleteEmploymentHistoryLine", new object[] {
                        id,
                        appNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteEmploymentHistoryLineAsync(int id, string appNo) {
            this.DeleteEmploymentHistoryLineAsync(id, appNo, null);
        }
        
        /// <remarks/>
        public void DeleteEmploymentHistoryLineAsync(int id, string appNo, object userState) {
            if ((this.DeleteEmploymentHistoryLineOperationCompleted == null)) {
                this.DeleteEmploymentHistoryLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteEmploymentHistoryLineOperationCompleted);
            }
            this.InvokeAsync("DeleteEmploymentHistoryLine", new object[] {
                        id,
                        appNo}, this.DeleteEmploymentHistoryLineOperationCompleted, userState);
        }
        
        private void OnDeleteEmploymentHistoryLineOperationCompleted(object arg) {
            if ((this.DeleteEmploymentHistoryLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteEmploymentHistoryLineCompleted(this, new DeleteEmploymentHistoryLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:DeleteRefereeLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="DeleteRefereeLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteRefereeLine(int id, string appNo) {
            object[] results = this.Invoke("DeleteRefereeLine", new object[] {
                        id,
                        appNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteRefereeLineAsync(int id, string appNo) {
            this.DeleteRefereeLineAsync(id, appNo, null);
        }
        
        /// <remarks/>
        public void DeleteRefereeLineAsync(int id, string appNo, object userState) {
            if ((this.DeleteRefereeLineOperationCompleted == null)) {
                this.DeleteRefereeLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteRefereeLineOperationCompleted);
            }
            this.InvokeAsync("DeleteRefereeLine", new object[] {
                        id,
                        appNo}, this.DeleteRefereeLineOperationCompleted, userState);
        }
        
        private void OnDeleteRefereeLineOperationCompleted(object arg) {
            if ((this.DeleteRefereeLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteRefereeLineCompleted(this, new DeleteRefereeLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddDeclaration", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddDeclaration_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddDeclaration(bool declaration, string appNo) {
            object[] results = this.Invoke("AddDeclaration", new object[] {
                        declaration,
                        appNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddDeclarationAsync(bool declaration, string appNo) {
            this.AddDeclarationAsync(declaration, appNo, null);
        }
        
        /// <remarks/>
        public void AddDeclarationAsync(bool declaration, string appNo, object userState) {
            if ((this.AddDeclarationOperationCompleted == null)) {
                this.AddDeclarationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddDeclarationOperationCompleted);
            }
            this.InvokeAsync("AddDeclaration", new object[] {
                        declaration,
                        appNo}, this.AddDeclarationOperationCompleted, userState);
        }
        
        private void OnAddDeclarationOperationCompleted(object arg) {
            if ((this.AddDeclarationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddDeclarationCompleted(this, new AddDeclarationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:CreateAccountForExtenalApplicant" +
            "s", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="CreateAccountForExtenalApplicants_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateAccountForExtenalApplicants(string fname, string lname, string email, string password, string salt) {
            object[] results = this.Invoke("CreateAccountForExtenalApplicants", new object[] {
                        fname,
                        lname,
                        email,
                        password,
                        salt});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateAccountForExtenalApplicantsAsync(string fname, string lname, string email, string password, string salt) {
            this.CreateAccountForExtenalApplicantsAsync(fname, lname, email, password, salt, null);
        }
        
        /// <remarks/>
        public void CreateAccountForExtenalApplicantsAsync(string fname, string lname, string email, string password, string salt, object userState) {
            if ((this.CreateAccountForExtenalApplicantsOperationCompleted == null)) {
                this.CreateAccountForExtenalApplicantsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateAccountForExtenalApplicantsOperationCompleted);
            }
            this.InvokeAsync("CreateAccountForExtenalApplicants", new object[] {
                        fname,
                        lname,
                        email,
                        password,
                        salt}, this.CreateAccountForExtenalApplicantsOperationCompleted, userState);
        }
        
        private void OnCreateAccountForExtenalApplicantsOperationCompleted(object arg) {
            if ((this.CreateAccountForExtenalApplicantsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateAccountForExtenalApplicantsCompleted(this, new CreateAccountForExtenalApplicantsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:ForgotPasswordtForExtenalApplica" +
            "nts", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="ForgotPasswordtForExtenalApplicants_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ForgotPasswordtForExtenalApplicants(string email, string password, string salt) {
            object[] results = this.Invoke("ForgotPasswordtForExtenalApplicants", new object[] {
                        email,
                        password,
                        salt});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ForgotPasswordtForExtenalApplicantsAsync(string email, string password, string salt) {
            this.ForgotPasswordtForExtenalApplicantsAsync(email, password, salt, null);
        }
        
        /// <remarks/>
        public void ForgotPasswordtForExtenalApplicantsAsync(string email, string password, string salt, object userState) {
            if ((this.ForgotPasswordtForExtenalApplicantsOperationCompleted == null)) {
                this.ForgotPasswordtForExtenalApplicantsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnForgotPasswordtForExtenalApplicantsOperationCompleted);
            }
            this.InvokeAsync("ForgotPasswordtForExtenalApplicants", new object[] {
                        email,
                        password,
                        salt}, this.ForgotPasswordtForExtenalApplicantsOperationCompleted, userState);
        }
        
        private void OnForgotPasswordtForExtenalApplicantsOperationCompleted(object arg) {
            if ((this.ForgotPasswordtForExtenalApplicantsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ForgotPasswordtForExtenalApplicantsCompleted(this, new ForgotPasswordtForExtenalApplicantsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnNewPerformanceLogEntry2CompletedEventHandler(object sender, FnNewPerformanceLogEntry2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnNewPerformanceLogEntry2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnNewPerformanceLogEntry2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetPlogLines2CompletedEventHandler(object sender, FnGetPlogLines2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetPlogLines2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetPlogLines2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetSubPlogLines2CompletedEventHandler(object sender, FnGetSubPlogLines2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetSubPlogLines2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetSubPlogLines2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSuggestPlogLines2CompletedEventHandler(object sender, FnSuggestPlogLines2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSuggestPlogLines2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSuggestPlogLines2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSuggestPlogandSubPlogData2CompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnUpdatePerformanceTargetLinesDetails2CompletedEventHandler(object sender, FnUpdatePerformanceTargetLinesDetails2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnUpdatePerformanceTargetLinesDetails2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnUpdatePerformanceTargetLinesDetails2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnRemovePerformanceLogLine2CompletedEventHandler(object sender, FnRemovePerformanceLogLine2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnRemovePerformanceLogLine2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnRemovePerformanceLogLine2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnInsertPlogSubActivities2CompletedEventHandler(object sender, FnInsertPlogSubActivities2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertPlogSubActivities2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertPlogSubActivities2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSendPlogApproval2CompletedEventHandler(object sender, FnSendPlogApproval2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSendPlogApproval2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSendPlogApproval2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnCancelPlogApproval2CompletedEventHandler(object sender, FnCancelPlogApproval2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnCancelPlogApproval2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnCancelPlogApproval2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGeneratePlogReport2CompletedEventHandler(object sender, FnGeneratePlogReport2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGeneratePlogReport2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGeneratePlogReport2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteAccomplishmentCompletedEventHandler(object sender, DeleteAccomplishmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteAccomplishmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteAccomplishmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UpdateChecklistCriteriaCompletedEventHandler(object sender, UpdateChecklistCriteriaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateChecklistCriteriaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateChecklistCriteriaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteChecklistCriteriaCompletedEventHandler(object sender, DeleteChecklistCriteriaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteChecklistCriteriaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteChecklistCriteriaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CreateDailyWorkTicketRequestCompletedEventHandler(object sender, CreateDailyWorkTicketRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateDailyWorkTicketRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateDailyWorkTicketRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CreateDailyWorkTicketLineCompletedEventHandler(object sender, CreateDailyWorkTicketLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateDailyWorkTicketLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateDailyWorkTicketLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UpdateDailyWorkTicketLineCompletedEventHandler(object sender, UpdateDailyWorkTicketLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateDailyWorkTicketLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateDailyWorkTicketLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteDailyWorkTicketLineCompletedEventHandler(object sender, DeleteDailyWorkTicketLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteDailyWorkTicketLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteDailyWorkTicketLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SendDailyWorkTicketForApprovalCompletedEventHandler(object sender, SendDailyWorkTicketForApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendDailyWorkTicketForApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendDailyWorkTicketForApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CancelDailyWorkTicketApprovalCompletedEventHandler(object sender, CancelDailyWorkTicketApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelDailyWorkTicketApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelDailyWorkTicketApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CreateIndividualPerformanceContractCompletedEventHandler(object sender, CreateIndividualPerformanceContractCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateIndividualPerformanceContractCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateIndividualPerformanceContractCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SuggestObjectiveLinesCompletedEventHandler(object sender, SuggestObjectiveLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SuggestObjectiveLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SuggestObjectiveLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void PopulateGoalsHubCompletedEventHandler(object sender, PopulateGoalsHubCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PopulateGoalsHubCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PopulateGoalsHubCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteObjectAndInitiativeLineCompletedEventHandler(object sender, DeleteObjectAndInitiativeLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteObjectAndInitiativeLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteObjectAndInitiativeLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnCreateNewFileRequsitionCompletedEventHandler(object sender, FnCreateNewFileRequsitionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnCreateNewFileRequsitionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnCreateNewFileRequsitionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnCreateNewFileRequsitionLinesCompletedEventHandler(object sender, FnCreateNewFileRequsitionLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnCreateNewFileRequsitionLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnCreateNewFileRequsitionLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnUpdateFileRequsitionCompletedEventHandler(object sender, FnUpdateFileRequsitionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnUpdateFileRequsitionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnUpdateFileRequsitionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnUpdateFileRequsitionLinesCompletedEventHandler(object sender, FnUpdateFileRequsitionLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnUpdateFileRequsitionLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnUpdateFileRequsitionLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SendFileMovementforApprovalCompletedEventHandler(object sender, SendFileMovementforApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendFileMovementforApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendFileMovementforApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SendVehicleMaintenancetforApprovalCompletedEventHandler(object sender, SendVehicleMaintenancetforApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendVehicleMaintenancetforApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendVehicleMaintenancetforApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CancelVehicleMaintenancetforApprovalCompletedEventHandler(object sender, CancelVehicleMaintenancetforApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelVehicleMaintenancetforApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelVehicleMaintenancetforApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteFileMovementRecordLineCompletedEventHandler(object sender, DeleteFileMovementRecordLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteFileMovementRecordLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteFileMovementRecordLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CancelFileRecordApprovalCompletedEventHandler(object sender, CancelFileRecordApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelFileRecordApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelFileRecordApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnNewIndividualPerformanceContractCompletedEventHandler(object sender, FnNewIndividualPerformanceContractCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnNewIndividualPerformanceContractCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnNewIndividualPerformanceContractCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSuggestObjectiveLinesCompletedEventHandler(object sender, FnSuggestObjectiveLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSuggestObjectiveLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSuggestObjectiveLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSuggestAppraisalObjectiveLinesCompletedEventHandler(object sender, FnSuggestAppraisalObjectiveLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSuggestAppraisalObjectiveLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSuggestAppraisalObjectiveLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSuggestJDCompletedEventHandler(object sender, FnSuggestJDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSuggestJDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSuggestJDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSuggestCompetencyTemplateCompletedEventHandler(object sender, FnSuggestCompetencyTemplateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSuggestCompetencyTemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSuggestCompetencyTemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnNewCoreSecondaryMandateDetailsCompletedEventHandler(object sender, FnNewCoreSecondaryMandateDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnNewCoreSecondaryMandateDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnNewCoreSecondaryMandateDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnUpdateObjectiveLinesDetailsCompletedEventHandler(object sender, FnUpdateObjectiveLinesDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnUpdateObjectiveLinesDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnUpdateObjectiveLinesDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnUpdateJobDescriptionDetailsCompletedEventHandler(object sender, FnUpdateJobDescriptionDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnUpdateJobDescriptionDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnUpdateJobDescriptionDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnUpdatePerformanceTargetLinesDetailsCompletedEventHandler(object sender, FnUpdatePerformanceTargetLinesDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnUpdatePerformanceTargetLinesDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnUpdatePerformanceTargetLinesDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnNewPerformanceLogEntryCompletedEventHandler(object sender, FnNewPerformanceLogEntryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnNewPerformanceLogEntryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnNewPerformanceLogEntryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnNewPerformanceAppraisalEntryCompletedEventHandler(object sender, FnNewPerformanceAppraisalEntryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnNewPerformanceAppraisalEntryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnNewPerformanceAppraisalEntryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnDeleteIndividualCardSubActivitiesCompletedEventHandler(object sender, FnDeleteIndividualCardSubActivitiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnDeleteIndividualCardSubActivitiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnDeleteIndividualCardSubActivitiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnDeleteIndividualCardJDDescriptionSubActivitiesCompletedEventHandler(object sender, FnDeleteIndividualCardJDDescriptionSubActivitiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnDeleteIndividualCardJDDescriptionSubActivitiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnDeleteIndividualCardJDDescriptionSubActivitiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnDeleteIndividualActivitiesCompletedEventHandler(object sender, FnDeleteIndividualActivitiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnDeleteIndividualActivitiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnDeleteIndividualActivitiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnDeleteAdditionalActivitiesCompletedEventHandler(object sender, FnDeleteAdditionalActivitiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnDeleteAdditionalActivitiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnDeleteAdditionalActivitiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnDeletePlogLinesCompletedEventHandler(object sender, FnDeletePlogLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnDeletePlogLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnDeletePlogLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnNewIndividualCardSubActivitiesCompletedEventHandler(object sender, FnNewIndividualCardSubActivitiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnNewIndividualCardSubActivitiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnNewIndividualCardSubActivitiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnUpdateIndividualCardSubActivitiesCompletedEventHandler(object sender, FnUpdateIndividualCardSubActivitiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnUpdateIndividualCardSubActivitiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnUpdateIndividualCardSubActivitiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnNewIndividualCardJobDescriptionSubActivitiesCompletedEventHandler(object sender, FnNewIndividualCardJobDescriptionSubActivitiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnNewIndividualCardJobDescriptionSubActivitiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnNewIndividualCardJobDescriptionSubActivitiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnUpdateIndividualCardJobDescirptionSubActivitiesCompletedEventHandler(object sender, FnUpdateIndividualCardJobDescirptionSubActivitiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnUpdateIndividualCardJobDescirptionSubActivitiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnUpdateIndividualCardJobDescirptionSubActivitiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSuggestPlogLinesCompletedEventHandler(object sender, FnSuggestPlogLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSuggestPlogLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSuggestPlogLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetImprestApproverCommentsCompletedEventHandler(object sender, FnGetImprestApproverCommentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetImprestApproverCommentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetImprestApproverCommentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SendPerformanceContractforApprovalCompletedEventHandler(object sender, SendPerformanceContractforApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendPerformanceContractforApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendPerformanceContractforApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSubmitSelectedPLogCategoriesCompletedEventHandler(object sender, FnSubmitSelectedPLogCategoriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitSelectedPLogCategoriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitSelectedPLogCategoriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSubmitSelectedAddPLogCategoriesCompletedEventHandler(object sender, FnSubmitSelectedAddPLogCategoriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitSelectedAddPLogCategoriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitSelectedAddPLogCategoriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSubmitSelectedJDPLogCategoriesCompletedEventHandler(object sender, FnSubmitSelectedJDPLogCategoriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitSelectedJDPLogCategoriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitSelectedJDPLogCategoriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSubmitSelectedPerformanceContractCategoriesCompletedEventHandler(object sender, FnSubmitSelectedPerformanceContractCategoriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitSelectedPerformanceContractCategoriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitSelectedPerformanceContractCategoriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnUpdateJobContractDescriptionDetailsCompletedEventHandler(object sender, FnUpdateJobContractDescriptionDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnUpdateJobContractDescriptionDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnUpdateJobContractDescriptionDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnNewIndividualCardAdditionalActivitiesCompletedEventHandler(object sender, FnNewIndividualCardAdditionalActivitiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnNewIndividualCardAdditionalActivitiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnNewIndividualCardAdditionalActivitiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnAddAditionalInitiativesTargetsCompletedEventHandler(object sender, FnAddAditionalInitiativesTargetsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnAddAditionalInitiativesTargetsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnAddAditionalInitiativesTargetsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnNewJobDescriptionDetailsCompletedEventHandler(object sender, FnNewJobDescriptionDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnNewJobDescriptionDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnNewJobDescriptionDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnDeletePerformanceContractCategoriesCompletedEventHandler(object sender, FnDeletePerformanceContractCategoriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnDeletePerformanceContractCategoriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnDeletePerformanceContractCategoriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnDeleteAdditionalPerformanceContractCategoriesCompletedEventHandler(object sender, FnDeleteAdditionalPerformanceContractCategoriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnDeleteAdditionalPerformanceContractCategoriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnDeleteAdditionalPerformanceContractCategoriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnDeleteJobDescriptionCompletedEventHandler(object sender, FnDeleteJobDescriptionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnDeleteJobDescriptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnDeleteJobDescriptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FNewPerformanceTargetLinesDetailsCompletedEventHandler(object sender, FNewPerformanceTargetLinesDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FNewPerformanceTargetLinesDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FNewPerformanceTargetLinesDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnCreateCandidateDocumentsLinkCompletedEventHandler(object sender, FnCreateCandidateDocumentsLinkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnCreateCandidateDocumentsLinkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnCreateCandidateDocumentsLinkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnCreateBusinessResearchResponseCompletedEventHandler(object sender, FnCreateBusinessResearchResponseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnCreateBusinessResearchResponseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnCreateBusinessResearchResponseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnCreateBRResponseQuestionsCompletedEventHandler(object sender, FnCreateBRResponseQuestionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnCreateBRResponseQuestionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnCreateBRResponseQuestionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnInsertJDTargetsCompletedEventHandler(object sender, FnInsertJDTargetsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertJDTargetsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertJDTargetsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSubmitStandardAppraisal1CompletedEventHandler(object sender, FnSubmitStandardAppraisal1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitStandardAppraisal1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitStandardAppraisal1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnInsertStandardAppraisalObjectivesCompletedEventHandler(object sender, FnInsertStandardAppraisalObjectivesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertStandardAppraisalObjectivesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertStandardAppraisalObjectivesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnInsertStandardAppraisalProficiencyCompletedEventHandler(object sender, FnInsertStandardAppraisalProficiencyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertStandardAppraisalProficiencyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertStandardAppraisalProficiencyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGeneratePCReportCompletedEventHandler(object sender, FnGeneratePCReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGeneratePCReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGeneratePCReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGeneratePCSIReportCompletedEventHandler(object sender, FnGeneratePCSIReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGeneratePCSIReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGeneratePCSIReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGenerateSubIndicatorsReportCompletedEventHandler(object sender, FnGenerateSubIndicatorsReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGenerateSubIndicatorsReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGenerateSubIndicatorsReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGenerateBoardPCReportCompletedEventHandler(object sender, FnGenerateBoardPCReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGenerateBoardPCReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGenerateBoardPCReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGenerateCSPReportCompletedEventHandler(object sender, FnGenerateCSPReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGenerateCSPReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGenerateCSPReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGenerateAnnualWorkPlanReportCompletedEventHandler(object sender, FnGenerateAnnualWorkPlanReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGenerateAnnualWorkPlanReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGenerateAnnualWorkPlanReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGeneratePLogReportCompletedEventHandler(object sender, FnGeneratePLogReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGeneratePLogReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGeneratePLogReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGenerateStandardAppraisalReportCompletedEventHandler(object sender, FnGenerateStandardAppraisalReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGenerateStandardAppraisalReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGenerateStandardAppraisalReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GenerateRMReportCompletedEventHandler(object sender, GenerateRMReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerateRMReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenerateRMReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GenerateManagementPlanSummeryCompletedEventHandler(object sender, GenerateManagementPlanSummeryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerateManagementPlanSummeryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenerateManagementPlanSummeryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GenerateRiskFrameworkTestCompletedEventHandler(object sender, GenerateRiskFrameworkTestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerateRiskFrameworkTestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenerateRiskFrameworkTestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CreateIctRequestCompletedEventHandler(object sender, CreateIctRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateIctRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateIctRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ProvideIctfeedbackCompletedEventHandler(object sender, ProvideIctfeedbackCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProvideIctfeedbackCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProvideIctfeedbackCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UpdateIctRequestCompletedEventHandler(object sender, UpdateIctRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateIctRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateIctRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AssignHelpdeskRequestCompletedEventHandler(object sender, AssignHelpdeskRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AssignHelpdeskRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AssignHelpdeskRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void EscalatedHelpdeskRequestCompletedEventHandler(object sender, EscalatedHelpdeskRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EscalatedHelpdeskRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EscalatedHelpdeskRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ResolveHelpdeskRequestCompletedEventHandler(object sender, ResolveHelpdeskRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ResolveHelpdeskRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ResolveHelpdeskRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ReopenHelpdeskRequestCompletedEventHandler(object sender, ReopenHelpdeskRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReopenHelpdeskRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReopenHelpdeskRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FngetImprestLineNoCompletedEventHandler(object sender, FngetImprestLineNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FngetImprestLineNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FngetImprestLineNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnInsertOpenSurveyResponseCompletedEventHandler(object sender, FnInsertOpenSurveyResponseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertOpenSurveyResponseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertOpenSurveyResponseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnInsertMultipleSurveyResponseCompletedEventHandler(object sender, FnInsertMultipleSurveyResponseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertMultipleSurveyResponseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertMultipleSurveyResponseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnInsertSingleSurveyResponseCompletedEventHandler(object sender, FnInsertSingleSurveyResponseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertSingleSurveyResponseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertSingleSurveyResponseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnInsertBranchingSurveyResponseCompletedEventHandler(object sender, FnInsertBranchingSurveyResponseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertBranchingSurveyResponseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertBranchingSurveyResponseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSubmitSurveyCompletedEventHandler(object sender, FnSubmitSurveyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitSurveyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitSurveyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddImprestSharepointLinksCompletedEventHandler(object sender, AddImprestSharepointLinksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddImprestSharepointLinksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddImprestSharepointLinksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddLeaveSharepointLinksCompletedEventHandler(object sender, AddLeaveSharepointLinksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddLeaveSharepointLinksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddLeaveSharepointLinksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddImprestSurrenderSharepointLinksCompletedEventHandler(object sender, AddImprestSurrenderSharepointLinksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddImprestSurrenderSharepointLinksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddImprestSurrenderSharepointLinksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddStaffClaimSharepointLinksCompletedEventHandler(object sender, AddStaffClaimSharepointLinksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddStaffClaimSharepointLinksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddStaffClaimSharepointLinksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddStoreRequsitionSharepointLinksCompletedEventHandler(object sender, AddStoreRequsitionSharepointLinksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddStoreRequsitionSharepointLinksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddStoreRequsitionSharepointLinksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddPurchaseRequisitionSharepointLinksCompletedEventHandler(object sender, AddPurchaseRequisitionSharepointLinksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddPurchaseRequisitionSharepointLinksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddPurchaseRequisitionSharepointLinksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddFleetRequisitionSharepointLinksCompletedEventHandler(object sender, AddFleetRequisitionSharepointLinksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddFleetRequisitionSharepointLinksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddFleetRequisitionSharepointLinksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddemployeepassportphotoCompletedEventHandler(object sender, AddemployeepassportphotoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddemployeepassportphotoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddemployeepassportphotoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnLockStaffPerformanceContractCompletedEventHandler(object sender, FnLockStaffPerformanceContractCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnLockStaffPerformanceContractCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnLockStaffPerformanceContractCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSignStaffPerformanceContractCompletedEventHandler(object sender, FnSignStaffPerformanceContractCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSignStaffPerformanceContractCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSignStaffPerformanceContractCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CreateNewTrainingFeedbackCompletedEventHandler(object sender, CreateNewTrainingFeedbackCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateNewTrainingFeedbackCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateNewTrainingFeedbackCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CreateTrainingFeedbackLinesCompletedEventHandler(object sender, CreateTrainingFeedbackLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateTrainingFeedbackLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateTrainingFeedbackLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CreateSubmitTrainingFeedbackCompletedEventHandler(object sender, CreateSubmitTrainingFeedbackCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateSubmitTrainingFeedbackCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateSubmitTrainingFeedbackCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CreateNewTrainingEvaluationCompletedEventHandler(object sender, CreateNewTrainingEvaluationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateNewTrainingEvaluationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateNewTrainingEvaluationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnInsertEvaluationLinesCompletedEventHandler(object sender, FnInsertEvaluationLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertEvaluationLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertEvaluationLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddTrainingParticipantsCompletedEventHandler(object sender, AddTrainingParticipantsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddTrainingParticipantsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddTrainingParticipantsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void EditTrainingParticipantsCompletedEventHandler(object sender, EditTrainingParticipantsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditTrainingParticipantsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditTrainingParticipantsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteTrainingParticipantsCompletedEventHandler(object sender, DeleteTrainingParticipantsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteTrainingParticipantsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteTrainingParticipantsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddTrainingCostCompletedEventHandler(object sender, AddTrainingCostCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddTrainingCostCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddTrainingCostCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void RemoveTrainingCostCompletedEventHandler(object sender, RemoveTrainingCostCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveTrainingCostCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveTrainingCostCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSubmitStandardAppraisalCompletedEventHandler(object sender, FnSubmitStandardAppraisalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitStandardAppraisalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitStandardAppraisalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnCancelSubmitofStandardAppraisalCompletedEventHandler(object sender, FnCancelSubmitofStandardAppraisalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnCancelSubmitofStandardAppraisalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnCancelSubmitofStandardAppraisalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSubmitStandardAppraisalObjCompletedEventHandler(object sender, FnSubmitStandardAppraisalObjCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitStandardAppraisalObjCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitStandardAppraisalObjCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSubmitStandardAppraisalPECompletedEventHandler(object sender, FnSubmitStandardAppraisalPECompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitStandardAppraisalPECompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitStandardAppraisalPECompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnInsertStandardAppraisalPIPCompletedEventHandler(object sender, FnInsertStandardAppraisalPIPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertStandardAppraisalPIPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertStandardAppraisalPIPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnEditStandardAppraisalPIPCompletedEventHandler(object sender, FnEditStandardAppraisalPIPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnEditStandardAppraisalPIPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnEditStandardAppraisalPIPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnRemoveStandardAppraisalPIPCompletedEventHandler(object sender, FnRemoveStandardAppraisalPIPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnRemoveStandardAppraisalPIPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnRemoveStandardAppraisalPIPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnInsertStandardAppraisalTrainigNeedsCompletedEventHandler(object sender, FnInsertStandardAppraisalTrainigNeedsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertStandardAppraisalTrainigNeedsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertStandardAppraisalTrainigNeedsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnRemoveStandardAppraisalTrainigNeedsCompletedEventHandler(object sender, FnRemoveStandardAppraisalTrainigNeedsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnRemoveStandardAppraisalTrainigNeedsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnRemoveStandardAppraisalTrainigNeedsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnEditStandardAppraisalTrainigNeedsCompletedEventHandler(object sender, FnEditStandardAppraisalTrainigNeedsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnEditStandardAppraisalTrainigNeedsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnEditStandardAppraisalTrainigNeedsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSubmitStandardAppraisalConfirmationCompletedEventHandler(object sender, FnSubmitStandardAppraisalConfirmationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitStandardAppraisalConfirmationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitStandardAppraisalConfirmationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSendAppraisalEmailCompletedEventHandler(object sender, FnSendAppraisalEmailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSendAppraisalEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSendAppraisalEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnAppraisalSuggestObjectivesOutcomesCompletedEventHandler(object sender, FnAppraisalSuggestObjectivesOutcomesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnAppraisalSuggestObjectivesOutcomesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnAppraisalSuggestObjectivesOutcomesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnNewStandardAppraisalCompletedEventHandler(object sender, FnNewStandardAppraisalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnNewStandardAppraisalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnNewStandardAppraisalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnLoadCompetenciesCompletedEventHandler(object sender, FnLoadCompetenciesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnLoadCompetenciesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnLoadCompetenciesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSubmitSelectedPLogCategories2CompletedEventHandler(object sender, FnSubmitSelectedPLogCategories2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitSelectedPLogCategories2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitSelectedPLogCategories2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ResetPasswordCompletedEventHandler(object sender, ResetPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ResetPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ResetPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void LeaveApplicationCompletedEventHandler(object sender, LeaveApplicationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LeaveApplicationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LeaveApplicationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GeneratePayslipCompletedEventHandler(object sender, GeneratePayslipCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GeneratePayslipCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GeneratePayslipCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CreateNewTrainingRequestCompletedEventHandler(object sender, CreateNewTrainingRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateNewTrainingRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateNewTrainingRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CreateNewTrainingNeedsLinesCompletedEventHandler(object sender, CreateNewTrainingNeedsLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateNewTrainingNeedsLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateNewTrainingNeedsLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SendTrainingNeedsApprovalCompletedEventHandler(object sender, SendTrainingNeedsApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendTrainingNeedsApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendTrainingNeedsApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CancelTrainingNeedsApprovalCompletedEventHandler(object sender, CancelTrainingNeedsApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelTrainingNeedsApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelTrainingNeedsApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CreateNewTrainingApplicationCompletedEventHandler(object sender, CreateNewTrainingApplicationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateNewTrainingApplicationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateNewTrainingApplicationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CreateTrainingRequisitionCompletedEventHandler(object sender, CreateTrainingRequisitionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateTrainingRequisitionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateTrainingRequisitionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SendTrainingRequestApprovalCompletedEventHandler(object sender, SendTrainingRequestApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendTrainingRequestApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendTrainingRequestApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CancelTrainingRequestApprovalCompletedEventHandler(object sender, CancelTrainingRequestApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelTrainingRequestApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelTrainingRequestApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CreateTrainingApplicationLinesCompletedEventHandler(object sender, CreateTrainingApplicationLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateTrainingApplicationLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateTrainingApplicationLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnEditTrainingApplicationLinesCompletedEventHandler(object sender, FnEditTrainingApplicationLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnEditTrainingApplicationLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnEditTrainingApplicationLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CreateTrainingReportCompletedEventHandler(object sender, CreateTrainingReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateTrainingReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateTrainingReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnTrainingCostsCompletedEventHandler(object sender, FnTrainingCostsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnTrainingCostsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnTrainingCostsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnDeleteTrainingApplicationLinesCompletedEventHandler(object sender, FnDeleteTrainingApplicationLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnDeleteTrainingApplicationLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnDeleteTrainingApplicationLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnCancelIndividualScorecardApprovalCompletedEventHandler(object sender, FnCancelIndividualScorecardApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnCancelIndividualScorecardApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnCancelIndividualScorecardApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSubmitSelectedAdditionalInitiativesCompletedEventHandler(object sender, FnSubmitSelectedAdditionalInitiativesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitSelectedAdditionalInitiativesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitSelectedAdditionalInitiativesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSendIndividualScorecardApprovalCompletedEventHandler(object sender, FnSendIndividualScorecardApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSendIndividualScorecardApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSendIndividualScorecardApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SendTrainingApplicationApprovalCompletedEventHandler(object sender, SendTrainingApplicationApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendTrainingApplicationApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendTrainingApplicationApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CreateNewTrainingFeedback1CompletedEventHandler(object sender, CreateNewTrainingFeedback1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateNewTrainingFeedback1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateNewTrainingFeedback1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CreateTrainingFeedbackLines1CompletedEventHandler(object sender, CreateTrainingFeedbackLines1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateTrainingFeedbackLines1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateTrainingFeedbackLines1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnEditTrainingFeedbackLinesCompletedEventHandler(object sender, FnEditTrainingFeedbackLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnEditTrainingFeedbackLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnEditTrainingFeedbackLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnDeleteTrainingFeedbackLinesCompletedEventHandler(object sender, FnDeleteTrainingFeedbackLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnDeleteTrainingFeedbackLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnDeleteTrainingFeedbackLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CreateTrainingEvaluationCompletedEventHandler(object sender, CreateTrainingEvaluationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateTrainingEvaluationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateTrainingEvaluationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CreateTrainingEvaluationLinesCompletedEventHandler(object sender, CreateTrainingEvaluationLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateTrainingEvaluationLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateTrainingEvaluationLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CreateNewDailyWorkTicketCompletedEventHandler(object sender, CreateNewDailyWorkTicketCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateNewDailyWorkTicketCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateNewDailyWorkTicketCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CreateNewDailyWorkTicketLinesCompletedEventHandler(object sender, CreateNewDailyWorkTicketLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateNewDailyWorkTicketLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateNewDailyWorkTicketLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnEditDailyWorkTicketLinesCompletedEventHandler(object sender, FnEditDailyWorkTicketLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnEditDailyWorkTicketLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnEditDailyWorkTicketLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnDeleteDailyTicketLinesCompletedEventHandler(object sender, FnDeleteDailyTicketLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnDeleteDailyTicketLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnDeleteDailyTicketLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnEditTrainingNeedsRequestLinesCompletedEventHandler(object sender, FnEditTrainingNeedsRequestLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnEditTrainingNeedsRequestLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnEditTrainingNeedsRequestLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnDeleteTrainingNeedsLinesCompletedEventHandler(object sender, FnDeleteTrainingNeedsLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnDeleteTrainingNeedsLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnDeleteTrainingNeedsLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGenerateTrainingApplicationReportCompletedEventHandler(object sender, FnGenerateTrainingApplicationReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGenerateTrainingApplicationReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGenerateTrainingApplicationReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGenerateTrainingPlanReportCompletedEventHandler(object sender, FnGenerateTrainingPlanReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGenerateTrainingPlanReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGenerateTrainingPlanReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGenerateTrainingFeedbackReportCompletedEventHandler(object sender, FnGenerateTrainingFeedbackReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGenerateTrainingFeedbackReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGenerateTrainingFeedbackReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGenerateTrainingEvaluationReportCompletedEventHandler(object sender, FnGenerateTrainingEvaluationReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGenerateTrainingEvaluationReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGenerateTrainingEvaluationReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GenerateP9CompletedEventHandler(object sender, GenerateP9CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerateP9CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenerateP9CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void RegisterCompletedEventHandler(object sender, RegisterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RegisterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RegisterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddHobbyCompletedEventHandler(object sender, AddHobbyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddHobbyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddHobbyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UpdateGeneralDetailsCompletedEventHandler(object sender, UpdateGeneralDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateGeneralDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateGeneralDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UpdatePersonalDetailsCompletedEventHandler(object sender, UpdatePersonalDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdatePersonalDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdatePersonalDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UpdateCommunicationDetailsCompletedEventHandler(object sender, UpdateCommunicationDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateCommunicationDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateCommunicationDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddRefereeCompletedEventHandler(object sender, AddRefereeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddRefereeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddRefereeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddQualificationCompletedEventHandler(object sender, AddQualificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddQualificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddQualificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ApplyCompletedEventHandler(object sender, ApplyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ApplyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ApplyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ImprestGeneralDetailsCompletedEventHandler(object sender, ImprestGeneralDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ImprestGeneralDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ImprestGeneralDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetImprestObjectiveCompletedEventHandler(object sender, GetImprestObjectiveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetImprestObjectiveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetImprestObjectiveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddTeamMemberCompletedEventHandler(object sender, AddTeamMemberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddTeamMemberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddTeamMemberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddFuelCompletedEventHandler(object sender, AddFuelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddFuelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddFuelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddCasualsCompletedEventHandler(object sender, AddCasualsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddCasualsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddCasualsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddOtherCostsCompletedEventHandler(object sender, AddOtherCostsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddOtherCostsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddOtherCostsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SendImprestMemoApprovalCompletedEventHandler(object sender, SendImprestMemoApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendImprestMemoApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendImprestMemoApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CreateImprestSurrenderCompletedEventHandler(object sender, CreateImprestSurrenderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateImprestSurrenderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateImprestSurrenderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SendImprestSurrenderApprovalCompletedEventHandler(object sender, SendImprestSurrenderApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendImprestSurrenderApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendImprestSurrenderApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UpdateSurrenderLineCompletedEventHandler(object sender, UpdateSurrenderLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateSurrenderLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateSurrenderLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CreatePurchaseRequisitionCompletedEventHandler(object sender, CreatePurchaseRequisitionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreatePurchaseRequisitionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreatePurchaseRequisitionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CreatePurchaseStoreRequisitionCompletedEventHandler(object sender, CreatePurchaseStoreRequisitionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreatePurchaseStoreRequisitionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreatePurchaseStoreRequisitionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CreateRequisitionLineCompletedEventHandler(object sender, CreateRequisitionLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateRequisitionLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateRequisitionLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SendPurchaseRequisitionApprovalCompletedEventHandler(object sender, SendPurchaseRequisitionApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendPurchaseRequisitionApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendPurchaseRequisitionApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CreateFleetRequisitionCompletedEventHandler(object sender, CreateFleetRequisitionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateFleetRequisitionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateFleetRequisitionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddFleetRequisitionStaffCompletedEventHandler(object sender, AddFleetRequisitionStaffCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddFleetRequisitionStaffCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddFleetRequisitionStaffCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddFleetRequisitioNonStaffCompletedEventHandler(object sender, AddFleetRequisitioNonStaffCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddFleetRequisitioNonStaffCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddFleetRequisitioNonStaffCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddFleetRequisitioLoadItemsCompletedEventHandler(object sender, AddFleetRequisitioLoadItemsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddFleetRequisitioLoadItemsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddFleetRequisitioLoadItemsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SendFleetRequisitionApprovalCompletedEventHandler(object sender, SendFleetRequisitionApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendFleetRequisitionApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendFleetRequisitionApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void RemoveStaffFromTravelRequisitionCompletedEventHandler(object sender, RemoveStaffFromTravelRequisitionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveStaffFromTravelRequisitionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveStaffFromTravelRequisitionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void RemoveLoadItemsTravelRequisitionCompletedEventHandler(object sender, RemoveLoadItemsTravelRequisitionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveLoadItemsTravelRequisitionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveLoadItemsTravelRequisitionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void RemoveNonStaffTravelRequisitionCompletedEventHandler(object sender, RemoveNonStaffTravelRequisitionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveNonStaffTravelRequisitionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveNonStaffTravelRequisitionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void RemoveFuelDetailsCompletedEventHandler(object sender, RemoveFuelDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveFuelDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveFuelDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void RemoveMemberFromImprestMemoCompletedEventHandler(object sender, RemoveMemberFromImprestMemoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveMemberFromImprestMemoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveMemberFromImprestMemoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddTripRequisitionDetailsCompletedEventHandler(object sender, AddTripRequisitionDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddTripRequisitionDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddTripRequisitionDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddTripAccidentDetailsCompletedEventHandler(object sender, AddTripAccidentDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddTripAccidentDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddTripAccidentDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddVehicleMaintenanceRequestDetailsCompletedEventHandler(object sender, AddVehicleMaintenanceRequestDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddVehicleMaintenanceRequestDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddVehicleMaintenanceRequestDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SubmitVehicleMaintenanceRequestDetailsCompletedEventHandler(object sender, SubmitVehicleMaintenanceRequestDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SubmitVehicleMaintenanceRequestDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SubmitVehicleMaintenanceRequestDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SubmitVehicleFuelRequestDetailsCompletedEventHandler(object sender, SubmitVehicleFuelRequestDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SubmitVehicleFuelRequestDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SubmitVehicleFuelRequestDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SendMaintenanceRequisitionApprovalCompletedEventHandler(object sender, SendMaintenanceRequisitionApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendMaintenanceRequisitionApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendMaintenanceRequisitionApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteTripAccidentDetailsCompletedEventHandler(object sender, DeleteTripAccidentDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteTripAccidentDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteTripAccidentDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void EditTeamMemberCompletedEventHandler(object sender, EditTeamMemberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditTeamMemberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditTeamMemberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void RemoveFuelFromImprestMemoCompletedEventHandler(object sender, RemoveFuelFromImprestMemoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveFuelFromImprestMemoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveFuelFromImprestMemoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void EditFuelCompletedEventHandler(object sender, EditFuelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditFuelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditFuelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void RemoveCasualsCompletedEventHandler(object sender, RemoveCasualsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveCasualsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveCasualsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void EditCasualsCompletedEventHandler(object sender, EditCasualsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditCasualsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditCasualsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void RemoveOtherCostsCompletedEventHandler(object sender, RemoveOtherCostsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveOtherCostsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveOtherCostsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void EditOtherCostsCompletedEventHandler(object sender, EditOtherCostsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditOtherCostsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditOtherCostsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GenerateLeaveFormCompletedEventHandler(object sender, GenerateLeaveFormCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerateLeaveFormCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenerateLeaveFormCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SendRecordForApprovalCompletedEventHandler(object sender, SendRecordForApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendRecordForApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendRecordForApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CancelRecordApprovalCompletedEventHandler(object sender, CancelRecordApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelRecordApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelRecordApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ChangePasswordCompletedEventHandler(object sender, ChangePasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChangePasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangePasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteRequisitionLineCompletedEventHandler(object sender, DeleteRequisitionLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteRequisitionLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteRequisitionLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SendStaffClaimApprovalCompletedEventHandler(object sender, SendStaffClaimApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendStaffClaimApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendStaffClaimApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CreateStaffClaimCompletedEventHandler(object sender, CreateStaffClaimCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateStaffClaimCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateStaffClaimCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteStaffClaimLineCompletedEventHandler(object sender, DeleteStaffClaimLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteStaffClaimLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteStaffClaimLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CreateStaffClaimLineCompletedEventHandler(object sender, CreateStaffClaimLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateStaffClaimLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateStaffClaimLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void EditStaffClaimLineCompletedEventHandler(object sender, EditStaffClaimLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditStaffClaimLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditStaffClaimLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SendStoreRequisitionApprovalCompletedEventHandler(object sender, SendStoreRequisitionApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendStoreRequisitionApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendStoreRequisitionApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CreateStoreRequisitionLineCompletedEventHandler(object sender, CreateStoreRequisitionLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateStoreRequisitionLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateStoreRequisitionLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ApplyexternalHrJobsCompletedEventHandler(object sender, ApplyexternalHrJobsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ApplyexternalHrJobsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ApplyexternalHrJobsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ApplyinternalHrJobsCompletedEventHandler(object sender, ApplyinternalHrJobsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ApplyinternalHrJobsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ApplyinternalHrJobsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddEmploymentHistoryCompletedEventHandler(object sender, AddEmploymentHistoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddEmploymentHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddEmploymentHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddAcademicQualificationsCompletedEventHandler(object sender, AddAcademicQualificationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddAcademicQualificationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddAcademicQualificationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddProffessionalQualificationsCompletedEventHandler(object sender, AddProffessionalQualificationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddProffessionalQualificationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddProffessionalQualificationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddTrainingAttendedCompletedEventHandler(object sender, AddTrainingAttendedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddTrainingAttendedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddTrainingAttendedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddProfessionalBodyCompletedEventHandler(object sender, AddProfessionalBodyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddProfessionalBodyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddProfessionalBodyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddApplicantAccomplishmentCompletedEventHandler(object sender, AddApplicantAccomplishmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddApplicantAccomplishmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddApplicantAccomplishmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddAbilityDetails_AccomplishmentCompletedEventHandler(object sender, AddAbilityDetails_AccomplishmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddAbilityDetails_AccomplishmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddAbilityDetails_AccomplishmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddAbilityDetailsCompletedEventHandler(object sender, AddAbilityDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddAbilityDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddAbilityDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CreateRefereeCompletedEventHandler(object sender, CreateRefereeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateRefereeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateRefereeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddCurrentDutiesSkillsCompletedEventHandler(object sender, AddCurrentDutiesSkillsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddCurrentDutiesSkillsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddCurrentDutiesSkillsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddOtherPersonalDetails1CompletedEventHandler(object sender, AddOtherPersonalDetails1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddOtherPersonalDetails1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddOtherPersonalDetails1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddOtherPersonalDetailsCompletedEventHandler(object sender, AddOtherPersonalDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddOtherPersonalDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddOtherPersonalDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddDutiesDetailsCompletedEventHandler(object sender, AddDutiesDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddDutiesDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddDutiesDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteAcademicLineCompletedEventHandler(object sender, DeleteAcademicLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteAcademicLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteAcademicLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteProfessionalLineCompletedEventHandler(object sender, DeleteProfessionalLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteProfessionalLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteProfessionalLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteTrainingLineCompletedEventHandler(object sender, DeleteTrainingLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteTrainingLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteTrainingLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteProffessionalBodyLineCompletedEventHandler(object sender, DeleteProffessionalBodyLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteProffessionalBodyLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteProffessionalBodyLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteEmploymentHistoryLineCompletedEventHandler(object sender, DeleteEmploymentHistoryLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteEmploymentHistoryLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteEmploymentHistoryLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteRefereeLineCompletedEventHandler(object sender, DeleteRefereeLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteRefereeLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteRefereeLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddDeclarationCompletedEventHandler(object sender, AddDeclarationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddDeclarationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddDeclarationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CreateAccountForExtenalApplicantsCompletedEventHandler(object sender, CreateAccountForExtenalApplicantsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateAccountForExtenalApplicantsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateAccountForExtenalApplicantsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ForgotPasswordtForExtenalApplicantsCompletedEventHandler(object sender, ForgotPasswordtForExtenalApplicantsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ForgotPasswordtForExtenalApplicantsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ForgotPasswordtForExtenalApplicantsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591